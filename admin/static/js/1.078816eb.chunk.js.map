{"version":3,"sources":["redux/actions/table.js","redux/constants/other.js","component/Add/Blog.js","component/Add/Car.js","component/Add/Point.js","component/Add/Region.js","component/Add/Realizator.js","component/Add/Realizators.js","component/Add/Organizator.js","component/Add/ZavSklad.js","component/Add/Price.js","redux/actions/mini_dialog.js"],"names":["setData","payload","_ref","Object","C_projects_shoro_shoro_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_projects_shoro_shoro_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","dispatch","data","_headers","i","res","row","_i","data1","_i2","_i3","_i4","wrap","_context","prev","next","FormData","append","id","search","sort","JSON","stringify","page","name","undefined","oldFile","oldFileWhatermark","file","length","accept","Accept-Language","Content-Type","concat","_boundary","X-Requested-With","Authorization","localStorage","userShoroAdmin","axios","post","headers","sent","push","options","filter","count","type","GET_DATA","t0","console","error","stop","this","_x","apply","arguments","addData","_ref2","_callee2","_i5","_i6","_i7","_i8","_context2","_x2","setSelected","SET_SELECTED","setVar","SET_VAR","getIds","_ref3","_callee3","_context3","GET_IDS","_x3","getData","_ref4","_callee4","_i9","_i10","_i11","_context4","_x4","getDataSimple","_ref5","_callee5","_context5","abrupt","_x5","deleteData","_ref6","_callee6","_i12","_i13","_i14","_context6","deleted","_x6","__webpack_require__","d","__webpack_exports__","month","width","mainWindow","current","offsetWidth","Sign","React","memo","props","showMiniDialog","mini_dialogActions","_props$tableActions","tableActions","_props$table","table","selected","_useState","useState","_useState2","slicedToArray","title","setTitle","_useState3","_useState4","text","setText","_useState5","_useState6","setFile","_useState7","_useState8","fileNames","setFileNames","handleChangeFile","asyncToGenerator","regenerator_default","event","target","files","classes","react_default","createElement","TextField_default","label","className","textField","margin","value","onChange","multiline","rowsMax","urls","htmlFor","Button_default","variant","color","component","button","onClick","style","display","withStyles","theme","spacing","unit","marginLeft","marginRight","error_message","marginTop","marginBottom","fontWeight","maxHeight","overflow","menu","connect","state","mini_dialog","bindActionCreators","number","setName","region","setRegion","regions","setRegions","useEffect","select","SelectProps","MenuProps","map","option","MenuItem_default","key","_data","phone","point","setStatus","status","setPhone","setPoint","setId","_id","setUser","user","points","setPoints","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","password","setPassword","_useState15","_useState16","statuses","_useState17","_useState18","_useState19","_useState20","realizators","setRealizators","realizator","setRealizator","price","setPrice","setMiniDialog","child","SET_MINI_DIALOG","showAddMiniDialog","store","getState","Blog","Car","Realizator","Point","Region","Organizator","ZavSklad","Price","SHOW_MINI_DIALOG","showSelectRealizators","Realizators","show"],"mappings":"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","file":"static/js/1.078816eb.chunk.js","sourcesContent":["import {\r\n    GET_DATA,\r\n    GET_IDS,\r\n    SET_SELECTED,\r\n    SET_VAR\r\n} from '../constants/table'\r\nimport axios from 'axios';\r\nimport FormData from 'form-data';\r\nimport { month } from '../constants/other'\r\n\r\nexport function setData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            let _headers;\r\n            data.append('id', payload.id);\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('new', JSON.stringify(payload.data));\r\n            if(payload.oldFile != undefined){\r\n                data.append('oldFile', payload.oldFile);\r\n            }\r\n            if(payload.oldFileWhatermark != undefined){\r\n                data.append('oldFileWhatermark', payload.oldFileWhatermark);\r\n            }\r\n            if (payload.file != undefined) {\r\n                data.append('fileLength', payload.file.length);\r\n                for(let i=0; i<payload.file.length; i++){\r\n                    data.append('file'+i, payload.file[i]);\r\n                    data.append('fileName'+i, payload.file[i].name);\r\n                }\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization': 'Bearer ' + localStorage.userShoroAdmin,\r\n                }\r\n            } else {\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userShoroAdmin,\r\n                }\r\n            }\r\n            const res = await axios.post(\r\n                '/data/add',\r\n                data,\r\n                {headers: _headers});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name=='Реализатор'){\r\n                for(let i=0; i<res.data.data.length; i++)\r\n                    data1[i] = [res.data.data[i][0], res.data.data[i][1], res.data.data[i][2]]\r\n            }\r\n            else if(payload.name=='Организатор'){\r\n                for(let i=0; i<res.data.data.length; i++)\r\n                    data1[i] = [res.data.data[i][0], res.data.data[i][1]]\r\n            }\r\n            else if(payload.name=='Завсклада'){\r\n                for(let i=0; i<res.data.data.length; i++)\r\n                    data1[i] = [res.data.data[i][0]]\r\n            }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function addData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            let _headers;\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('new', JSON.stringify(payload.data));\r\n            if (payload.file != undefined) {\r\n                data.append('fileLength', payload.file.length);\r\n                for(let i=0; i<payload.file.length; i++){\r\n                    data.append('file'+i, payload.file[i]);\r\n                    data.append('fileName'+i, payload.file[i].name);\r\n                }\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization': 'Bearer ' + localStorage.userShoroAdmin\r\n                }\r\n            } else {\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userShoroAdmin,\r\n                }\r\n            }\r\n            const res = await axios.post(\r\n                '/data/add',\r\n                data,\r\n                {headers: _headers});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name=='Реализатор'){\r\n                for(let i=0; i<res.data.data.length; i++)\r\n                    data1[i] = [res.data.data[i][0], res.data.data[i][1], res.data.data[i][2]]\r\n            }\r\n            else if(payload.name=='Организатор'){\r\n                for(let i=0; i<res.data.data.length; i++)\r\n                    data1[i] = [res.data.data[i][0], res.data.data[i][1]]\r\n            }\r\n            else if(payload.name=='Завсклада'){\r\n                for(let i=0; i<res.data.data.length; i++)\r\n                    data1[i] = [res.data.data[i][0]]\r\n            }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function setSelected(payload) {\r\n    return {\r\n        type: SET_SELECTED,\r\n        payload: payload\r\n    }\r\n}\r\nexport function setVar(payload) {\r\n    return {\r\n        type: SET_VAR,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function getIds(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('name', payload);\r\n            const res = await axios.post(\r\n                '/data/getIds',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userShoroAdmin,\r\n                }});\r\n            dispatch({\r\n                type: GET_IDS,\r\n                payload: res.data\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function getData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            const res = await axios.post(\r\n                '/data/get',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userShoroAdmin,\r\n                }});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name=='Реализатор'){\r\n                for(let i=0; i<res.data.data.length; i++)\r\n                    data1[i] = [res.data.data[i][0], res.data.data[i][1], res.data.data[i][2]]\r\n            }\r\n            else if(payload.name=='Организатор'){\r\n                for(let i=0; i<res.data.data.length; i++)\r\n                    data1[i] = [res.data.data[i][0], res.data.data[i][1]]\r\n            }\r\n            else if(payload.name=='Завсклада'){\r\n                for(let i=0; i<res.data.data.length; i++)\r\n                    data1[i] = [res.data.data[i][0]]\r\n            }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport const getDataSimple = async (payload) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('name', payload.name);\r\n            if(payload.data!==undefined)\r\n                data.append('data', JSON.stringify(payload.data));\r\n            const res = await axios.post(\r\n                '/data/get',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userShoroAdmin,\r\n                }});\r\n            return res.data\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n}\r\n\r\nexport function deleteData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('deleted', payload.deleted);\r\n            if(payload.oldFile != undefined && payload.oldFile.length > 0){\r\n                data.append('oldFile', payload.oldFile);\r\n            }\r\n            const res = await axios.post(\r\n                '/data/delete',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userShoroAdmin,\r\n                }});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name=='Реализатор'){\r\n                for(let i=0; i<res.data.data.length; i++)\r\n                    data1[i] = [res.data.data[i][0], res.data.data[i][1], res.data.data[i][2]]\r\n            }\r\n            else if(payload.name=='Организатор'){\r\n                for(let i=0; i<res.data.data.length; i++)\r\n                    data1[i] = [res.data.data[i][0], res.data.data[i][1]]\r\n            }\r\n            else if(payload.name=='Завсклада'){\r\n                for(let i=0; i<res.data.data.length; i++)\r\n                    data1[i] = [res.data.data[i][0]]\r\n            }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}","export const month = [\r\n    'январь',\r\n    'февраль',\r\n    'март',\r\n    'апрель',\r\n    'май',\r\n    'июнь',\r\n    'июль',\r\n    'август',\r\n    'сентябрь',\r\n    'октябрь',\r\n    'ноябрь',\r\n    'декабрь'\r\n]\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [title, setTitle] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleTitle =  (event) => {\r\n            setTitle(event.target.value)\r\n        };\r\n        let [text, setText] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleText =  (event) => {\r\n            setText(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = (async (event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='заголовок'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={title}\r\n                    onChange={handleTitle}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='текст'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={text}\r\n                    onChange={handleText}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Блог', file: file, data: {text: text, name: title}});\r\n                        else\r\n                            setData({id: data[selected][1], search: search, sort: sort, page: page, name: 'Блог', oldFile: data[selected][0], oldFileWhatermark: data[selected][1], file: file, data: {text: text, name: title}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [title, setTitle] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleTitle =  (event) => {\r\n            setTitle(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='номер'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={title}\r\n                    onChange={handleTitle}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Машина', data: {number: title}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'Машина', data: {number: title}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [region, setRegion] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleRegion =  (event) => {\r\n            setRegion(event.target.value)\r\n        };\r\n        let [regions, setRegions] = useState([]);\r\n        useEffect(async ()=>{\r\n            let data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n            setRegions(data)\r\n        },[])\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    label='регион'\r\n                    className={classes.textField}\r\n                    value={region}\r\n                    onChange={handleRegion}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {regions.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Точка',  data: {name: name, region: region}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'Точка', data: {name: name, region: region}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Регион',  data: {name: name}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'Регион', data: {name: name}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        useEffect(async ()=>{\r\n            let _data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n            setRegions(_data)\r\n            if(selected!==-1){\r\n                _data = await tableActions.getDataSimple({name: 'РеализаторПоИмени', data: {phone: data[selected][3], name: data[selected][0], point: data[selected][1], region: data[selected][2]}})\r\n                setStatus(_data.status);\r\n                setName(_data.name);\r\n                setPhone(_data.phone);\r\n                setRegion(_data.region);\r\n                setPoint(_data.point);\r\n                setId(_data._id)\r\n                setUser(_data.user)\r\n            }\r\n        },[])\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][3]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        let [points, setPoints] = useState([]);\r\n        let [point, setPoint] = useState(selected!==-1?data[selected][1]:'');\r\n        let handlePoint =  (event) => {\r\n            setPoint(event.target.value)\r\n        };\r\n        let [regions, setRegions] = useState([]);\r\n        let [region, setRegion] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleRegion =  (event) => {\r\n            setRegion(event.target.value)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        let [id, setId] = useState('');\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState('');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [user, setUser] = useState('');\r\n        const { classes } = props;\r\n        useEffect(async ()=>{\r\n            let _data = await tableActions.getDataSimple({name: 'ТочкаПоРегиону', data: {region: region}})\r\n            setPoints(_data)\r\n        },[region])\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    label='регион'\r\n                    className={classes.textField}\r\n                    value={region}\r\n                    onChange={handleRegion}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {regions.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    label='точка'\r\n                    className={classes.textField}\r\n                    value={point}\r\n                    onChange={handlePoint}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {points.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='пароль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={password}\r\n                    onChange={handlePassword}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Реализатор', data: {name:name, phone: phone, status: status, point: point, region: region, password: password}});\r\n                        else\r\n                            setData({id: id, search: search, sort: sort, page: page, name: 'Реализатор', data: {user: user, name:name, status: status, phone: phone, point: point, region: region, password: password}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { classes } = props;\r\n        let [realizators, setRealizators] = useState([]);\r\n        let [realizator, setRealizator] = useState('');\r\n        let handleRealizator =  (event) => {\r\n            setRealizator(event.target.value)\r\n        };\r\n        useEffect(async ()=>{\r\n            let _data\r\n            _data = await tableActions.getDataSimple({name: 'ТочкаВсе'})\r\n            setRealizators(_data)\r\n        },[])\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    select\r\n                    label='точка'\r\n                    className={classes.textField}\r\n                    value={realizator}\r\n                    onChange={handleRealizator}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {realizators.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        useEffect(async ()=>{\r\n            let _data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n            setRegions(_data)\r\n            if(selected!==-1){\r\n                _data = await tableActions.getDataSimple({name: 'ОрганизаторПоИмени', data: {phone: data[selected][2]}})\r\n                setStatus(_data.status);\r\n                setName(_data.name);\r\n                setPhone(_data.phone);\r\n                setRegion(_data.region);\r\n                setId(_data._id)\r\n                setUser(_data.user)\r\n            }\r\n        },[])\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][2]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        let [regions, setRegions] = useState([]);\r\n        let [region, setRegion] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleRegion =  (event) => {\r\n            setRegion(event.target.value)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        let [id, setId] = useState('');\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState('');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [user, setUser] = useState('');\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    label='регион'\r\n                    className={classes.textField}\r\n                    value={region}\r\n                    onChange={handleRegion}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {regions.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='пароль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={password}\r\n                    onChange={handlePassword}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Организатор', data: {name:name, phone: phone, status: status, region: region, password: password}});\r\n                        else\r\n                            setData({id: id, search: search, sort: sort, page: page, name: 'Организатор', data: {user: user, name:name, status: status, phone: phone, region: region, password: password}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        useEffect(async ()=>{\r\n            if(selected!==-1){\r\n                let _data = await tableActions.getDataSimple({name: 'ЗавскладаПоИмени', data: {phone: data[selected][1]}})\r\n                setStatus(_data.status);\r\n                setName(_data.name);\r\n                setPhone(_data.phone);\r\n                setId(_data._id)\r\n                setUser(_data.user)\r\n            }\r\n        },[])\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][1]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        let [id, setId] = useState('');\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState('');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [user, setUser] = useState('');\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='пароль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={password}\r\n                    onChange={handlePassword}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Завсклада', data: {name:name, phone: phone, status: status, password: password}});\r\n                        else\r\n                            setData({id: id, search: search, sort: sort, page: page, name: 'Завсклада', data: {user: user, name:name, status: status, phone: phone, password: password}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let names = ['Максым', 'Чалап', 'Квас', 'Стакан Легенда']\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [price, setPrice] = useState(selected!==-1?data[selected][1]:'');\r\n        let handlePrice =  (event) => {\r\n            setPrice(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    select\r\n                    label='название'\r\n                    className={classes.textField}\r\n                    value={name}\r\n                    onChange={handleName}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {names.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='цена'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={price}\r\n                    onChange={handlePrice}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Цена',  data: {name: name, price: price}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'Цена', data: {name: name, price: price}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import { SET_MINI_DIALOG, SHOW_MINI_DIALOG } from '../constants/mini_dialog'\r\nimport React from 'react'\r\nimport {\r\n    store\r\n} from '../../index'\r\nimport Blog from '../../component/Add/Blog';\r\nimport Car from '../../component/Add/Car';\r\nimport Point from '../../component/Add/Point';\r\nimport Region from '../../component/Add/Region';\r\nimport Realizator from '../../component/Add/Realizator';\r\nimport Realizators from '../../component/Add/Realizators';\r\nimport Organizator from '../../component/Add/Organizator';\r\nimport ZavSklad from '../../component/Add/ZavSklad';\r\nimport Price from '../../component/Add/Price';\r\n\r\nexport function setMiniDialog(title,child) {\r\n    return {\r\n        type: SET_MINI_DIALOG,\r\n        payload: {title: title, child: child}\r\n    }\r\n}\r\n\r\nexport function showAddMiniDialog() {\r\n    return async (dispatch) => {\r\n        if(store.getState().table.name!=''){\r\n            let child;\r\n            if(store.getState().table.name=='Блог')\r\n                child = <Blog/>\r\n            else if(store.getState().table.name=='Машина')\r\n                child = <Car/>\r\n            else if(store.getState().table.name=='Реализатор')\r\n                child = <Realizator/>\r\n            else if(store.getState().table.name=='Точка')\r\n                child = <Point/>\r\n            else if(store.getState().table.name=='Регион')\r\n                child = <Region/>\r\n            else if(store.getState().table.name=='Организатор')\r\n                child = <Organizator/>\r\n            else if(store.getState().table.name=='Завсклада')\r\n                child = <ZavSklad/>\r\n            else if(store.getState().table.name=='Цена')\r\n                child = <Price/>\r\n            dispatch ({\r\n                type: SET_MINI_DIALOG,\r\n                payload: {title: store.getState().table.name, child: child}\r\n            })\r\n            dispatch ({\r\n                type: SHOW_MINI_DIALOG,\r\n                payload: true\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function showSelectRealizators() {\r\n    return async (dispatch) => {\r\n        let child = <Realizators/>\r\n        dispatch ({\r\n            type: SET_MINI_DIALOG,\r\n            payload: {title: 'Реализатор', child: child}\r\n        })\r\n        dispatch ({\r\n            type: SHOW_MINI_DIALOG,\r\n            payload: true\r\n        })\r\n    }\r\n}\r\n\r\nexport function showMiniDialog(show) {\r\n    return {\r\n        type: SHOW_MINI_DIALOG,\r\n        payload: show\r\n    }\r\n}\r\n"],"sourceRoot":""}