{"version":3,"sources":["component/Add/Blog.js","component/Add/Car.js","component/Add/Point.js","component/Add/Region.js","component/Add/Realizator.js","component/Add/Realizators.js","component/Add/Organizator.js","component/Add/ZavSklad.js","component/Add/Price.js","component/Add/Delete.js","redux/actions/mini_dialog.js"],"names":["width","undefined","mainWindow","current","offsetWidth","Sign","React","memo","props","showMiniDialog","mini_dialogActions","_props$tableActions","tableActions","setSelected","addData","setData","_props$table","table","selected","data","page","search","sort","_useState","useState","_useState2","Object","slicedToArray","title","setTitle","_useState3","_useState4","text","setText","_useState5","_useState6","file","setFile","_useState7","_useState8","fileNames","setFileNames","handleChangeFile","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","event","i","wrap","_context","prev","next","target","files","length","name","stop","this","_x","apply","arguments","classes","react_default","createElement","TextField_default","label","type","className","textField","margin","value","onChange","multiline","rowsMax","urls","htmlFor","Button_default","variant","color","component","button","onClick","id","oldFile","oldFileWhatermark","accept","style","display","withStyles","theme","spacing","unit","marginLeft","marginRight","error_message","marginTop","marginBottom","fontWeight","maxHeight","overflow","menu","connect","state","mini_dialog","dispatch","bindActionCreators","number","profile","app","setName","region","setRegion","regions","setRegions","useEffect","sent","user","status","role","select","SelectProps","MenuProps","map","option","MenuItem_default","key","_data","phone","point","setStatus","setPhone","setPoint","setId","_id","setUser","points","setPoints","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","password","setPassword","_useState15","_useState16","statuses","_useState17","_useState18","_useState19","_useState20","_callee2","_context2","realizators","setRealizators","realizator","setRealizator","price","setPrice","deletedId","deleteData","deleted","JSON","stringify","setMiniDialog","child","SET_MINI_DIALOG","payload","showAddMiniDialog","store","getState","Blog","Car","Realizator","Point","Region","Organizator","ZavSklad","Price","SHOW_MINI_DIALOG","showSelectRealizators","_ref2","Realizators","_x2","showDelete","_ref3","_callee3","_context3","Delete","_x3","show"],"mappings":"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","file":"static/js/1.0d301160.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [title, setTitle] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleTitle =  (event) => {\r\n            setTitle(event.target.value)\r\n        };\r\n        let [text, setText] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleText =  (event) => {\r\n            setText(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = (async (event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='заголовок'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={title}\r\n                    onChange={handleTitle}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='текст'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={text}\r\n                    onChange={handleText}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Блог', file: file, data: {text: text, name: title}});\r\n                        else\r\n                            setData({id: data[selected][1], search: search, sort: sort, page: page, name: 'Блог', oldFile: data[selected][0], oldFileWhatermark: data[selected][1], file: file, data: {text: text, name: title}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [title, setTitle] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleTitle =  (event) => {\r\n            setTitle(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='номер'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={title}\r\n                    onChange={handleTitle}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Машина', data: {number: title}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'Машина', data: {number: title}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        const { profile } = props.app;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [region, setRegion] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleRegion =  (event) => {\r\n            setRegion(event.target.value)\r\n        };\r\n        let [regions, setRegions] = useState([]);\r\n        useEffect(async ()=>{\r\n            let data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n            setRegions(data)\r\n            if(props.user.status.role==='организатор') setRegion(profile.region)\r\n        },[])\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                {selected!==-1||props.user.status.role==='организатор'?\r\n                    <div className=\"textField\">{region}</div>\r\n                    :\r\n                    <TextField\r\n                        select\r\n                        label='регион'\r\n                        className={classes.textField}\r\n                        value={region}\r\n                        onChange={handleRegion}\r\n                        SelectProps={{\r\n                            MenuProps: {\r\n                                className: classes.menu,\r\n                            },\r\n                        }}\r\n                        margin='normal'\r\n                    >\r\n                        {regions.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        }\r\n                    </TextField>\r\n                }\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Точка',  data: {name: name, region: region}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'Точка', data: {name: name, region: region}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        user: state.user,\r\n        table: state.table,\r\n        app: state.app,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Регион',  data: {name: name}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'Регион', data: {name: name}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        useEffect(async ()=>{\r\n            let _data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n            setRegions(_data)\r\n            if(selected!==-1){\r\n                _data = await tableActions.getDataSimple({name: 'РеализаторПоИмени', data: {phone: data[selected][3], name: data[selected][0], point: data[selected][1], region: data[selected][2]}})\r\n                setStatus(_data.status);\r\n                setName(_data.name);\r\n                setPhone(_data.phone);\r\n                setRegion(_data.region);\r\n                setPoint(_data.point);\r\n                setId(_data._id)\r\n                setUser(_data.user)\r\n            }\r\n        },[])\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        const { profile } = props.app;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][3]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        let [points, setPoints] = useState([]);\r\n        let [point, setPoint] = useState(selected!==-1?data[selected][1]:'');\r\n        let handlePoint =  (event) => {\r\n            setPoint(event.target.value)\r\n        };\r\n        let [regions, setRegions] = useState([]);\r\n        let [region, setRegion] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleRegion =  (event) => {\r\n            setRegion(event.target.value)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        let [id, setId] = useState('');\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState('');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [user, setUser] = useState('');\r\n        const { classes } = props;\r\n        useEffect(async ()=>{\r\n            let _data = await tableActions.getDataSimple({name: 'ТочкаПоРегиону', data: {region: region}})\r\n            setPoints(_data)\r\n        },[region])\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    label='регион'\r\n                    className={classes.textField}\r\n                    value={region}\r\n                    onChange={handleRegion}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {regions.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                < br />\r\n                <TextField\r\n                    select\r\n                    label='точка'\r\n                    className={classes.textField}\r\n                    value={point}\r\n                    onChange={handlePoint}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {points.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='пароль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={password}\r\n                    onChange={handlePassword}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Реализатор', data: {name:name, phone: phone, status: status, point: point, region: region, password: password}});\r\n                        else\r\n                            setData({id: id, search: search, sort: sort, page: page, name: 'Реализатор', data: {user: user, name:name, status: status, phone: phone, point: point, region: region, password: password}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n        user: state.user,\r\n        app: state.app,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { classes } = props;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setPoint } = props.tableActions;\r\n        let [realizators, setRealizators] = useState([]);\r\n        let [realizator, setRealizator] = useState('');\r\n        let handleRealizator =  (event) => {\r\n            setRealizator(event.target.value)\r\n        };\r\n        useEffect(async ()=>{\r\n            let _data\r\n            _data = await tableActions.getDataSimple({name: 'ТочкаВсе'})\r\n            setRealizators(_data)\r\n        },[])\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    select\r\n                    label='точка'\r\n                    className={classes.textField}\r\n                    value={realizator}\r\n                    onChange={handleRealizator}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {realizators.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={async()=>{\r\n                        if(realizator!==''){\r\n                            let _data = await tableActions.getDataSimple({name: 'РеализаторПоТочке', data: {point: realizator}})\r\n                            setPoint(_data)\r\n                        }\r\n                        showMiniDialog(false)\r\n                    }} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        useEffect(async ()=>{\r\n            let _data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n            setRegions(_data)\r\n            if(selected!==-1){\r\n                _data = await tableActions.getDataSimple({name: 'ОрганизаторПоИмени', data: {phone: data[selected][2]}})\r\n                setStatus(_data.status);\r\n                setName(_data.name);\r\n                setPhone(_data.phone);\r\n                setRegion(_data.region);\r\n                setId(_data._id)\r\n                setUser(_data.user)\r\n            }\r\n        },[])\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][2]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        let [regions, setRegions] = useState([]);\r\n        let [region, setRegion] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleRegion =  (event) => {\r\n            setRegion(event.target.value)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        let [id, setId] = useState('');\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState('');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [user, setUser] = useState('');\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    label='регион'\r\n                    className={classes.textField}\r\n                    value={region}\r\n                    onChange={handleRegion}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {regions.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='пароль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={password}\r\n                    onChange={handlePassword}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Организатор', data: {name:name, phone: phone, status: status, region: region, password: password}});\r\n                        else\r\n                            setData({id: id, search: search, sort: sort, page: page, name: 'Организатор', data: {user: user, name:name, status: status, phone: phone, region: region, password: password}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        useEffect(async ()=>{\r\n            if(selected!==-1){\r\n                let _data = await tableActions.getDataSimple({name: 'ЗавскладаПоИмени', data: {phone: data[selected][1]}})\r\n                setStatus(_data.status);\r\n                setName(_data.name);\r\n                setPhone(_data.phone);\r\n                setId(_data._id)\r\n                setUser(_data.user)\r\n            }\r\n        },[])\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][1]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        let [id, setId] = useState('');\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState('');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [user, setUser] = useState('');\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='пароль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={password}\r\n                    onChange={handlePassword}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Завсклада', data: {name:name, phone: phone, status: status, password: password}});\r\n                        else\r\n                            setData({id: id, search: search, sort: sort, page: page, name: 'Завсклада', data: {user: user, name:name, status: status, phone: phone, password: password}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let names = ['Максым', 'Чалап', 'Квас', 'Стакан Легенда']\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [price, setPrice] = useState(selected!==-1?data[selected][1]:'');\r\n        let handlePrice =  (event) => {\r\n            setPrice(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    select\r\n                    label='название'\r\n                    className={classes.textField}\r\n                    value={name}\r\n                    onChange={handleName}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {names.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='цена'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={price}\r\n                    onChange={handlePrice}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Цена',  data: {name: name, price: price}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'Цена', data: {name: name, price: price}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { classes } = props;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { page, name, search, sort, deletedId, oldFile } = props.table;\r\n        const { deleteData } = props.tableActions;\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={async()=>{\r\n                        deleteData({oldFile: oldFile, search: search, sort: sort, page: page, name: name, deleted: deletedId})\r\n                        showMiniDialog(false)\r\n                    }} className={classes.button}>\r\n                        Удалить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{\r\n                        deleteData({oldFile: [], search: search, sort: sort, page: page, name: name, deleted: JSON.stringify([])})\r\n                        showMiniDialog(false)\r\n                    }} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import { SET_MINI_DIALOG, SHOW_MINI_DIALOG } from '../constants/mini_dialog'\r\nimport React from 'react'\r\nimport {\r\n    store\r\n} from '../../index'\r\nimport Blog from '../../component/Add/Blog';\r\nimport Car from '../../component/Add/Car';\r\nimport Point from '../../component/Add/Point';\r\nimport Region from '../../component/Add/Region';\r\nimport Realizator from '../../component/Add/Realizator';\r\nimport Realizators from '../../component/Add/Realizators';\r\nimport Organizator from '../../component/Add/Organizator';\r\nimport ZavSklad from '../../component/Add/ZavSklad';\r\nimport Price from '../../component/Add/Price';\r\nimport Delete from '../../component/Add/Delete';\r\n\r\nexport function setMiniDialog(title,child) {\r\n    return {\r\n        type: SET_MINI_DIALOG,\r\n        payload: {title: title, child: child}\r\n    }\r\n}\r\n\r\nexport function showAddMiniDialog() {\r\n    return async (dispatch) => {\r\n        if(store.getState().table.name!=''){\r\n            let child;\r\n            if(store.getState().table.name=='Блог')\r\n                child = <Blog/>\r\n            else if(store.getState().table.name=='Машина')\r\n                child = <Car/>\r\n            else if(store.getState().table.name=='Реализатор')\r\n                child = <Realizator/>\r\n            else if(store.getState().table.name=='Точка')\r\n                child = <Point/>\r\n            else if(store.getState().table.name=='Регион')\r\n                child = <Region/>\r\n            else if(store.getState().table.name=='Организатор')\r\n                child = <Organizator/>\r\n            else if(store.getState().table.name=='Завсклада')\r\n                child = <ZavSklad/>\r\n            else if(store.getState().table.name=='Цена')\r\n                child = <Price/>\r\n            dispatch ({\r\n                type: SET_MINI_DIALOG,\r\n                payload: {title: store.getState().table.name, child: child}\r\n            })\r\n            dispatch ({\r\n                type: SHOW_MINI_DIALOG,\r\n                payload: true\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function showSelectRealizators() {\r\n    return async (dispatch) => {\r\n        let child = <Realizators/>\r\n        dispatch ({\r\n            type: SET_MINI_DIALOG,\r\n            payload: {title: 'Реализатор', child: child}\r\n        })\r\n        dispatch ({\r\n            type: SHOW_MINI_DIALOG,\r\n            payload: true\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function showDelete() {\r\n    return async (dispatch) => {\r\n        let child = <Delete/>\r\n        dispatch ({\r\n            type: SET_MINI_DIALOG,\r\n            payload: {title: 'Удалить?', child: child}\r\n        })\r\n        dispatch ({\r\n            type: SHOW_MINI_DIALOG,\r\n            payload: true\r\n        })\r\n    }\r\n}\r\n\r\nexport function showMiniDialog(show) {\r\n    return {\r\n        type: SHOW_MINI_DIALOG,\r\n        payload: show\r\n    }\r\n}\r\n"],"sourceRoot":""}