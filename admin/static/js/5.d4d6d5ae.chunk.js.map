{"version":3,"sources":["pages/FAQ.js"],"names":["datePicker","React","createRef","Plan","memo","props","handleScroll","_ref","Object","C_projects_shoro_shoro_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","C_projects_shoro_shoro_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","a","mark","_callee","_data","wrap","_context","prev","next","window","pageYOffset","outerHeight","document","documentElement","offsetHeight","tableActions","name","skip","list","length","sent","setList","stop","this","apply","arguments","classes","status","user","_useState","useState","_useState2","C_projects_shoro_shoro_admin_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","useEffect","addEventListener","removeEventListener","_fetchData","_callee2","_context2","includes","role","history","push","undefined","fetchData","show","id","C_projects_shoro_shoro_admin_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_4___default","createElement","map","element","idx","key","className","text","Fragment","renderHTML","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_9___default","variant","onClick","button","Event","propTypes","PropTypes","object","isRequired","withStyles","theme","width","margin","spacing","unit","connect","state"],"mappings":"kRAQaA,EAAaC,IAAMC,YAS1BC,EAAOF,IAAMG,KACf,SAACC,GACG,IAAIC,EAAY,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACbC,OAAOC,YAAYD,OAAOE,YAAYC,SAASC,gBAAgBC,aAAa,KAD/D,CAAAR,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAEMO,gBAA2B,CAACC,KAAM,MAAOC,KAAMC,EAAKC,SAF1D,OAERf,EAFQE,EAAAc,KAGZC,EAAQjB,GAHI,wBAAAE,EAAAgB,SAAAnB,EAAAoB,SAAJ,yBAAA1B,EAAA2B,MAAAD,KAAAE,YAAA,GAMRC,EAAY/B,EAAZ+B,QACAC,EAAWhC,EAAMiC,KAAjBD,OARFE,EASgBC,mBAAS,IATzBC,EAAAjC,OAAAkC,EAAA,EAAAlC,CAAA+B,EAAA,GASDX,EATCa,EAAA,GASKV,EATLU,EAAA,GAUNE,oBAAU,WAEN,OADAxB,OAAOyB,iBAAiB,SAAUtC,GAC3B,WACHa,OAAO0B,oBAAoB,SAAUvC,MAG7CqC,oBAAW,WAAI,SAAAG,IAAA,OAAAA,EAAAtC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KACX,SAAAmC,IAAA,IAAAjC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,aAC0B,WAAhBmB,EAAOA,QAAmB,CAAC,QAAS,qEAAe,gEAAcY,SAASZ,EAAOa,OACnF7C,EAAM8C,QAAQC,KAAK,KAF3BJ,EAAA9B,KAAA,EAIsBO,gBAA2B,CAACC,KAAM,MAAOC,KAAMC,EAAKC,SAJ1E,YAKewB,KADPvC,EAJRkC,EAAAlB,OAMQC,EAAQjB,GANhB,wBAAAkC,EAAAhB,SAAAe,EAAAd,UADWC,MAAAD,KAAAE,YAAA,WAAAW,EAAAZ,MAAAD,KAAAE,WASXmB,IACF,IACF,IAAIC,EAAO,SAACC,EAAID,GACZ3B,EAAK4B,GAAID,KAAOA,EAChBxB,EAAQvB,OAAAiD,EAAA,EAAAjD,CAAIoB,KAGf,OACG8B,EAAA/C,EAAAgD,cAAA,WACID,EAAA/C,EAAAgD,cAAA,WACAD,EAAA/C,EAAAgD,cAAA,sBAEUN,GAANzB,GAAiBA,EAAKC,OAAO,EACzBD,EAAKgC,IAAI,SAACC,EAASC,GACf,OACIJ,EAAA/C,EAAAgD,cAAA,UAASI,IAAKD,GACVJ,EAAA/C,EAAAgD,cAAA,OAAKK,UAAU,QACVN,EAAA/C,EAAAgD,cAAA,KAAGK,UAAU,cACTH,EAAQnC,MAEbgC,EAAA/C,EAAAgD,cAAA,WACAD,EAAA/C,EAAAgD,cAAA,gBACoBN,IAAfQ,EAAQI,WAAiCZ,IAAfQ,EAAQN,MAAkBM,EAAQN,KACzDG,EAAA/C,EAAAgD,cAAAD,EAAA/C,EAAAuD,SAAA,KACAR,EAAA/C,EAAAgD,cAAA,OAAKK,UAAU,aACVG,IAAWN,EAAQI,OAExBP,EAAA/C,EAAAgD,cAACS,EAAAzD,EAAD,CAAQ0D,QAAQ,WAAWC,QAAS,WAAKf,EAAKO,GAAK,IAASE,UAAW5B,EAAQmC,QAA/E,qDAKAb,EAAA/C,EAAAgD,cAACS,EAAAzD,EAAD,CAAQ0D,QAAQ,WAAWC,QAAS,WAAKf,EAAKO,GAAK,IAAQE,UAAW5B,EAAQmC,QAA9E,sDAMZb,EAAA/C,EAAAgD,cAAA,cAIZ,QAiBxBa,MAAMC,UAAY,CACdrC,QAASsC,IAAUC,OAAOC,YAGfC,+BAhGA,SAAAC,GAAK,MAAK,CACrBP,OAAQ,CACJQ,MAAO,QACPC,OAAQF,EAAMG,QAAQC,QA6FfL,CAAmBM,YAflC,SAA0BC,GACtB,MAAO,CACH9C,KAAM8C,EAAM9C,OAIpB,WACI,MAAO,IAQuB6C,CAA6ChF","file":"static/js/5.d4d6d5ae.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'\nimport * as tableActions from '../redux/actions/table'\nimport Button from '@material-ui/core/Button';\nimport renderHTML from 'react-render-html';\n\nexport const datePicker = React.createRef();\n\nconst styles = theme => ({\n    button: {\n        width: '200px',\n        margin: theme.spacing.unit,\n    },\n});\n\nconst Plan = React.memo(\n    (props) =>{\n        let handleScroll =  async () => {\n            if(window.pageYOffset+window.outerHeight>document.documentElement.offsetHeight-100) {\n                let _data = await tableActions.getDataSimple({name: 'FAQ', skip: list.length})\n                setList(_data)\n            }\n        }\n        const { classes } = props;\n        const { status } = props.user;\n        let [list, setList] = useState([]);\n        useEffect(()=>{\n            window.addEventListener('scroll', handleScroll);\n            return ()=>{\n                window.removeEventListener('scroll', handleScroll);\n            }\n        });\n        useEffect( ()=>{\n            async function fetchData() {\n                if (!(status.status==='active'&&['admin', 'организатор', 'реализатор'].includes(status.role))) {\n                    props.history.push('/')\n                }\n                let _data = await tableActions.getDataSimple({name: 'FAQ', skip: list.length})\n                if(_data!==undefined)\n                    setList(_data)\n            }\n            fetchData();\n        },[])\n        let show = (id, show)=> {\n            list[id].show = show\n            setList([...list])\n        }\n\n         return (\n            <div>\n                <br/>\n                <h1>FAQ</h1>\n                {\n                    list!=undefined&&list.length>0?\n                        list.map((element, idx)=> {\n                            return(\n                                <center  key={idx}>\n                                    <div className='blog'>\n                                         <b className=\"blog-title\">\n                                            {element.name}\n                                        </b>\n                                        <br/>\n                                        <div>\n                                            {element.text!==undefined&&element.show!==undefined&&element.show?\n                                                <>\n                                                <div className='blog-text'>\n                                                    {renderHTML(element.text)}\n                                                </div>\n                                                <Button variant='outlined' onClick={()=>{show(idx, false)}} className={classes.button}>\n                                                    спрятать\n                                                </Button>\n                                                </>\n                                                :\n                                                <Button variant='outlined' onClick={()=>{show(idx, true)}} className={classes.button}>\n                                                    показать\n                                                </Button>\n                                            }\n                                        </div>\n                                    </div>\n                                    <br/>\n                                </center>\n                            )\n                        }):\n                        null\n                }\n            </div>\n        );\n  })\n\nfunction mapStateToProps (state) {\n    return {\n        user: state.user,\n    }\n}\n\nfunction mapDispatchToProps() {\n    return {\n    }\n}\n\nEvent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Plan));\n"],"sourceRoot":""}