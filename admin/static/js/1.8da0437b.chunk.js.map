{"version":3,"sources":["component/Add/Blog.js","component/Add/Car.js","component/Add/Point.js","component/Add/Region.js","component/Add/Realizator.js","component/Add/Realizators.js","component/Add/Organizator.js","component/Add/ZavSklad.js","component/Add/Price.js","component/Add/Delete.js","component/Add/Statistic.js","component/Add/FAQ.js","component/Add/SetRegion.js","component/Add/SetPoint.js","redux/actions/mini_dialog.js"],"names":["width","undefined","mainWindow","current","offsetWidth","Sign","React","memo","props","showMiniDialog","mini_dialogActions","showSnackBar","snackbarActions","_props$tableActions","tableActions","setSelected","addData","setData","_props$table","table","selected","data","page","search","sort","_useState","useState","_useState2","Object","slicedToArray","title","setTitle","_useState3","_useState4","text","setText","_useState5","_useState6","file","setFile","_useState7","_useState8","fileNames","setFileNames","handleChangeFile","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","event","i","wrap","_context","prev","next","target","files","length","name","stop","this","_x","apply","arguments","classes","react_default","createElement","TextField_default","label","type","className","textField","margin","value","onChange","multiline","rowsMax","urls","htmlFor","Button_default","variant","color","component","button","onClick","split","trim","id","oldFile","oldFileWhatermark","accept","style","display","withStyles","theme","spacing","unit","marginLeft","marginRight","maxHeight","overflow","connect","state","dispatch","bindActionCreators","number","setName","region","replace","InputProps","readOnly","useEffect","_fetchData","_data","sent","setRegions","phone","point","setStatus","status","setPhone","setRegion","setPoint","setId","_id","setUser","user","setGuidRegion","guidRegion","setGuidPoint","guidPoint","fetchData","points","setPoints","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","regions","_useState15","_useState16","_useState17","_useState18","password","setPassword","_useState19","_useState20","statuses","_useState21","_useState22","_useState23","_useState24","_fetchData2","_callee2","_context2","select","find","element","guid","SelectProps","MenuProps","menu","map","option","idx","MenuItem_default","key","realizators","setRealizators","realizator","setRealizator","guidRealizator","setGuidRealizator","setGuid","setRegionGuid","regionGuid","price","setPrice","deletedId","deleteData","deleted","JSON","stringify","setTypeStatistic","typeStatistic","setType","list","setList","setSearch","_data2","_data3","_data4","unshift","toLowerCase","includes","what","setSelectedRegionGeo","setSelectedPointGeo","regionGeo","setMiniDialog","child","SET_MINI_DIALOG","payload","showAddMiniDialog","store","getState","Blog","Car","Realizator","Point","Region","Organizator","ZavSklad","Price","FAQ","SHOW_MINI_DIALOG","showSelectRealizators","_ref2","Realizators","_x2","showSelectRegion","_ref3","_callee3","_context3","SetRegion","_x3","showSelectPoint","_ref4","_callee4","_context4","SetPoint","_x4","showSelectStatistic","_ref5","_callee5","_context5","Statistic","_x5","showDelete","_ref6","_callee6","_context6","Delete","_x6","show"],"mappings":"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","file":"static/js/1.8da0437b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { showSnackBar } = props.snackbarActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [title, setTitle] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleTitle =  (event) => {\r\n            setTitle(event.target.value)\r\n        };\r\n        let [text, setText] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleText =  (event) => {\r\n            setText(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = (async (event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='заголовок'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={title}\r\n                    onChange={handleTitle}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='текст'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={text}\r\n                    onChange={handleText}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1) {\r\n                            if((file[0].type).split('/')[0]==='image'||(file[0].type).split('/')[0]==='video'||(file[0].type).split('/')[0]==='audio'){\r\n                                addData({\r\n                                    search: search,\r\n                                    sort: sort,\r\n                                    page: page,\r\n                                    name: 'Блог',\r\n                                    file: file,\r\n                                    data: {type: (file[0].type).split('/')[0], text: text.trim(), name: title.trim()}\r\n                                });\r\n                                setSelected(-1)\r\n                                showMiniDialog(false)\r\n                            }\r\n                            else\r\n                                showSnackBar('Тип файла не поддерживается')\r\n                        } else {\r\n                            if(file.length===0||(file[0].type).split('/')[0]==='image'||(file[0].type).split('/')[0]==='video'||(file[0].type).split('/')[0]==='audio'){\r\n                                let type = file.length===0?data[selected][4]:(file[0].type).split('/')[0]\r\n                                setData({\r\n                                    id: data[selected][1],\r\n                                    search: search,\r\n                                    sort: sort,\r\n                                    page: page,\r\n                                    name: 'Блог',\r\n                                    oldFile: data[selected][0],\r\n                                    oldFileWhatermark: data[selected][1],\r\n                                    file: file,\r\n                                    data: {type: type, text: text.trim(), name: title.trim()}\r\n                                });\r\n\r\n                                setSelected(-1)\r\n                                showMiniDialog(false)\r\n                            } else\r\n                                showSnackBar('Тип файла не поддерживается')\r\n                        }}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='media_type'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [title, setTitle] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleTitle =  (event) => {\r\n            setTitle(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='номер'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={title}\r\n                    onChange={handleTitle}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Машина', data: {number: title.trim()}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'Машина', data: {number: title.trim()}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            let value = event.target.value\r\n            value = value.replace(' - ', '-')\r\n            setName(value)\r\n        };\r\n        let [region, setRegion] = useState(selected!==-1?data[selected][1]:'');\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='регион'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={region}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}/>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            let value = event.target.value\r\n            value = value.replace(' - ', '-')\r\n            setName(value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        useEffect(()=>{\r\n            async function fetchData() {\r\n                let _data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n                setRegions(_data)\r\n                if(selected!==-1){\r\n                    _data = await tableActions.getDataSimple({name: 'РеализаторПоИмени', data: {phone: data[selected][3], name: data[selected][0], point: data[selected][1], region: data[selected][2]}})\r\n                    setStatus(_data.status);\r\n                    setName(_data.name);\r\n                    setPhone(_data.phone);\r\n                    setRegion(_data.region);\r\n                    setPoint(_data.point);\r\n                    setId(_data._id)\r\n                    setUser(_data.user)\r\n                    setGuidRegion(_data.guidRegion);\r\n                    setGuidPoint(_data.guidPoint);\r\n                }\r\n            }\r\n            fetchData();\r\n        },[])\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][3]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        let [points, setPoints] = useState([]);\r\n        let [guidPoint, setGuidPoint] = useState(selected!==-1?data[selected][6]:'');\r\n        let [point, setPoint] = useState(selected!==-1?data[selected][1]:'');\r\n        let handlePoint =  (event) => {\r\n            setGuidPoint(event.target.value)\r\n            setPoint((points.find((element)=>{return element.guid===event.target.value})).name)\r\n        };\r\n        let [guidRegion, setGuidRegion] = useState(selected!==-1?data[selected][5]:'');\r\n        let [regions, setRegions] = useState([]);\r\n        let [region, setRegion] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleRegion =  (event) => {\r\n            setGuidRegion(event.target.value)\r\n            setRegion((regions.find((element)=>{return element.guid===event.target.value})).name)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        let [id, setId] = useState('');\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState('');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [user, setUser] = useState('');\r\n        const { classes } = props;\r\n        useEffect(()=>{\r\n            async function fetchData() {\r\n                let _data = await tableActions.getDataSimple({name: 'ТочкаПоРегиону', data: {region: guidRegion}})\r\n            setPoints(_data)\r\n            }\r\n            fetchData();\r\n        },[guidRegion])\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    label='регион'\r\n                    className={classes.textField}\r\n                    value={guidRegion}\r\n                    onChange={handleRegion}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {regions.map((option, idx) => (\r\n                        <MenuItem  key={idx} value={option.guid}>\r\n                            {option.name}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                < br />\r\n                <TextField\r\n                    select\r\n                    label='точка'\r\n                    className={classes.textField}\r\n                    value={guidPoint}\r\n                    onChange={handlePoint}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {points.map((option, idx) => (\r\n                        <MenuItem key={idx} value={option.guid}>\r\n                            {option.name}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='пароль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={password}\r\n                    onChange={handlePassword}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map((option, idx) => (\r\n                            <MenuItem  key={idx} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Реализатор', data: {name:name.trim(), phone: phone.trim(), status: status, point: point, region: region, password: password}});\r\n                        else\r\n                            setData({id: id, search: search, sort: sort, page: page, name: 'Реализатор', data: {user: user, name:name.trim(), status: status, phone: phone.trim(), point: point, region: region, password: password, guidRegion: guidRegion, guidPoint: guidPoint}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { classes } = props;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setPoint } = props.tableActions;\r\n        let [realizators, setRealizators] = useState([]);\r\n        let [realizator, setRealizator] = useState('');\r\n        let [guidRealizator, setGuidRealizator] = useState('');\r\n        let handleRealizator =  (event) => {\r\n            setGuidRealizator(event.target.value)\r\n            setRealizator((realizators.find((element)=>{return element.guid===event.target.value})).name)\r\n        };\r\n        useEffect(()=>{\r\n            async function fetchData() {\r\n                let _data\r\n                _data = await tableActions.getDataSimple({name: 'ТочкаВсе'})\r\n                setRealizators(_data)\r\n            }\r\n            fetchData();\r\n        },[])\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    select\r\n                    label='точка'\r\n                    className={classes.textField}\r\n                    value={guidRealizator}\r\n                    onChange={handleRealizator}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {realizators.map((option, idx) => (\r\n                        <MenuItem key={idx} value={option.guid}>\r\n                            {option.name}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={async()=>{\r\n                        if(realizator!==''){\r\n                            let _data = await tableActions.getDataSimple({name: 'РеализаторПоТочке', data: {point: guidRealizator}})\r\n                            setPoint(_data)\r\n                        }\r\n                        showMiniDialog(false)\r\n                    }} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        useEffect( ()=>{\r\n            async function fetchData() {\r\n                let _data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n                setRegions(_data)\r\n                if(selected!==-1){\r\n                    _data = await tableActions.getDataSimple({name: 'ОрганизаторПоИмени', data: {phone: data[selected][2]}})\r\n                    setStatus(_data.status);\r\n                    setName(_data.name);\r\n                    setPhone(_data.phone);\r\n                    setRegion(_data.region);\r\n                    setGuid(_data.guid);\r\n                    setRegionGuid(_data.guidRegion);\r\n                    setId(_data._id)\r\n                    setUser(_data.user)\r\n                }\r\n            }\r\n            fetchData();\r\n        },[])\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [guid, setGuid] = useState('');\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][2]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        let [regions, setRegions] = useState([]);\r\n        let [regionGuid, setRegionGuid] = useState(selected!==-1?data[selected][4]:'');\r\n        let [region, setRegion] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleRegion =  (event) => {\r\n            setRegionGuid(event.target.value)\r\n            setRegion((regions.find((element)=>{return element.guid===event.target.value})).name)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        let [id, setId] = useState('');\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState('');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [user, setUser] = useState('');\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    label='регион'\r\n                    className={classes.textField}\r\n                    value={regionGuid}\r\n                    onChange={handleRegion}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {regions.map((option, idx) => (\r\n                        <MenuItem key={idx} value={option.guid}>\r\n                            {option.name}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='пароль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={password}\r\n                    onChange={handlePassword}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map((option, idx) => (\r\n                            <MenuItem key={idx} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                {\r\n                    guid&&guid.length>0?\r\n                        <b>\r\n                            {guid}\r\n                        </b>\r\n                        :\r\n                        null\r\n                }\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Организатор', data: {name:name.trim(), phone: phone.trim(), status: status, region: region, password: password}});\r\n                        else\r\n                            setData({id: id, search: search, sort: sort, page: page, name: 'Организатор', data: {user: user, name:name.trim(), status: status, phone: phone.trim(), guidRegion: regionGuid, region: region, password: password}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        useEffect(()=>{\r\n            async function fetchData() {\r\n                if(selected!==-1){\r\n                    let _data = await tableActions.getDataSimple({name: 'ЗавскладаПоИмени', data: {phone: data[selected][1]}})\r\n                    setStatus(_data.status);\r\n                    setName(_data.name);\r\n                    setPhone(_data.phone);\r\n                    setId(_data._id)\r\n                    setUser(_data.user)\r\n                }\r\n            }\r\n            fetchData();\r\n        },[])\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][1]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        let [id, setId] = useState('');\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState('');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [user, setUser] = useState('');\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='пароль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={password}\r\n                    onChange={handlePassword}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map((option, idx) => (\r\n                            <MenuItem key={idx} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Завсклада', data: {name:name.trim(), phone: phone.trim(), status: status, password: password}});\r\n                        else\r\n                            setData({id: id, search: search, sort: sort, page: page, name: 'Завсклада', data: {user: user, name:name.trim(), status: status, phone: phone.trim(), password: password}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n        let names = ['Максым', 'Чалап', 'Квас', 'Стакан Легенда']\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [price, setPrice] = useState(selected!==-1?data[selected][1]:'');\r\n        let handlePrice =  (event) => {\r\n            setPrice(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    select\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    label='название'\r\n                    className={classes.textField}\r\n                    value={name}\r\n                    onChange={handleName}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {names.map((option, idx) => (\r\n                        <MenuItem key={idx} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                    label='цена'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={price}\r\n                    onChange={handlePrice}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { classes } = props;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { page, name, search, sort, deletedId, oldFile } = props.table;\r\n        const { deleteData } = props.tableActions;\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={async()=>{\r\n                        deleteData({oldFile: oldFile, search: search, sort: sort, page: page, name: name, deleted: deletedId})\r\n                        showMiniDialog(false)\r\n                    }} className={classes.button}>\r\n                        Удалить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{\r\n                        deleteData({oldFile: [], search: search, sort: sort, page: page, name: name, deleted: JSON.stringify([])})\r\n                        showMiniDialog(false)\r\n                    }} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    list: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: '400px',\r\n        overflow: 'scroll'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { classes } = props;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setTypeStatistic } = props.tableActions;\r\n        const { typeStatistic } = props.table;\r\n        let types = ['регион', 'точка', 'организатор', 'реализатор'];\r\n        let [type, setType] = useState(typeStatistic.type);\r\n        let [list, setList] = useState([]);\r\n        let handleType =  (event) => {\r\n            setType(event.target.value)\r\n        };\r\n        let [search, setSearch] = useState('');\r\n        let handleSearch =  (event) => {\r\n            setSearch(event.target.value)\r\n        };\r\n        useEffect(()=>{\r\n            async function fetchData() {\r\n                let data = [];\r\n                if(type==='регион'){\r\n                    let _data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n                    if (_data!==undefined) {\r\n                        data = _data\r\n                        data.unshift({name: 'все', guid: ''})\r\n                    }\r\n                }\r\n                else if(type==='точка'){\r\n                    let _data = await tableActions.getDataSimple({name: 'ТочкаИмя'})\r\n                    if (_data!==undefined) {\r\n                        data = _data\r\n                        data.unshift({name: 'все', guid: ''})\r\n                    }\r\n                }\r\n                else if(type==='организатор'){\r\n                    let _data = await tableActions.getDataSimple({name: 'ОрганизаторИмя'})\r\n                    if (_data!==undefined) {\r\n                        data = _data\r\n                        data.unshift({name: 'все', guid: ''})\r\n                    }\r\n                }\r\n                else if(type==='реализатор'){\r\n                    let _data = await tableActions.getDataSimple({name: 'РеализаторИмя'})\r\n                    if (_data!==undefined) {\r\n                        data = _data\r\n                        data.unshift({name: 'все', guid: ''})\r\n                    }\r\n                }\r\n                setList(data)\r\n            }\r\n            fetchData();\r\n        },[type])\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    select\r\n                    label='Тип'\r\n                    className={classes.textField}\r\n                    value={type}\r\n                    onChange={handleType}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {types.map((option, idx) => (\r\n                        <MenuItem  key={idx} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='Поиск'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={search}\r\n                    onChange={handleSearch}\r\n                />\r\n                <br/>\r\n                <div className={classes.list} >\r\n                    {list!=undefined&&list.length>0?\r\n                        list.map((element, idx)=> {\r\n                            if(element.name.toLowerCase().includes(search.toLowerCase()))\r\n                                return (\r\n                                    <Button key={idx} variant=\"outlined\" onClick={()=>{setTypeStatistic({type: type, name: element.name, what: element.guid}); showMiniDialog(false)}} className={classes.button}>\r\n                                        {element.name}\r\n                                    </Button>\r\n                                )\r\n                        }):null\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [title, setTitle] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleTitle =  (event) => {\r\n            setTitle(event.target.value)\r\n        };\r\n        let [text, setText] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleText =  (event) => {\r\n            setText(event.target.value)\r\n        };\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='заголовок'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={title}\r\n                    onChange={handleTitle}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='текст'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={text}\r\n                    onChange={handleText}\r\n                />\r\n                <br/>\r\n                 <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'FAQ', data: {text: text.trim(), name: title.trim()}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'FAQ', data: {text: text.trim(), name: title.trim()}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    list: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: '400px',\r\n        overflow: 'scroll'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { classes } = props;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelectedRegionGeo, setSelectedPointGeo } = props.tableActions;\r\n        let [list, setList] = useState([]);\r\n        let [search, setSearch] = useState('');\r\n        let handleSearch =  (event) => {\r\n            setSearch(event.target.value)\r\n        };\r\n        useEffect(()=>{\r\n            async function fetchData() {\r\n                let data = [];\r\n                let _data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n                if (_data!==undefined) {\r\n                    data = _data\r\n                    data.unshift({name: 'ВСЕ', guid: ''})\r\n                }\r\n                setList(data)\r\n            }\r\n            fetchData();\r\n        },[])\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='Поиск'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={search}\r\n                    onChange={handleSearch}\r\n                />\r\n                <br/>\r\n                <div className={classes.list}>\r\n                    {list!=undefined&&list.length>0?\r\n                        list.map((element, idx)=> {\r\n                            if(element.name.toLowerCase().includes(search.toLowerCase()))\r\n                                return (\r\n                                    <Button key={idx} variant=\"outlined\" onClick={()=>{\r\n                                        setSelectedRegionGeo({name: element.name, guid: element.guid});\r\n                                        setSelectedPointGeo({name: 'ВСЕ', guid: ''});\r\n                                        showMiniDialog(false)}} className={classes.button}>\r\n                                        {element.name}\r\n                                    </Button>\r\n                                )\r\n                        }):null\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    list: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: '400px',\r\n        overflow: 'scroll'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { classes } = props;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelectedPointGeo } = props.tableActions;\r\n        const { regionGeo } = props.table;\r\n        let [list, setList] = useState([]);\r\n        let [search, setSearch] = useState('');\r\n        let handleSearch =  (event) => {\r\n            setSearch(event.target.value)\r\n        };\r\n        useEffect(()=>{\r\n            async function fetchData() {\r\n                let data = [];\r\n                let _data = await tableActions.getDataSimple({name: 'ТочкаПоРегиону', data: {region: regionGeo.guid}})\r\n                if (_data!==undefined) {\r\n                    data = _data\r\n                    data.unshift({name: 'ВСЕ', guid: ''})\r\n                }\r\n                setList(data)\r\n            }\r\n            fetchData();\r\n        },[])\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='Поиск'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={search}\r\n                    onChange={handleSearch}\r\n                />\r\n                <br/>\r\n                <div className={classes.list} >\r\n                    {list!=undefined&&list.length>0?\r\n                        list.map((element, idx)=> {\r\n                            if(element.name.toLowerCase().includes(search.toLowerCase()))\r\n                                return (\r\n                                    <Button key={idx} variant=\"outlined\" onClick={()=>{\r\n                                        setSelectedPointGeo({name: element.name, guid: element.guid});\r\n                                        showMiniDialog(false)}} className={classes.button}>\r\n                                        {element.name}\r\n                                    </Button>\r\n                                )\r\n                        }):null\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import { SET_MINI_DIALOG, SHOW_MINI_DIALOG } from '../constants/mini_dialog'\r\nimport React from 'react'\r\nimport {\r\n    store\r\n} from '../../index'\r\nimport Blog from '../../component/Add/Blog';\r\nimport Car from '../../component/Add/Car';\r\nimport Point from '../../component/Add/Point';\r\nimport Region from '../../component/Add/Region';\r\nimport Realizator from '../../component/Add/Realizator';\r\nimport Realizators from '../../component/Add/Realizators';\r\nimport Organizator from '../../component/Add/Organizator';\r\nimport ZavSklad from '../../component/Add/ZavSklad';\r\nimport Price from '../../component/Add/Price';\r\nimport Delete from '../../component/Add/Delete';\r\nimport Statistic from '../../component/Add/Statistic';\r\nimport FAQ from '../../component/Add/FAQ';\r\nimport SetRegion from '../../component/Add/SetRegion';\r\nimport SetPoint from '../../component/Add/SetPoint';\r\n\r\nexport function setMiniDialog(title,child) {\r\n    return {\r\n        type: SET_MINI_DIALOG,\r\n        payload: {title: title, child: child}\r\n    }\r\n}\r\n\r\nexport function showAddMiniDialog() {\r\n    return async (dispatch) => {\r\n        if(store.getState().table.name!=''){\r\n            let child;\r\n            if(store.getState().table.name=='Блог')\r\n                child = <Blog/>\r\n            else if(store.getState().table.name=='Машина')\r\n                child = <Car/>\r\n            else if(store.getState().table.name=='Реализатор')\r\n                child = <Realizator/>\r\n            else if(store.getState().table.name=='Точка')\r\n                child = <Point/>\r\n            else if(store.getState().table.name=='Регион')\r\n                child = <Region/>\r\n            else if(store.getState().table.name=='Организатор')\r\n                child = <Organizator/>\r\n            else if(store.getState().table.name=='Завсклада')\r\n                child = <ZavSklad/>\r\n            else if(store.getState().table.name=='Цена')\r\n                child = <Price/>\r\n            else if(store.getState().table.name=='FAQ')\r\n                child = <FAQ/>\r\n            dispatch ({\r\n                type: SET_MINI_DIALOG,\r\n                payload: {title: store.getState().table.name, child: child}\r\n            })\r\n            dispatch ({\r\n                type: SHOW_MINI_DIALOG,\r\n                payload: true\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function showSelectRealizators() {\r\n    return async (dispatch) => {\r\n        let child = <Realizators/>\r\n        dispatch ({\r\n            type: SET_MINI_DIALOG,\r\n            payload: {title: 'Реализатор', child: child}\r\n        })\r\n        dispatch ({\r\n            type: SHOW_MINI_DIALOG,\r\n            payload: true\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function showSelectRegion() {\r\n    return async (dispatch) => {\r\n        let child = <SetRegion/>\r\n        dispatch ({\r\n            type: SET_MINI_DIALOG,\r\n            payload: {title: 'Регион', child: child}\r\n        })\r\n        dispatch ({\r\n            type: SHOW_MINI_DIALOG,\r\n            payload: true\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function showSelectPoint() {\r\n    return async (dispatch) => {\r\n        let child = <SetPoint/>\r\n        dispatch ({\r\n            type: SET_MINI_DIALOG,\r\n            payload: {title: 'Точка', child: child}\r\n        })\r\n        dispatch ({\r\n            type: SHOW_MINI_DIALOG,\r\n            payload: true\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function showSelectStatistic() {\r\n    return async (dispatch) => {\r\n        let child = <Statistic/>\r\n        dispatch ({\r\n            type: SET_MINI_DIALOG,\r\n            payload: {title: 'Статистика', child: child}\r\n        })\r\n        dispatch ({\r\n            type: SHOW_MINI_DIALOG,\r\n            payload: true\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function showDelete() {\r\n    return async (dispatch) => {\r\n        let child = <Delete/>\r\n        dispatch ({\r\n            type: SET_MINI_DIALOG,\r\n            payload: {title: 'Удалить?', child: child}\r\n        })\r\n        dispatch ({\r\n            type: SHOW_MINI_DIALOG,\r\n            payload: true\r\n        })\r\n    }\r\n}\r\n\r\nexport function showMiniDialog(show) {\r\n    return {\r\n        type: SHOW_MINI_DIALOG,\r\n        payload: show\r\n    }\r\n}\r\n"],"sourceRoot":""}