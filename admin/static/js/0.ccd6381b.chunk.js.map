{"version":3,"sources":["component/Add/Blog.js","component/Add/Car.js","component/Add/Point.js","component/Add/Region.js","component/Add/Realizator.js","component/Add/Realizators.js","component/Add/Organizator.js","component/Add/ZavSklad.js","component/Add/Price.js","component/Add/Delete.js","component/Add/Statistic.js","component/Add/FAQ.js","redux/actions/mini_dialog.js"],"names":["width","undefined","mainWindow","current","offsetWidth","Sign","React","memo","props","showMiniDialog","mini_dialogActions","_props$tableActions","tableActions","setSelected","addData","setData","_props$table","table","selected","data","page","search","sort","_useState","useState","_useState2","Object","slicedToArray","title","setTitle","_useState3","_useState4","text","setText","_useState5","_useState6","file","setFile","_useState7","_useState8","fileNames","setFileNames","handleChangeFile","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","event","i","wrap","_context","prev","next","target","files","length","name","stop","this","_x","apply","arguments","classes","react_default","createElement","TextField_default","label","type","className","textField","margin","value","onChange","multiline","rowsMax","urls","htmlFor","Button_default","variant","color","component","button","onClick","trim","id","oldFile","oldFileWhatermark","accept","style","display","withStyles","theme","spacing","unit","marginLeft","marginRight","error_message","marginTop","marginBottom","fontWeight","maxHeight","overflow","menu","connect","state","mini_dialog","dispatch","bindActionCreators","number","app","profile","setName","region","replace","InputProps","readOnly","user","useEffect","_data","sent","setRegions","phone","point","setStatus","status","setPhone","setRegion","setPoint","setId","_id","setUser","setGuidRegion","guidRegion","setGuidPoint","guidPoint","points","setPoints","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","regions","_useState15","_useState16","_useState17","_useState18","password","setPassword","_useState19","_useState20","statuses","_useState21","_useState22","_useState23","_useState24","_callee2","_context2","select","find","element","guid","SelectProps","MenuProps","map","option","MenuItem_default","key","realizators","setRealizators","realizator","setRealizator","guidRealizator","setGuidRealizator","setRegionGuid","regionGuid","price","setPrice","deletedId","deleteData","deleted","JSON","stringify","setTypeStatistic","typeStatistic","setType","list","setList","setSearch","_data2","_data3","_data4","unshift","toLowerCase","includes","what","setMiniDialog","child","SET_MINI_DIALOG","payload","showAddMiniDialog","store","getState","Blog","Car","Realizator","Point","Region","Organizator","ZavSklad","Price","FAQ","SHOW_MINI_DIALOG","showSelectRealizators","_ref2","Realizators","_x2","showSelectStatistic","_ref3","_callee3","_context3","Statistic","_x3","showDelete","_ref4","_callee4","_context4","Delete","_x4","show"],"mappings":"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","file":"static/js/0.ccd6381b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [title, setTitle] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleTitle =  (event) => {\r\n            setTitle(event.target.value)\r\n        };\r\n        let [text, setText] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleText =  (event) => {\r\n            setText(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = (async (event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='заголовок'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={title}\r\n                    onChange={handleTitle}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='текст'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={text}\r\n                    onChange={handleText}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Блог', file: file, data: {text: text.trim(), name: title.trim()}});\r\n                        else\r\n                            setData({id: data[selected][1], search: search, sort: sort, page: page, name: 'Блог', oldFile: data[selected][0], oldFileWhatermark: data[selected][1], file: file, data: {text: text.trim(), name: title.trim()}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [title, setTitle] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleTitle =  (event) => {\r\n            setTitle(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='номер'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={title}\r\n                    onChange={handleTitle}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Машина', data: {number: title.trim()}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'Машина', data: {number: title.trim()}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        const { profile } = props.app;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            let value = event.target.value\r\n            value = value.replace(' - ', '-')\r\n            setName(value)\r\n        };\r\n        let [region, setRegion] = useState(selected!==-1?data[selected][1]:'');\r\n        /*let handleRegion =  (event) => {\r\n            setRegion(event.target.value)\r\n        };\r\n        let [regions, setRegions] = useState([]);\r\n        useEffect(async ()=>{\r\n            let data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n            setRegions(data)\r\n            if(props.user.status.role==='организатор') setRegion(profile.region)\r\n        },[])*/\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='регион'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={region}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}/>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Точка',  data: {name: name.trim(), region: region}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'Точка', data: {name: name.trim(), region: region}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        user: state.user,\r\n        table: state.table,\r\n        app: state.app,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            let value = event.target.value\r\n            value = value.replace(' - ', '-')\r\n            setName(value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Регион',  data: {name: name.trim()}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'Регион', data: {name: name.trim()}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        useEffect(async ()=>{\r\n            let _data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n            setRegions(_data)\r\n            if(selected!==-1){\r\n                _data = await tableActions.getDataSimple({name: 'РеализаторПоИмени', data: {phone: data[selected][3], name: data[selected][0], point: data[selected][1], region: data[selected][2]}})\r\n                setStatus(_data.status);\r\n                setName(_data.name);\r\n                setPhone(_data.phone);\r\n                setRegion(_data.region);\r\n                setPoint(_data.point);\r\n                setId(_data._id)\r\n                setUser(_data.user)\r\n                setGuidRegion(_data.guidRegion);\r\n                setGuidPoint(_data.guidPoint);\r\n            }\r\n        },[])\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        const { profile } = props.app;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][3]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        let [points, setPoints] = useState([]);\r\n        let [guidPoint, setGuidPoint] = useState(selected!==-1?data[selected][6]:'');\r\n        let [point, setPoint] = useState(selected!==-1?data[selected][1]:'');\r\n        let handlePoint =  (event) => {\r\n            setGuidPoint(event.target.value)\r\n            setPoint((points.find((element)=>{return element.guid===event.target.value})).name)\r\n        };\r\n        let [guidRegion, setGuidRegion] = useState(selected!==-1?data[selected][5]:'');\r\n        let [regions, setRegions] = useState([]);\r\n        let [region, setRegion] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleRegion =  (event) => {\r\n            setGuidRegion(event.target.value)\r\n            setRegion((regions.find((element)=>{return element.guid===event.target.value})).name)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        let [id, setId] = useState('');\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState('');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [user, setUser] = useState('');\r\n        const { classes } = props;\r\n        useEffect(async ()=>{\r\n            let _data = await tableActions.getDataSimple({name: 'ТочкаПоРегиону', data: {region: guidRegion}})\r\n            setPoints(_data)\r\n        },[guidRegion])\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    label='регион'\r\n                    className={classes.textField}\r\n                    value={guidRegion}\r\n                    onChange={handleRegion}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {regions.map(option => (\r\n                        <MenuItem key={option.guid} value={option.guid}>\r\n                            {option.name}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                < br />\r\n                <TextField\r\n                    select\r\n                    label='точка'\r\n                    className={classes.textField}\r\n                    value={guidPoint}\r\n                    onChange={handlePoint}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {points.map(option => (\r\n                        <MenuItem key={option.guid} value={option.guid}>\r\n                            {option.name}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='пароль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={password}\r\n                    onChange={handlePassword}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Реализатор', data: {name:name.trim(), phone: phone.trim(), status: status, point: point, region: region, password: password}});\r\n                        else\r\n                            setData({id: id, search: search, sort: sort, page: page, name: 'Реализатор', data: {user: user, name:name.trim(), status: status, phone: phone.trim(), point: point, region: region, password: password, guidRegion: guidRegion, guidPoint: guidPoint}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n        user: state.user,\r\n        app: state.app,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { classes } = props;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setPoint } = props.tableActions;\r\n        let [realizators, setRealizators] = useState([]);\r\n        let [realizator, setRealizator] = useState('');\r\n        let [guidRealizator, setGuidRealizator] = useState('');\r\n        let handleRealizator =  (event) => {\r\n            setGuidRealizator(event.target.value)\r\n            setRealizator((realizators.find((element)=>{return element.guid===event.target.value})).name)\r\n        };\r\n        useEffect(async ()=>{\r\n            let _data\r\n            _data = await tableActions.getDataSimple({name: 'ТочкаВсе'})\r\n            setRealizators(_data)\r\n        },[])\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    select\r\n                    label='точка'\r\n                    className={classes.textField}\r\n                    value={guidRealizator}\r\n                    onChange={handleRealizator}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {realizators.map(option => (\r\n                        <MenuItem key={option.guid} value={option.guid}>\r\n                            {option.name}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={async()=>{\r\n                        if(realizator!==''){\r\n                            let _data = await tableActions.getDataSimple({name: 'РеализаторПоТочке', data: {point: guidRealizator}})\r\n                            setPoint(_data)\r\n                        }\r\n                        showMiniDialog(false)\r\n                    }} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        useEffect(async ()=>{\r\n            let _data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n            setRegions(_data)\r\n            if(selected!==-1){\r\n                _data = await tableActions.getDataSimple({name: 'ОрганизаторПоИмени', data: {phone: data[selected][2]}})\r\n                setStatus(_data.status);\r\n                setName(_data.name);\r\n                setPhone(_data.phone);\r\n                setRegion(_data.region);\r\n                setRegionGuid(_data.guidRegion);\r\n                setId(_data._id)\r\n                setUser(_data.user)\r\n            }\r\n        },[])\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][2]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        let [regions, setRegions] = useState([]);\r\n        let [regionGuid, setRegionGuid] = useState(selected!==-1?data[selected][4]:'');\r\n        let [region, setRegion] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleRegion =  (event) => {\r\n            setRegionGuid(event.target.value)\r\n            setRegion((regions.find((element)=>{return element.guid===event.target.value})).name)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        let [id, setId] = useState('');\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState('');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [user, setUser] = useState('');\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    }}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    label='регион'\r\n                    className={classes.textField}\r\n                    value={regionGuid}\r\n                    onChange={handleRegion}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {regions.map(option => (\r\n                        <MenuItem key={option.guid} value={option.guid}>\r\n                            {option.name}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='пароль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={password}\r\n                    onChange={handlePassword}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Организатор', data: {name:name.trim(), phone: phone.trim(), status: status, region: region, password: password}});\r\n                        else\r\n                            setData({id: id, search: search, sort: sort, page: page, name: 'Организатор', data: {user: user, name:name.trim(), status: status, phone: phone.trim(), guidRegion: regionGuid, region: region, password: password}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        useEffect(async ()=>{\r\n            if(selected!==-1){\r\n                let _data = await tableActions.getDataSimple({name: 'ЗавскладаПоИмени', data: {phone: data[selected][1]}})\r\n                setStatus(_data.status);\r\n                setName(_data.name);\r\n                setPhone(_data.phone);\r\n                setId(_data._id)\r\n                setUser(_data.user)\r\n            }\r\n        },[])\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][1]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        let [id, setId] = useState('');\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState('');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [user, setUser] = useState('');\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='пароль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={password}\r\n                    onChange={handlePassword}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Завсклада', data: {name:name.trim(), phone: phone.trim(), status: status, password: password}});\r\n                        else\r\n                            setData({id: id, search: search, sort: sort, page: page, name: 'Завсклада', data: {user: user, name:name.trim(), status: status, phone: phone.trim(), password: password}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let names = ['Максым', 'Чалап', 'Квас', 'Стакан Легенда']\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [price, setPrice] = useState(selected!==-1?data[selected][1]:'');\r\n        let handlePrice =  (event) => {\r\n            setPrice(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    select\r\n                    label='название'\r\n                    className={classes.textField}\r\n                    value={name}\r\n                    onChange={handleName}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {names.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='цена'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={price}\r\n                    onChange={handlePrice}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Цена',  data: {name: name, price: price.trim()}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'Цена', data: {name: name, price: price.trim()}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { classes } = props;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { page, name, search, sort, deletedId, oldFile } = props.table;\r\n        const { deleteData } = props.tableActions;\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={async()=>{\r\n                        deleteData({oldFile: oldFile, search: search, sort: sort, page: page, name: name, deleted: deletedId})\r\n                        showMiniDialog(false)\r\n                    }} className={classes.button}>\r\n                        Удалить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{\r\n                        deleteData({oldFile: [], search: search, sort: sort, page: page, name: name, deleted: JSON.stringify([])})\r\n                        showMiniDialog(false)\r\n                    }} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    list: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: '400px',\r\n        overflow: 'scroll'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { classes } = props;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setTypeStatistic } = props.tableActions;\r\n        const { typeStatistic } = props.table;\r\n        let types = ['регион', 'точка', 'организатор', 'реализатор'];\r\n        let [type, setType] = useState(typeStatistic.type);\r\n        let [list, setList] = useState([]);\r\n        let handleType =  (event) => {\r\n            setType(event.target.value)\r\n        };\r\n        let [search, setSearch] = useState('');\r\n        let handleSearch =  (event) => {\r\n            setSearch(event.target.value)\r\n        };\r\n        useEffect(async ()=>{\r\n            let data = [];\r\n            if(type==='регион'){\r\n                let _data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n                if (_data!==undefined) {\r\n                    data = _data\r\n                    data.unshift({name: 'все', guid: ''})\r\n                }\r\n            }\r\n            else if(type==='точка'){\r\n                let _data = await tableActions.getDataSimple({name: 'ТочкаИмя'})\r\n                if (_data!==undefined) {\r\n                    data = _data\r\n                    data.unshift({name: 'все', guid: ''})\r\n                }\r\n            }\r\n            else if(type==='организатор'){\r\n                let _data = await tableActions.getDataSimple({name: 'ОрганизаторИмя'})\r\n                if (_data!==undefined) {\r\n                    data = _data\r\n                    data.unshift({name: 'все', guid: ''})\r\n                }\r\n            }\r\n            else if(type==='реализатор'){\r\n                let _data = await tableActions.getDataSimple({name: 'РеализаторИмя'})\r\n                if (_data!==undefined) {\r\n                    data = _data\r\n                    data.unshift({name: 'все', guid: ''})\r\n                }\r\n            }\r\n            setList(data)\r\n        },[type])\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    select\r\n                    label='Тип'\r\n                    className={classes.textField}\r\n                    value={type}\r\n                    onChange={handleType}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {types.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='Поиск'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={search}\r\n                    onChange={handleSearch}\r\n                />\r\n                <br/>\r\n                <div className={classes.list} >\r\n                    {list!=undefined&&list.length>0?\r\n                        list.map((element)=> {\r\n                            if(element.name.toLowerCase().includes(search.toLowerCase()))\r\n                                return (\r\n                                    <Button variant=\"outlined\" onClick={()=>{setTypeStatistic({type: type, name: element.name, what: element.guid}); showMiniDialog(false)}} className={classes.button}>\r\n                                        {element.name}\r\n                                    </Button>\r\n                                )\r\n                        }):null\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [title, setTitle] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleTitle =  (event) => {\r\n            setTitle(event.target.value)\r\n        };\r\n        let [text, setText] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleText =  (event) => {\r\n            setText(event.target.value)\r\n        };\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='заголовок'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={title}\r\n                    onChange={handleTitle}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='текст'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={text}\r\n                    onChange={handleText}\r\n                />\r\n                <br/>\r\n                 <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'FAQ', data: {text: text.trim(), name: title.trim()}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'FAQ', data: {text: text.trim(), name: title.trim()}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import { SET_MINI_DIALOG, SHOW_MINI_DIALOG } from '../constants/mini_dialog'\r\nimport React from 'react'\r\nimport {\r\n    store\r\n} from '../../index'\r\nimport Blog from '../../component/Add/Blog';\r\nimport Car from '../../component/Add/Car';\r\nimport Point from '../../component/Add/Point';\r\nimport Region from '../../component/Add/Region';\r\nimport Realizator from '../../component/Add/Realizator';\r\nimport Realizators from '../../component/Add/Realizators';\r\nimport Organizator from '../../component/Add/Organizator';\r\nimport ZavSklad from '../../component/Add/ZavSklad';\r\nimport Price from '../../component/Add/Price';\r\nimport Delete from '../../component/Add/Delete';\r\nimport Statistic from '../../component/Add/Statistic';\r\nimport FAQ from '../../component/Add/FAQ';\r\n\r\nexport function setMiniDialog(title,child) {\r\n    return {\r\n        type: SET_MINI_DIALOG,\r\n        payload: {title: title, child: child}\r\n    }\r\n}\r\n\r\nexport function showAddMiniDialog() {\r\n    return async (dispatch) => {\r\n        if(store.getState().table.name!=''){\r\n            let child;\r\n            if(store.getState().table.name=='Блог')\r\n                child = <Blog/>\r\n            else if(store.getState().table.name=='Машина')\r\n                child = <Car/>\r\n            else if(store.getState().table.name=='Реализатор')\r\n                child = <Realizator/>\r\n            else if(store.getState().table.name=='Точка')\r\n                child = <Point/>\r\n            else if(store.getState().table.name=='Регион')\r\n                child = <Region/>\r\n            else if(store.getState().table.name=='Организатор')\r\n                child = <Organizator/>\r\n            else if(store.getState().table.name=='Завсклада')\r\n                child = <ZavSklad/>\r\n            else if(store.getState().table.name=='Цена')\r\n                child = <Price/>\r\n            else if(store.getState().table.name=='FAQ')\r\n                child = <FAQ/>\r\n            dispatch ({\r\n                type: SET_MINI_DIALOG,\r\n                payload: {title: store.getState().table.name, child: child}\r\n            })\r\n            dispatch ({\r\n                type: SHOW_MINI_DIALOG,\r\n                payload: true\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function showSelectRealizators() {\r\n    return async (dispatch) => {\r\n        let child = <Realizators/>\r\n        dispatch ({\r\n            type: SET_MINI_DIALOG,\r\n            payload: {title: 'Реализатор', child: child}\r\n        })\r\n        dispatch ({\r\n            type: SHOW_MINI_DIALOG,\r\n            payload: true\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function showSelectStatistic() {\r\n    return async (dispatch) => {\r\n        let child = <Statistic/>\r\n        dispatch ({\r\n            type: SET_MINI_DIALOG,\r\n            payload: {title: 'Статистика', child: child}\r\n        })\r\n        dispatch ({\r\n            type: SHOW_MINI_DIALOG,\r\n            payload: true\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function showDelete() {\r\n    return async (dispatch) => {\r\n        let child = <Delete/>\r\n        dispatch ({\r\n            type: SET_MINI_DIALOG,\r\n            payload: {title: 'Удалить?', child: child}\r\n        })\r\n        dispatch ({\r\n            type: SHOW_MINI_DIALOG,\r\n            payload: true\r\n        })\r\n    }\r\n}\r\n\r\nexport function showMiniDialog(show) {\r\n    return {\r\n        type: SHOW_MINI_DIALOG,\r\n        payload: show\r\n    }\r\n}\r\n"],"sourceRoot":""}