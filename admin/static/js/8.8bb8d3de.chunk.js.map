{"version":3,"sources":["component/Drawer.js","../node_modules/@material-ui/icons/utils/createSvgIcon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@material-ui/core/Collapse/index.js","../node_modules/@material-ui/core/Collapse/Collapse.js","../node_modules/@material-ui/icons/GpsFixed.js","../node_modules/@material-ui/icons/Face.js","../node_modules/@material-ui/icons/Storage.js","../node_modules/@material-ui/icons/UnfoldLess.js","../node_modules/@material-ui/icons/UnfoldMore.js","../node_modules/@material-ui/icons/LocationCity.js","../node_modules/@material-ui/icons/LocationOn.js","../node_modules/@material-ui/icons/AllInbox.js","../node_modules/@material-ui/icons/AssignmentInd.js","../node_modules/@material-ui/icons/Commute.js","../node_modules/@material-ui/icons/AccountBalanceWallet.js","../node_modules/@material-ui/icons/Assignment.js","../node_modules/@material-ui/icons/Receipt.js","../node_modules/@material-ui/icons/Archive.js","../node_modules/@material-ui/icons/Assessment.js","../node_modules/@material-ui/icons/ListAlt.js","../node_modules/@material-ui/icons/Timeline.js","../node_modules/@material-ui/icons/List.js","../node_modules/@material-ui/icons/Info.js","../node_modules/@material-ui/icons/Web.js","../node_modules/@material-ui/icons/QuestionAnswer.js"],"names":["MyDrawer","React","memo","props","_props$app","app","drawer","profile","status","user","name","table","showDrawer","appActions","_props$tableActions","tableActions","getData","setSelected","classes","location","_useState","useState","_useState2","Object","C_projects_shoro_shoro_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","secondMenuOpen","setSecondMenuOpen","_useState3","_useState4","thirdMenuOpen","setThirdMenuOpen","_useState5","_useState6","fourthMenuOpen","setFourthMenuOpen","_useState7","_useState8","regionList","setRegionList","_useState9","_useState10","pointList","setPointList","_useState11","_useState12","selectedRegion","setSelectedRegion","currentPath","pathname","split","useEffect","_fetchData","C_projects_shoro_shoro_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","C_projects_shoro_shoro_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","wrap","_context","prev","next","t0","t1","sent","t2","t3","stop","apply","this","arguments","fetchData","collapse","C_projects_shoro_shoro_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","open","keys","i","length","collapse1","collapse2","_useState13","_useState14","selectedItem","setSelectedItem","collapseSelectedItem","authenticated","variant","mainWindow","current","offsetWidth","react__WEBPACK_IMPORTED_MODULE_4___default","createElement","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_7___default","className","onClose","paper","drawerPaper","toolbar","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_8___default","includes","role","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_9___default","button","key","onClick","history","push","search","sort","page","_material_ui_core_ListItemIcon__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_icons_Face__WEBPACK_IMPORTED_MODULE_21___default","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_11___default","primary","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_12___default","_material_ui_icons_Storage__WEBPACK_IMPORTED_MODULE_25___default","_material_ui_icons_UnfoldLess__WEBPACK_IMPORTED_MODULE_19___default","_material_ui_icons_UnfoldMore__WEBPACK_IMPORTED_MODULE_20___default","_material_ui_core_Collapse__WEBPACK_IMPORTED_MODULE_18___default","in","timeout","unmountOnExit","component","disablePadding","Fragment","nestedSelectedItem","nested","_material_ui_icons_LocationCity__WEBPACK_IMPORTED_MODULE_35___default","_material_ui_icons_LocationOn__WEBPACK_IMPORTED_MODULE_33___default","nested1SelectedItem","nested1","region","_material_ui_icons_AllInbox__WEBPACK_IMPORTED_MODULE_37___default","undefined","map","element","idx","guid","_material_ui_icons_AssignmentInd__WEBPACK_IMPORTED_MODULE_30___default","guidRegion","_material_ui_icons_Commute__WEBPACK_IMPORTED_MODULE_31___default","_material_ui_icons_AccountBalanceWallet__WEBPACK_IMPORTED_MODULE_32___default","_material_ui_icons_Assignment__WEBPACK_IMPORTED_MODULE_26___default","_material_ui_icons_Receipt__WEBPACK_IMPORTED_MODULE_34___default","_callee2","_context2","_callee3","_context3","_material_ui_icons_Archive__WEBPACK_IMPORTED_MODULE_36___default","_callee4","_context4","point","_callee5","_context5","nested2SelectedItem","nested2","element1","_material_ui_icons_Assessment__WEBPACK_IMPORTED_MODULE_28___default","_material_ui_icons_ListAlt__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Timeline__WEBPACK_IMPORTED_MODULE_27___default","_material_ui_icons_List__WEBPACK_IMPORTED_MODULE_29___default","_material_ui_icons_GpsFixed__WEBPACK_IMPORTED_MODULE_38___default","_material_ui_icons_Info__WEBPACK_IMPORTED_MODULE_22___default","_material_ui_icons_Web__WEBPACK_IMPORTED_MODULE_23___default","_material_ui_icons_QuestionAnswer__WEBPACK_IMPORTED_MODULE_24___default","connect","state","dispatch","bindActionCreators","withStyles","theme","width","flexShrink","mixins","paddingLeft","spacing","unit","background","_interopRequireDefault","__webpack_require__","defineProperty","exports","value","default","_react","_pure","_SvgIcon","_default","path","displayName","Icon","concat","muiName","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","Symbol","iterator","done","err","_iterableToArrayLimit","TypeError","_nonIterableRest","d","__webpack_exports__","enumerable","get","_Collapse","styles","_extends2","_defineProperty2","_objectWithoutProperties2","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf3","_inherits2","_classnames","_Transition","_withStyles","_transitions","_utils2","container","height","overflow","transition","transitions","create","entered","wrapper","display","wrapperInner","Collapse","_React$Component","_getPrototypeOf2","_this","_len","args","_key","call","handleEnter","node","style","collapsedHeight","onEnter","handleEntering","_this$props","wrapperHeight","wrapperRef","clientHeight","transitionDuration","getTransitionProps","mode","duration","duration2","getAutoHeightDuration","autoTransitionDuration","onEntering","handleEntered","onEntered","handleExit","onExit","handleExiting","_this$props2","onExiting","addEndListener","_","timer","setTimeout","clearTimeout","_this2","_this$props3","children","Component","other","childProps","minHeight","ref","_ref","defaultProps","standard","muiSupportAuto","withTheme","fill","id"],"mappings":"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","file":"static/js/8.8bb8d3de.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Event from '@material-ui/icons/ListAlt';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { mainWindow } from '../App'\r\nimport * as tableActions from '../redux/actions/table'\r\nimport * as appActions from '../redux/actions/app'\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/UnfoldLess';\r\nimport ExpandMore from '@material-ui/icons/UnfoldMore';\r\nimport Face from '@material-ui/icons/Face';\r\nimport Info from '@material-ui/icons/Info';\r\nimport ArtTrack from '@material-ui/icons/Web';\r\nimport QuestionAnswer from '@material-ui/icons/QuestionAnswer';\r\nimport Storage from '@material-ui/icons/Storage';\r\nimport Assignment from '@material-ui/icons/Assignment';\r\nimport Timeline from '@material-ui/icons/Timeline';\r\nimport Assessment from '@material-ui/icons/Assessment';\r\nimport List1 from '@material-ui/icons/List';\r\nimport AssignmentInd from '@material-ui/icons/AssignmentInd';\r\nimport Commute from '@material-ui/icons/Commute';\r\nimport AccountBalance from '@material-ui/icons/AccountBalanceWallet';\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport Receipt from '@material-ui/icons/Receipt';\r\nimport LocationCity from '@material-ui/icons/LocationCity';\r\nimport Archive from '@material-ui/icons/Archive';\r\nimport All from '@material-ui/icons/AllInbox';\r\nimport GpsFixed from '@material-ui/icons/GpsFixed';\r\n\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst styles = theme => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    nested: {\r\n        paddingLeft: theme.spacing.unit * 4,\r\n    },\r\n    nestedSelectedItem: {\r\n        paddingLeft: theme.spacing.unit * 4,\r\n        background: '#C1C1C1',\r\n    },\r\n    nested1: {\r\n        paddingLeft: theme.spacing.unit * 6,\r\n    },\r\n    nested1SelectedItem: {\r\n        paddingLeft: theme.spacing.unit * 6,\r\n        background: '#C1C1C1',\r\n    },\r\n    nested2: {\r\n        paddingLeft: theme.spacing.unit * 8\r\n    },\r\n    nested2SelectedItem: {\r\n        paddingLeft: theme.spacing.unit * 8,\r\n        background: '#C1C1C1',\r\n    },\r\n\r\n\r\n});\r\n\r\nconst MyDrawer = React.memo(\r\n    (props) =>{\r\n        const { drawer, profile } = props.app;\r\n        const { status } = props.user;\r\n        const { name } = props.table;\r\n        const { showDrawer } = props.appActions;\r\n        const { getData, setSelected } = props.tableActions;\r\n        const { classes, location } = props;\r\n        let [secondMenuOpen, setSecondMenuOpen] = useState({});\r\n        let [thirdMenuOpen, setThirdMenuOpen] = useState({});\r\n        let [fourthMenuOpen, setFourthMenuOpen] = useState({});\r\n        let [regionList, setRegionList] = useState([]);\r\n        let [pointList, setPointList] = useState([]);\r\n        let [selectedRegion, setSelectedRegion] = useState('');\r\n        let currentPath = location.pathname.split('/')[1];\r\n\r\n        useEffect(()=>{\r\n            async function fetchData() {\r\n                setRegionList(await tableActions.getDataSimple({name: 'РегионИмя'}))\r\n                setPointList(await tableActions.getDataSimple({name: 'ТочкаСРегионом'}))\r\n            }\r\n            fetchData();\r\n        },[])\r\n        let collapse = (name)=>{\r\n            secondMenuOpen = {...secondMenuOpen}\r\n            thirdMenuOpen = {...thirdMenuOpen}\r\n            fourthMenuOpen = {...fourthMenuOpen}\r\n            let open = !secondMenuOpen[name]\r\n            let keys = Object.keys(thirdMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                thirdMenuOpen[keys[i]] = false\r\n            }\r\n            setThirdMenuOpen(thirdMenuOpen)\r\n            keys = Object.keys(fourthMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                fourthMenuOpen[keys[i]] = false\r\n            }\r\n            setFourthMenuOpen(fourthMenuOpen)\r\n            keys = Object.keys(secondMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                secondMenuOpen[keys[i]] = false\r\n            }\r\n            secondMenuOpen[name] = open\r\n            setSecondMenuOpen(secondMenuOpen)\r\n\r\n        }\r\n        let collapse1 = (name)=>{\r\n            thirdMenuOpen = {...thirdMenuOpen}\r\n            fourthMenuOpen = {...fourthMenuOpen}\r\n            let open = !thirdMenuOpen[name]\r\n            let keys = Object.keys(thirdMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                thirdMenuOpen[keys[i]] = false\r\n            }\r\n            thirdMenuOpen[name] = open\r\n            setThirdMenuOpen(thirdMenuOpen)\r\n            keys = Object.keys(fourthMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                fourthMenuOpen[keys[i]] = false\r\n            }\r\n            setFourthMenuOpen(fourthMenuOpen)\r\n\r\n        }\r\n        let collapse2 = (name)=>{\r\n            fourthMenuOpen = {...fourthMenuOpen}\r\n            let open = !fourthMenuOpen[name]\r\n            let keys = Object.keys(fourthMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                fourthMenuOpen[keys[i]] = false\r\n            }\r\n            fourthMenuOpen[name] = open\r\n            setFourthMenuOpen(fourthMenuOpen)\r\n\r\n        }\r\n        let [selectedItem, setSelectedItem] = useState({});\r\n        let collapseSelectedItem = (name)=>{\r\n            selectedItem = {...selectedItem}\r\n            let open = !selectedItem[name]\r\n            let keys = Object.keys(selectedItem)\r\n            for(let i = 0; i<keys.length; i++){\r\n                selectedItem[keys[i]] = false\r\n            }\r\n            selectedItem[name] = open\r\n            setSelectedItem(selectedItem)\r\n\r\n        }\r\n        const { authenticated } = props.user;\r\n        let variant= ''\r\n        if(mainWindow.current.offsetWidth>800)\r\n            variant= 'permanent'\r\n        return (\r\n            <div>\r\n                <Drawer\r\n                    variant= {variant}\r\n                    className={classes.drawer}\r\n                    open={drawer}\r\n                    onClose={()=>showDrawer(false)}\r\n                    classes={{paper: classes.drawerPaper,}}\r\n                >\r\n                    {\r\n                        mainWindow.current.offsetWidth>800?\r\n                            <div className={classes.toolbar}/>\r\n                        :\r\n                            null\r\n                    }\r\n                    {authenticated?\r\n                        <List>\r\n                            {\r\n                                status.status==='active'&&['реализатор', 'организатор'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{props.history.push('/profile');showDrawer(false); getData({search: '', sort: '', page: 0, name: ''}); setSelected(-1)}}>\r\n                                            <ListItemIcon>\r\n                                                <Face />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={'Профиль'} />\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'организатор'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('Данные')}}>\r\n                                            <ListItemIcon><Storage /></ListItemIcon>\r\n                                            <ListItemText primary={'Данные'} />\r\n                                            {secondMenuOpen['Данные'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['Данные']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={name==='Регион'&&currentPath===''?classes.nestedSelectedItem:classes.nested}\r\n                                                                  button key={'event'}\r\n                                                                  onClick={()=>{\r\n                                                                      collapse1('регион')\r\n                                                                      props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Регион'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><LocationCity /></ListItemIcon>\r\n                                                            <ListItemText primary={'Регион'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Точка'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('данныеТочка')}}>\r\n                                                            <ListItemIcon><LocationOn /></ListItemIcon>\r\n                                                            <ListItemText primary={'Точка'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['данныеТочка'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['данныеТочка']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['ТочкаВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Точка', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('ТочкаВсе')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                    return(\r\n                                                                        <React.Fragment key={idx}>\r\n                                                                        <ListItem className={selectedItem['Точка'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                            props.history.push('/');\r\n                                                                            showDrawer(false);\r\n                                                                            getData({search: '', sort: '', page: 0, name: 'Точка', region: element.guid});\r\n                                                                            setSelected(-1);\r\n                                                                            collapseSelectedItem('Точка'+element.guid)\r\n                                                                        }}>\r\n                                                                            <ListItemIcon><LocationOn /></ListItemIcon>\r\n                                                                            <ListItemText primary={element.name} />\r\n                                                                        </ListItem>\r\n                                                                        <Divider variant='inset'/>\r\n                                                                        </React.Fragment>\r\n                                                                    )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={name==='Организатор'&&currentPath===''?classes.nestedSelectedItem:classes.nested\r\n                                                        } button key={'event'} onClick={()=>{collapse1('организатор');props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Организатор'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><AssignmentInd /></ListItemIcon>\r\n                                                            <ListItemText primary={'Организатор'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            /*if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Реализатор'});\r\n                                                                setSelected(-1)\r\n                                                            } else*/\r\n                                                                collapse1('данныеРеализатор')\r\n\r\n                                                        }}>\r\n                                                            <ListItemIcon><AssignmentInd /></ListItemIcon>\r\n                                                            <ListItemText primary={'Реализатор'} />\r\n                                                            {/*status.role==='организатор'?null:*/thirdMenuOpen['данныеРеализатор'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['данныеРеализатор']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                {\r\n                                                                    status.role!='организатор'?\r\n                                                                        <>\r\n                                                                        <ListItem className={selectedItem['РеализаторВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                            props.history.push('/');\r\n                                                                            showDrawer(false);\r\n                                                                            getData({search: '', sort: '', page: 0, name: 'Реализатор', region: ''});\r\n                                                                            setSelected(-1);\r\n                                                                            collapseSelectedItem('РеализаторВсе')\r\n                                                                        }}>\r\n                                                                            <ListItemIcon><All /></ListItemIcon>\r\n                                                                            <ListItemText primary={'Все'} />\r\n                                                                        </ListItem>\r\n                                                                        <Divider variant='inset'/>\r\n                                                                        </>\r\n                                                                        :\r\n                                                                        null\r\n                                                                }\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                        if(status.role!='организатор'||profile.guidRegion===element.guid||'lol'===element.guid)\r\n                                                                            return(\r\n                                                                                <React.Fragment key={idx}>\r\n                                                                                    <ListItem className={selectedItem['Реализатор'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                        props.history.push('/');\r\n                                                                                        showDrawer(false);\r\n                                                                                        getData({search: '', sort: '', page: 0, name: 'Реализатор', region: element.guid});\r\n                                                                                        setSelected(-1);\r\n                                                                                        collapseSelectedItem('Реализатор'+element.guid)\r\n                                                                                    }}>\r\n                                                                                        <ListItemIcon><AssignmentInd /></ListItemIcon>\r\n                                                                                        <ListItemText primary={element.name} />\r\n                                                                                    </ListItem>\r\n                                                                                    <Divider variant='inset'/>\r\n                                                                                </React.Fragment>\r\n                                                                            )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {/*\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Завсклада'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><AssignmentInd /></ListItemIcon>\r\n                                                            <ListItemText primary={'Завсклада'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null*/\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={name==='Машина'&&currentPath===''?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{collapse1('машина');props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Машина'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><Commute /></ListItemIcon>\r\n                                                            <ListItemText primary={'Машина'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={name==='Цена'&&currentPath===''?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{collapse1('цена');props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Цена'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><AccountBalance /></ListItemIcon>\r\n                                                            <ListItemText primary={'Цена'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('Накладные')}}>\r\n                                            <ListItemIcon><Assignment /></ListItemIcon>\r\n                                            <ListItemText primary={'Накладные'} />\r\n                                            {secondMenuOpen['Накладные'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['Накладные']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={(currentPath=='nnvv'&&status.role==='организатор')||(name==='Накладная на вечерний возврат сегодня'&&currentPath==='')?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{\r\n                                                            showDrawer(false);\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/nnvv')\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на вечерний возврат сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n                                                            collapse1('nnvv');\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная на вечерний возврат сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={(currentPath=='nnpt'&&status.role==='организатор')||(name==='Накладная на пустую тару сегодня'&&currentPath==='')?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{\r\n                                                            showDrawer(false);\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/nnpt')\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на пустую тару сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n                                                            collapse1('nnpt');\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная на пустую тару сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={(currentPath=='ns1'&&status.role==='организатор')||(name==='Накладная склад №1 сегодня'&&currentPath==='')?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            showDrawer(false);\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/ns1')\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №1 сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n                                                            collapse1('ns1');\r\n\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная склад №1 сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={(currentPath=='ns2'&&status.role==='организатор')||(name==='Накладная склад №2 сегодня'&&currentPath==='')?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            showDrawer(false);\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/ns2')\r\n\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №2 сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n                                                            collapse1('ns2');\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная склад №2 сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={(currentPath=='oo'&&status.role==='организатор')||(name==='Отчет организатора сегодня'&&currentPath==='')?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{\r\n                                                            showDrawer(false);\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/oo')\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Отчет организатора сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n                                                            //collapse1('oo');\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Отчет организатора сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={(currentPath=='or'&&status.role==='реализатор')||(name==='Отчет реализатора сегодня'&&currentPath==='')?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='реализатор') {\r\n                                                                showDrawer(false);\r\n                                                                props.history.push('/or')\r\n                                                                //collapse1('Отчет реализатора сегодня')\r\n\r\n                                                            } else if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Отчет реализатора сегодня', region: profile.guidRegion});\r\n                                                                setSelected(-1)\r\n                                                                //collapse1('Отчет реализатора сегодня')\r\n                                                            } else\r\n                                                                collapse1('Отчет реализатора сегодня')\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Отчет реализатора сегодня'} />\r\n                                                            {status.role==='реализатор'||status.role==='организатор'?null:thirdMenuOpen['Отчет реализатора сегодня'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Отчет реализатора сегодня']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Отчет реализатора сегодняВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={async()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Отчет реализатора сегодня', region: ''});\r\n                                                                    setSelected(-1)\r\n                                                                    collapseSelectedItem('Отчет реализатора сегодняВсе')\r\n\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    (regionList).map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Отчет реализатора сегодня'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={async()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Отчет реализатора сегодня', region: element.guid});\r\n                                                                                setSelected(-1)\r\n                                                                                collapseSelectedItem('Отчет реализатора сегодня'+element.guid)\r\n\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n\r\n\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('Архив')}}>\r\n                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                            <ListItemText primary={'Архив'} />\r\n                                            {secondMenuOpen['Архив'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['Архив']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на вечерний возврат'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Накладная на вечерний возврат')\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная на вечерний возврат'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Накладная на вечерний возврат'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Накладная на вечерний возврат']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Накладная на вечерний возвратВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Накладная на вечерний возврат', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('Накладная на вечерний возвратВсе')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Накладная на вечерний возврат'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на вечерний возврат', region: element.guid});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Накладная на вечерний возврат'+element.guid)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на пустую тару'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Накладная на пустую тару')\r\n\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная на пустую тару'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Накладная на пустую тару'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Накладная на пустую тару']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Накладная на пустую таруВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Накладная на пустую тару', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('Накладная на пустую таруВсе')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Накладная на пустую тару'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на пустую тару', region: element.guid});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Накладная на пустую тару'+element.guid)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №1'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Накладная склад №1')\r\n\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная склад №1'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Накладная склад №1'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Накладная склад №1']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Накладная склад №1Все']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Накладная склад №1', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('Накладная склад №1Все')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Накладная склад №1'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №1', region: element.guid});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Накладная склад №1'+element.guid)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №2'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Накладная склад №2')\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная склад №2'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Накладная склад №2'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Накладная склад №2']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Накладная склад №2Все']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Накладная склад №2', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('Накладная склад №2Все')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Накладная склад №2'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №2', region: element.guid});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Накладная склад №2'+element.guid)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Отчет организатора'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Отчет организатора')\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Отчет организатора'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Отчет организатора'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Отчет организатора']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Отчет организатораВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Отчет организатора', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('Отчет организатораВсе')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Отчет организатора'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Отчет организатора', region: element.guid});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Отчет организатора'+element.guid)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='реализатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Отчет реализатора'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Отчет реализатора')\r\n                                                          }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Отчет реализатора'} />\r\n                                                            {status.role==='реализатор'?null:thirdMenuOpen['Отчет реализатора'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Отчет реализатора']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Отчет реализатораВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={async()=>{\r\n                                                                    if(status.role==='организатор') {\r\n                                                                        props.history.push('/');\r\n                                                                        showDrawer(false);\r\n                                                                        getData({search: '', sort: '', page: 0, name: 'Отчет реализатора', point: ''});\r\n                                                                        setSelected(-1)\r\n                                                                    } else {\r\n                                                                        props.history.push('/');\r\n                                                                        showDrawer(false);\r\n                                                                        getData({search: '', sort: '', page: 0, name: 'Отчет реализатора', region: '', point: ''});\r\n                                                                        setSelected(-1);\r\n                                                                        collapseSelectedItem('Отчет реализатораВсе')\r\n                                                                    }\r\n                                                                    collapseSelectedItem('Отчет реализатораВсе')\r\n\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {(status.role==='организатор'?pointList[profile.guidRegion]:regionList)!=undefined&&(status.role==='организатор'?pointList[profile.guidRegion]:regionList).length>0?\r\n                                                                    (status.role==='организатор'?pointList[profile.guidRegion]:regionList).map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Отчет реализатора'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={async()=>{\r\n                                                                                if(status.role==='организатор') {\r\n                                                                                    props.history.push('/');\r\n                                                                                    showDrawer(false);\r\n                                                                                    getData({search: '', sort: '', page: 0, name: 'Отчет реализатора', point: element.guid});\r\n                                                                                    setSelected(-1)\r\n                                                                                } else {\r\n                                                                                    setSelectedRegion(element.guid)\r\n                                                                                    collapse2('Отчет реализатора'+element.guid)\r\n                                                                                }\r\n                                                                                collapseSelectedItem('Отчет реализатора'+element.guid)\r\n\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                                {status.role==='организатор'?null:fourthMenuOpen['Отчет реализатора'+element.guid] ? <ExpandLess /> : <ExpandMore />}\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            {selectedRegion===element.guid?\r\n                                                                                <Collapse in={fourthMenuOpen['Отчет реализатора'+element.guid]} timeout='auto' unmountOnExit>\r\n                                                                                    <List component='div' disablePadding>\r\n                                                                                        <ListItem className={selectedItem['Отчет реализатораВсеВсе']?classes.nested2SelectedItem:classes.nested2} button key={'event'} onClick={()=>{\r\n                                                                                            props.history.push('/');\r\n                                                                                            showDrawer(false);\r\n                                                                                            getData({search: '', sort: '', page: 0, name: 'Отчет реализатора', region: element.guid, point: ''});\r\n                                                                                            setSelected(-1);\r\n                                                                                            collapseSelectedItem('Отчет реализатораВсеВсе')\r\n                                                                                        }}>\r\n                                                                                            <ListItemIcon><All /></ListItemIcon>\r\n                                                                                            <ListItemText primary={'Все'} />\r\n                                                                                        </ListItem>\r\n                                                                                        <Divider variant='inset'/>\r\n                                                                                        {pointList[selectedRegion]!=undefined&&pointList[selectedRegion].length>0?\r\n                                                                                            pointList[selectedRegion].map((element1, idx)=>{\r\n                                                                                                return(\r\n                                                                                                    <React.Fragment key={idx}>\r\n                                                                                                    <ListItem className={selectedItem['Отчет реализатора'+element1.guid]?classes.nested2SelectedItem:classes.nested2} button key={'event'} onClick={()=>{\r\n                                                                                                        props.history.push('/');\r\n                                                                                                        showDrawer(false);\r\n                                                                                                        getData({search: '', sort: '', page: 0, name: 'Отчет реализатора', region: element.guid, point: element1.guid});\r\n                                                                                                        setSelected(-1);\r\n                                                                                                        collapseSelectedItem('Отчет реализатора'+element1.guid)\r\n                                                                                                    }}>\r\n                                                                                                        <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                                        <ListItemText primary={element1.name} />\r\n                                                                                                    </ListItem>\r\n                                                                                                    <Divider variant='inset'/>\r\n                                                                                                    </React.Fragment>\r\n                                                                                                )\r\n                                                                                            }):null}\r\n                                                                                    </List>\r\n                                                                                </Collapse>\r\n                                                                                :\r\n                                                                                null\r\n                                                                            }\r\n\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('Статистика')}}>\r\n                                            <ListItemIcon><Assessment /></ListItemIcon>\r\n                                            <ListItemText primary={'Статистика'} />\r\n                                            {secondMenuOpen['Статистика'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['Статистика']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={name==='План'&&currentPath===''?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{collapse1('план');props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'План'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><Event /></ListItemIcon>\r\n                                                            <ListItemText primary={'План'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={currentPath==='statistic'?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{collapse1('статистика');props.history.push('/statistic');showDrawer(false);setSelected(-1)}}>\r\n                                                            <ListItemIcon><Timeline /></ListItemIcon>\r\n                                                            <ListItemText primary={'Статистика'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={currentPath==='ro'?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{collapse1('рейтингРегионов');props.history.push('/ro');showDrawer(false);setSelected(-1)}}>\r\n                                                            <ListItemIcon><List1 /></ListItemIcon>\r\n                                                            <ListItemText primary={'Рейтинг регионов'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'реализатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={currentPath==='rr'?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{collapse1('рейтингТочек');props.history.push('/rr');showDrawer(false);setSelected(-1)}}>\r\n                                                            <ListItemIcon><List1 /></ListItemIcon>\r\n                                                            <ListItemText primary={'Рейтинг точек'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'реализатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={currentPath==='geo'?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{collapse1('геолокация');props.history.push('/geo');showDrawer(false);setSelected(-1)}}>\r\n                                                            <ListItemIcon><GpsFixed/></ListItemIcon>\r\n                                                            <ListItemText primary={'Геолокация'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('информация')}}>\r\n                                            <ListItemIcon><Info /></ListItemIcon>\r\n                                            <ListItemText primary={'Информация'} />\r\n                                            {secondMenuOpen['информация'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['информация']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                <ListItem className={(name==='Блог'&&currentPath===''&&status.role==='admin')||currentPath=='blog'?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{\r\n                                                    if(status.role === 'admin') {\r\n                                                        props.history.push('/');\r\n                                                        getData({search: '', sort: '', page: 0, name: 'Блог'});\r\n                                                    } else {\r\n                                                        props.history.push('/blog');\r\n                                                    }\r\n                                                    showDrawer(false);\r\n                                                    collapse1('blog');\r\n\r\n                                                    setSelected(-1);\r\n                                                }}>\r\n                                                    <ListItemIcon><ArtTrack /></ListItemIcon>\r\n                                                    <ListItemText primary={'Новости'} />\r\n                                                </ListItem>\r\n                                                <Divider variant='inset'/>\r\n                                                <ListItem className={(name==='FAQ'&&currentPath===''&&status.role==='admin')||currentPath=='FAQ'?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{\r\n                                                    if(status.role === 'admin') {\r\n                                                        props.history.push('/');\r\n                                                        getData({search: '', sort: '', page: 0, name: 'FAQ'});\r\n                                                    } else {\r\n                                                        props.history.push('/FAQ');\r\n                                                    }\r\n                                                    collapse1('FAQ');\r\n                                                    showDrawer(false);\r\n\r\n                                                    setSelected(-1);\r\n                                                }}>\r\n                                                    <ListItemIcon><QuestionAnswer /></ListItemIcon>\r\n                                                    <ListItemText primary={'FAQ'} />\r\n                                                </ListItem>\r\n                                                <Divider variant='inset'/>\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                        </List>\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n        table: state.table\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nMyDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(MyDrawer));","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _pure = _interopRequireDefault(require(\"recompose/pure\"));\n\nvar _SvgIcon = _interopRequireDefault(require(\"@material-ui/core/SvgIcon\"));\n\nfunction createSvgIcon(path, displayName) {\n  var Icon = function Icon(props) {\n    return _react.default.createElement(_SvgIcon.default, props, path);\n  };\n\n  Icon.displayName = \"\".concat(displayName, \"Icon\");\n  Icon = (0, _pure.default)(Icon);\n  Icon.muiName = 'SvgIcon';\n  return Icon;\n}\n\n;\nvar _default = createSvgIcon;\nexports.default = _default;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _Collapse.default;\n  }\n});\n\nvar _Collapse = _interopRequireDefault(require(\"./Collapse\"));","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Transition = _interopRequireDefault(require(\"react-transition-group/Transition\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _transitions = require(\"../styles/transitions\");\n\nvar _utils2 = require(\"../transitions/utils\"); // @inheritedComponent Transition\n\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the container element. */\n    container: {\n      height: 0,\n      overflow: 'hidden',\n      transition: theme.transitions.create('height')\n    },\n\n    /* Styles applied to the container element when the transition has entered. */\n    entered: {\n      height: 'auto',\n      overflow: 'visible'\n    },\n\n    /* Styles applied to the outer wrapper element. */\n    wrapper: {\n      // Hack to get children with a negative margin to not falsify the height computation.\n      display: 'flex'\n    },\n\n    /* Styles applied to the inner wrapper element. */\n    wrapperInner: {\n      width: '100%'\n    }\n  };\n};\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/demos/steppers/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\n\nexports.styles = styles;\n\nvar Collapse = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2.default)(Collapse, _React$Component);\n\n  function Collapse() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Collapse);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Collapse)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleEnter = function (node) {\n      node.style.height = _this.props.collapsedHeight;\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(node);\n      }\n    };\n\n    _this.handleEntering = function (node) {\n      var _this$props = _this.props,\n          timeout = _this$props.timeout,\n          theme = _this$props.theme;\n      var wrapperHeight = _this.wrapperRef ? _this.wrapperRef.clientHeight : 0;\n\n      var _getTransitionProps = (0, _utils2.getTransitionProps)(_this.props, {\n        mode: 'enter'\n      }),\n          transitionDuration = _getTransitionProps.duration;\n\n      if (timeout === 'auto') {\n        var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n        node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n        _this.autoTransitionDuration = duration2;\n      } else {\n        node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n      }\n\n      node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(node);\n      }\n    };\n\n    _this.handleEntered = function (node) {\n      node.style.height = 'auto';\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(node);\n      }\n    };\n\n    _this.handleExit = function (node) {\n      var wrapperHeight = _this.wrapperRef ? _this.wrapperRef.clientHeight : 0;\n      node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n      if (_this.props.onExit) {\n        _this.props.onExit(node);\n      }\n    };\n\n    _this.handleExiting = function (node) {\n      var _this$props2 = _this.props,\n          timeout = _this$props2.timeout,\n          theme = _this$props2.theme;\n      var wrapperHeight = _this.wrapperRef ? _this.wrapperRef.clientHeight : 0;\n\n      var _getTransitionProps2 = (0, _utils2.getTransitionProps)(_this.props, {\n        mode: 'exit'\n      }),\n          transitionDuration = _getTransitionProps2.duration;\n\n      if (timeout === 'auto') {\n        var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n        node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n        _this.autoTransitionDuration = duration2;\n      } else {\n        node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n      }\n\n      node.style.height = _this.props.collapsedHeight;\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(node);\n      }\n    };\n\n    _this.addEndListener = function (_, next) {\n      if (_this.props.timeout === 'auto') {\n        _this.timer = setTimeout(next, _this.autoTransitionDuration || 0);\n      }\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Collapse, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          classes = _this$props3.classes,\n          className = _this$props3.className,\n          collapsedHeight = _this$props3.collapsedHeight,\n          Component = _this$props3.component,\n          onEnter = _this$props3.onEnter,\n          onEntered = _this$props3.onEntered,\n          onEntering = _this$props3.onEntering,\n          onExit = _this$props3.onExit,\n          onExiting = _this$props3.onExiting,\n          style = _this$props3.style,\n          theme = _this$props3.theme,\n          timeout = _this$props3.timeout,\n          other = (0, _objectWithoutProperties2.default)(_this$props3, [\"children\", \"classes\", \"className\", \"collapsedHeight\", \"component\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExiting\", \"style\", \"theme\", \"timeout\"]);\n      return _react.default.createElement(_Transition.default, (0, _extends2.default)({\n        onEnter: this.handleEnter,\n        onEntered: this.handleEntered,\n        onEntering: this.handleEntering,\n        onExit: this.handleExit,\n        onExiting: this.handleExiting,\n        addEndListener: this.addEndListener,\n        timeout: timeout === 'auto' ? null : timeout\n      }, other), function (state, childProps) {\n        return _react.default.createElement(Component, (0, _extends2.default)({\n          className: (0, _classnames.default)(classes.container, (0, _defineProperty2.default)({}, classes.entered, state === 'entered'), className),\n          style: (0, _extends2.default)({}, style, {\n            minHeight: collapsedHeight\n          })\n        }, childProps), _react.default.createElement(\"div\", {\n          className: classes.wrapper,\n          ref: function ref(_ref) {\n            _this2.wrapperRef = _ref;\n          }\n        }, _react.default.createElement(\"div\", {\n          className: classes.wrapperInner\n        }, children)));\n      });\n    }\n  }]);\n  return Collapse;\n}(_react.default.Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes = {\n  /**\n   * The content node to be collapsed.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The height of the container when collapsed.\n   */\n  collapsedHeight: _propTypes.default.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: _utils.componentPropType,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: _propTypes.default.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onExit: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  style: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  theme: _propTypes.default.object.isRequired,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   */\n  timeout: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n    enter: _propTypes.default.number,\n    exit: _propTypes.default.number\n  }), _propTypes.default.oneOf(['auto'])])\n} : void 0;\nCollapse.defaultProps = {\n  collapsedHeight: '0px',\n  component: 'div',\n  timeout: _transitions.duration.standard\n};\nCollapse.muiSupportAuto = true;\n\nvar _default = (0, _withStyles.default)(styles, {\n  withTheme: true,\n  name: 'MuiCollapse'\n})(Collapse);\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"\n})), 'GpsFixed');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M9 11.75c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zm6 0c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8 0-.29.02-.58.05-.86 2.36-1.05 4.23-2.98 5.21-5.37C11.07 8.33 14.05 10 17.42 10c.78 0 1.53-.09 2.25-.26.21.71.33 1.47.33 2.26 0 4.41-3.59 8-8 8z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Face');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M2 20h20v-4H2v4zm2-3h2v2H4v-2zM2 4v4h20V4H2zm4 3H4V5h2v2zm-4 7h20v-4H2v4zm2-3h2v2H4v-2z\"\n})), 'Storage');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M7.41 18.59L8.83 20 12 16.83 15.17 20l1.41-1.41L12 14l-4.59 4.59zm9.18-13.18L15.17 4 12 7.17 8.83 4 7.41 5.41 12 10l4.59-4.59z\"\n})), 'UnfoldLess');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M12 5.83L15.17 9l1.41-1.41L12 3 7.41 7.59 8.83 9 12 5.83zm0 12.34L8.83 15l-1.41 1.41L12 21l4.59-4.59L15.17 15 12 18.17z\"\n})), 'UnfoldMore');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M15 11V5l-3-3-3 3v2H3v14h18V11h-6zm-8 8H5v-2h2v2zm0-4H5v-2h2v2zm0-4H5V9h2v2zm6 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V9h2v2zm0-4h-2V5h2v2zm6 12h-2v-2h2v2zm0-4h-2v-2h2v2z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'LocationCity');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'LocationOn');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 6h-4c0 1.62-1.38 3-3 3s-3-1.38-3-3H5V5h14v4zm-4 7h6v3c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2v-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3z\"\n})), 'AllInbox');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 4c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H6v-1.4c0-2 4-3.1 6-3.1s6 1.1 6 3.1V19z\"\n})), 'AssignmentInd');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M12 4H5C3.34 4 2 5.34 2 7v8c0 1.66 1.34 3 3 3l-1 1v1h1l2-2.03L9 18v-5H4V5.98L13 6v2h2V7c0-1.66-1.34-3-3-3zM5 14c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm15.57-4.34c-.14-.4-.52-.66-.97-.66h-7.19c-.46 0-.83.26-.98.66L10 13.77l.01 5.51c0 .38.31.72.69.72h.62c.38 0 .68-.38.68-.76V18h8v1.24c0 .38.31.76.69.76h.61c.38 0 .69-.34.69-.72l.01-1.37v-4.14l-1.43-4.11zm-8.16.34h7.19l1.03 3h-9.25l1.03-3zM12 16c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm8 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Commute');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M21 18v1c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2V5c0-1.1.89-2 2-2h14c1.1 0 2 .9 2 2v1h-9c-1.11 0-2 .9-2 2v8c0 1.1.89 2 2 2h9zm-9-2h10V8H12v8zm4-2.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"\n})), 'AccountBalanceWallet');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm2 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z\"\n})), 'Assignment');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M18 17H6v-2h12v2zm0-4H6v-2h12v2zm0-4H6V7h12v2zM3 22l1.5-1.5L6 22l1.5-1.5L9 22l1.5-1.5L12 22l1.5-1.5L15 22l1.5-1.5L18 22l1.5-1.5L21 22V2l-1.5 1.5L18 2l-1.5 1.5L15 2l-1.5 1.5L12 2l-1.5 1.5L9 2 7.5 3.5 6 2 4.5 3.5 3 2v20z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Receipt');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM12 17.5L6.5 12H10v-2h4v2h3.5L12 17.5zM5.12 5l.81-1h12l.94 1H5.12z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Archive');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Assessment');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m1.1-2H3.9c-.5 0-.9.4-.9.9v16.2c0 .4.4.9.9.9h16.2c.4 0 .9-.5.9-.9V3.9c0-.5-.5-.9-.9-.9zM11 7h6v2h-6V7zm0 4h6v2h-6v-2zm0 4h6v2h-6zM7 7h2v2H7zm0 4h2v2H7zm0 4h2v2H7z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'ListAlt');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"defs\", null, _react.default.createElement(\"path\", {\n  id: \"a\",\n  d: \"M0 0h24v24H0V0z\"\n})), _react.default.createElement(\"path\", {\n  d: \"M23 8c0 1.1-.9 2-2 2-.18 0-.35-.02-.51-.07l-3.56 3.55c.05.16.07.34.07.52 0 1.1-.9 2-2 2s-2-.9-2-2c0-.18.02-.36.07-.52l-2.55-2.55c-.16.05-.34.07-.52.07s-.36-.02-.52-.07l-4.55 4.56c.05.16.07.33.07.51 0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2c.18 0 .35.02.51.07l4.56-4.55C8.02 9.36 8 9.18 8 9c0-1.1.9-2 2-2s2 .9 2 2c0 .18-.02.36-.07.52l2.55 2.55c.16-.05.34-.07.52-.07s.36.02.52.07l3.55-3.56C19.02 8.35 19 8.18 19 8c0-1.1.9-2 2-2s2 .9 2 2z\"\n})), 'Timeline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'List');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n})), 'Info');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-5 14H4v-4h11v4zm0-5H4V9h11v4zm5 5h-4V9h4v9z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Web');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M21 6h-2v9H6v2c0 .55.45 1 1 1h11l4 4V7c0-.55-.45-1-1-1zm-4 6V3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v14l4-4h10c.55 0 1-.45 1-1z\"\n})), 'QuestionAnswer');\n\nexports.default = _default;"],"sourceRoot":""}