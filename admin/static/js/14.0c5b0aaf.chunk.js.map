{"version":3,"sources":["redux/actions/app.js","logo.png","component/Sign.js","component/AppBar.js"],"names":["__webpack_require__","r","__webpack_exports__","d","showDrawer","_constants_app__WEBPACK_IMPORTED_MODULE_0__","show","type","SHOW_DRAWER","payload","module","exports","p","Sign","React","memo","props","_useState","useState","_useState2","Object","slicedToArray","login","setLogin","_useState3","_useState4","pass","setPass","error","user","showMiniDialog","mini_dialogActions","_props$userActions","userActions","signin","logout","classes","react_default","a","createElement","TextField_default","id","label","className","textField","margin","value","onChange","event","target","error_message","Button_default","variant","color","onClick","email","password","button","withStyles","theme","spacing","unit","marginLeft","marginRight","width","marginTop","marginBottom","fontWeight","connect","state","mini_dialog","dispatch","bindActionCreators","MyAppBar","authenticated","location","name","table","drawer","app","appActions","_props$mini_dialogAct","setMiniDialog","showAddMiniDialog","currentPath","pathname","split","_React$useState","_React$useState2","anchorEl","setAnchorEl","open","Boolean","handleClose","root","AppBar_default","position","appBar","Toolbar_default","src","logo","menuButton","Typography_default","grow","mainWindow","current","offsetWidth","history","push","style","component_Sign","IconButton_default","aria-owns","undefined","aria-haspopup","currentTarget","AccountCircle_default","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","onClose","Fragment","MenuItem_default","zIndex","background","flexGrow"],"mappings":"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","file":"static/js/14.0c5b0aaf.chunk.js","sourcesContent":["import { SHOW_DRAWER } from '../constants/app'\r\n\r\nexport function showDrawer(show) {\r\n    return {\r\n        type: SHOW_DRAWER,\r\n        payload: show\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.fdc48fe4.png\";","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../redux/actions/mini_dialog'\r\nimport * as userActions from '../redux/actions/user'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: 200,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        let [login, setLogin] = useState('');\r\n        let [pass, setPass] = useState('');\r\n        const { error } = props.user;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { signin, logout } = props.userActions;\r\n        let handlePass =  (event) => {\r\n            setPass(event.target.value)\r\n        };\r\n        let handleLogin =  (event) => {\r\n            setLogin(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    id='standard-search'\r\n                    label='Логин'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={login}\r\n                    onChange={handleLogin}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    id='standard-search'\r\n                    label='Пароль'\r\n                    type='password'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={pass}\r\n                    onChange={handlePass}\r\n                />\r\n                <br/>\r\n                {error?\r\n                    <div className={classes.error_message}>Неверный логин или пароль</div>\r\n                    :\r\n                    null\r\n                }\r\n                <div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={()=>{signin({email: login, password: pass})}} className={classes.button}>\r\n                        Войти\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>{showMiniDialog(false); logout()}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as userActions from '../redux/actions/user'\r\nimport * as appActions from '../redux/actions/app'\r\nimport * as mini_dialogActions from '../redux/actions/mini_dialog'\r\nimport Sign from './Sign';\r\nimport logo from '../logo.png';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { mainWindow } from '../App'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst styles = {\r\n    appBar: {\r\n        zIndex: 1201,\r\n        background: '#202124'\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        width: 30,\r\n        marginLeft: 10,\r\n        marginRight: 20,\r\n    },\r\n};\r\n\r\nconst MyAppBar = React.memo(\r\n    (props) =>{\r\n        const { authenticated } = props.user;\r\n        const { classes, location } = props;\r\n        const { logout } = props.userActions;\r\n        const { name } = props.table;\r\n        const { drawer } = props.app;\r\n        const { showDrawer } = props.appActions;\r\n        const { setMiniDialog, showMiniDialog, showAddMiniDialog } = props.mini_dialogActions;\r\n        let currentPath = location.pathname.split('/')[1];\r\n        const [anchorEl, setAnchorEl] = React.useState(null);\r\n        const open = Boolean(anchorEl);\r\n        let handleMenu = (event) => {\r\n            setAnchorEl(event.currentTarget);\r\n        }\r\n        let handleClose = () => {\r\n            setAnchorEl(null);\r\n        }\r\n        return (\r\n                <div>\r\n                    <div className={classes.root}>\r\n                        <AppBar position=\"fixed\" className={classes.appBar}>\r\n                            <Toolbar>\r\n                                <img src={logo} className={classes.menuButton}  onClick={() => {showDrawer(!drawer)}}/>\r\n                                <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n                                    DsrAdmin\r\n                                </Typography>\r\n                                {mainWindow.current.offsetWidth>450?\r\n                                    authenticated ?\r\n                                        <div>\r\n                                            {name!=='' && currentPath!=='event'&&currentPath!=='cashbox'&&name!=='Баланс'&&name!=='Платежи'&&name!=='Билеты'&&name!=='Билеты кино'&&name!=='Статистика жанров'&&name!=='Статистика фильмов'&&name!=='Статистика кинотеатров'&&name!=='Статистика событий'&&name!=='Статистика пользователя' ?\r\n                                                <Button  variant=\"outlined\" color=\"inherit\" onClick={()=>{\r\n                                                    if(name==='Событие')\r\n                                                        props.history.push('/event')\r\n                                                    else if(name==='Сеанс')\r\n                                                        props.history.push('/seance')\r\n                                                    else\r\n                                                        showAddMiniDialog()}\r\n                                                } style={{marginRight: '20px'}}>Добавить</Button>\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                            <Button  variant=\"outlined\" color=\"inherit\" onClick={logout}>Выйти</Button>\r\n                                        </div>\r\n                                        :\r\n                                        <Button  variant=\"outlined\" color=\"inherit\" onClick={()=>{setMiniDialog('Авторизация', <Sign/>);showMiniDialog(true)}}>Войти</Button>\r\n                                    :\r\n                                    <div>\r\n                                        <IconButton\r\n                                            aria-owns={open ? 'menu-appbar' : undefined}\r\n                                            aria-haspopup='true'\r\n                                            onClick={handleMenu}\r\n                                            color='inherit'\r\n                                        >\r\n                                            <AccountCircle />\r\n                                        </IconButton>\r\n                                        <Menu\r\n                                            id='menu-appbar'\r\n                                            anchorEl={anchorEl}\r\n                                            anchorOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right',\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right',\r\n                                            }}\r\n                                            open={open}\r\n                                            onClose={handleClose}\r\n                                        >\r\n                                            {authenticated ?\r\n                                                <>\r\n                                                {name!=='' && currentPath!=='event'&&currentPath!=='cashbox'&&name!=='Платежи'&&name!=='Билеты'&&name!=='Баланс'&&name!=='Билеты кино'&&name!=='Статистика жанров'&&name!=='Статистика фильмов'&&name!=='Статистика кинотеатров'&&name!=='Статистика событий'&&name!=='Статистика пользователя' ?\r\n                                                    <MenuItem onClick={()=>{handleClose();\r\n                                                        if(name==='Событие')\r\n                                                            props.history.push('/event')\r\n                                                        else if(name==='Сеанс')\r\n                                                            props.history.push('/seance')\r\n                                                        else showAddMiniDialog()}}>Добавить</MenuItem>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                                <MenuItem onClick={()=>{handleClose(); logout()}}>Выйти</MenuItem>\r\n                                                </>\r\n                                                :\r\n                                                <MenuItem onClick={()=>{handleClose();setMiniDialog('Авторизация', <Sign/>);showMiniDialog(true)}}>Войти</MenuItem>\r\n                                            }\r\n                                        </Menu>\r\n                                    </div>\r\n                                }\r\n\r\n\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n)\r\n\r\nMyAppBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n        app: state.app,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(MyAppBar))"],"sourceRoot":""}