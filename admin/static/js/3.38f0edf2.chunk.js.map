{"version":3,"sources":["component/Add/About.js","component/Add/Email.js","component/Add/Ticket.js","component/Add/Contact.js","component/Add/Ads.js","component/Add/Faq.js","component/Add/Logo.js","component/Add/Personal.js","component/Add/Phone.js","component/Add/Social.js","component/Add/Vacancy.js","component/Add/Where.js","component/Add/User.js","component/Add/Billboard.js","component/Add/Cinema.js","component/Add/Mailing.js","component/Add/Hall.js","component/Add/TicketCinema.js","component/Add/Balance.js","component/Add/Cashbox.js","component/Add/Payment.js","redux/actions/mini_dialog.js","redux/actions/table.js"],"names":["width","mainWindow","current","offsetWidth","Sign","React","memo","props","showMiniDialog","mini_dialogActions","_props$tableActions","tableActions","setSelected","addData","setData","_props$table","table","selected","data","_useState","useState","_useState2","Object","slicedToArray","descriptionRu","setDescriptionRu","_useState3","_useState4","descriptionKg","setDescriptionKg","classes","react_default","a","createElement","className","urls","TextField_default","multiline","rowsMax","label","type","textField","margin","value","onChange","event","target","Button_default","variant","color","onClick","search","sort","page","name","id","button","withStyles","theme","spacing","unit","marginLeft","marginRight","maxHeight","overflow","error_message","marginTop","marginBottom","fontWeight","connect","state","mini_dialog","dispatch","bindActionCreators","email","setEmail","ticket","hash","user","where","status","setStatus","statuses","seats","JSON","parse","text_message","length","map","option","Fragment","price","select","SelectProps","MenuProps","menu","undefined","MenuItem_default","key","wordWrap","coords","setСoords","cashbox","setСashbox","_useState5","_useState6","address","setAddress","_useState7","_useState8","booking","setBooking","_useState9","_useState10","connection","setConnection","_useState11","_useState12","return1","setReturn1","_useState13","_useState14","general","setGeneral","_useState15","_useState16","cooperation","setCooperation","dateStart1","types","setType","setName","link","setLink","replace","dateEnd1","dateStart","setDateStart","dateEnd","setDateEnd","file","setFile","fileNames","setFileNames","htmlFor","component","oldFile","accept","style","display","files","i","questionRu","setQuestionRu","answerRu","setAnswerRu","questionKg","setQuestionKg","answerKg","setAnswerKg","names","contact","setContact","whoRu","setWhoRu","whoKg","setWhoKg","phone","setPhone","url","nameRu","setNameRu","requirementsRu","setRequirementsRu","dutiesRu","setDutiesRu","conditionsRu","setConditionsRu","nameKg","setNameKg","requirementsKg","setRequirementsKg","dutiesKg","setDutiesKg","conditionsKg","setConditionsKg","city","setCity","setCoords","surname","setSurame","phonenumber","setPhonenumber","roles","role","setRole","password","setPassword","useEffect","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","t0","setEvents","getDataSimple","t1","sent","stop","this","events","split","setEvent","part1","part2","console","log","_id","genre","setGenre","duration","setDuration","ageCategory","setAgeCategory","premier","setPremier","producers","setPoducers","actors","setActors","_useState17","_useState18","description","setDescription","_useState19","_useState20","_useState21","_useState22","mailuser","setMailuser","mailpass","setMailpass","mailchimpInstance","setMailchimpInstance","listUniqueId","setListUniqueId","mailchimpApiKey","setMailchimpApiKey","setUsers","setUser","users","movie","cinema","hall","priceSelect","date","balance","setBalance","wallet","service","sum","meta","sms","setMiniDialog","title","child","SET_MINI_DIALOG","payload","showAddMiniDialog","_ref","store","getState","Mailing","TicketCinema","About","Ticket","Cinema","Email","Where","Vacancy","Ads","Contact","Faq","Logo","Personal","Phone","Social","User","Billboard","Hall","Balance","Cashbox","Payment","SHOW_MINI_DIALOG","_x","apply","arguments","show","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_headers","res","row","_i","data1","_i2","data2","i1","data3","FormData","append","stringify","oldFileWhatermark","Accept-Language","Content-Type","concat","_boundary","X-Requested-With","Authorization","localStorage","userBiletikiAdmin","axios","post","headers","push","options","filter","substring","count","GET_DATA","error","_ref2","_callee2","_i3","_i4","_context2","_x2","SET_SELECTED","getIds","_ref3","_callee3","_context3","GET_IDS","_x3","getData","_ref4","_callee4","_i5","_context4","_x4","_ref5","_callee5","_context5","abrupt","_x5","deleteData","_ref6","_callee6","_i6","_context6","deleted","_x6"],"mappings":"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","file":"static/js/3.38f0edf2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n\r\n        let [descriptionRu, setDescriptionRu] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleDescriptionRu =  (event) => {\r\n            setDescriptionRu(event.target.value)\r\n        };\r\n        let [descriptionKg, setDescriptionKg] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleDescriptionKg =  (event) => {\r\n            setDescriptionKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='описание'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={descriptionRu}\r\n                    onChange={handleDescriptionRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='баяндоо'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={descriptionKg}\r\n                    onChange={handleDescriptionKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'О нас', data: {descriptionRu: descriptionRu, descriptionKg: descriptionKg}});\r\n                        else\r\n                            setData({id: data[selected][3], search: '', sort: '', page: 0, name: 'О нас', data: {descriptionRu: descriptionRu, descriptionKg: descriptionKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n\r\n        let [email, setEmail] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleEmail =  (event) => {\r\n            setEmail(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='email'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={email}\r\n                    onChange={handleEmail}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Email', data: {email: email}});\r\n                        else\r\n                            setData({id: data[selected][2], search: '', sort: '', page: 0, name: 'Email', data: {email: email}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n\r\n        let ticket = selected!==-1?data[selected][0]:'';\r\n        let hash = selected!==-1?data[selected][1]:'';\r\n        let user = selected!==-1?data[selected][2]:'';\r\n        let event = selected!==-1?data[selected][3]:'';\r\n        let where = selected!==-1?data[selected][4]:'';\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][5]:'');\r\n        let statuses = ['продан', 'возвращен', 'использован']\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let seats = selected!==-1?JSON.parse(data[selected][6]):'';\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div className={classes.text_message}>\r\n                <b>Билет</b>\r\n                <br/>\r\n                {ticket}\r\n                <br/>\r\n                <br/>\r\n                <b>Hash</b>\r\n                <br/>\r\n                {hash}\r\n                <br/>\r\n                <br/>\r\n                <b>Пользователь</b>\r\n                <br/>\r\n                {user}\r\n                <br/>\r\n                <br/>\r\n                <b>Мероприятие</b>\r\n                <br/>\r\n                {event}\r\n                <br/>\r\n                <br/>\r\n                <b>Площадка</b>\r\n                <br/>\r\n                {where}\r\n                <br/>\r\n                <br/>\r\n                <b>Места</b>\r\n                <br/>\r\n                {seats.length>0?\r\n                    seats.map(option => {\r\n                        return(\r\n                            <>\r\n                            {'Место: ' + option[0].name+' Цена: '+option[0].price+' Дата: '+option[1]}\r\n                            <br/>\r\n                            </>)\r\n                    }):null}\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Билеты', data: {status: status}});\r\n                        else\r\n                            setData({id: data[selected][9], search: '', sort: '', page: 0, name: 'Билеты', data: {status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n\r\n        let [coords, setСoords] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleCoords =  (event) => {\r\n            setСoords(event.target.value)\r\n        };\r\n        let [cashbox, setСashbox] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleCashbox =  (event) => {\r\n            setСashbox(event.target.value)\r\n        };\r\n        let [address, setAddress] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleAddress =  (event) => {\r\n            setAddress(event.target.value)\r\n        };\r\n        let [booking, setBooking] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleBooking =  (event) => {\r\n            setBooking(event.target.value)\r\n        };\r\n        let [connection, setConnection] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleConnection =  (event) => {\r\n            setConnection(event.target.value)\r\n        };\r\n        let [return1, setReturn1] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleReturn1 =  (event) => {\r\n            setReturn1(event.target.value)\r\n        };\r\n        let [general, setGeneral] = useState(selected!==-1?data[selected][6]:'');\r\n        let handleGeneral =  (event) => {\r\n            setGeneral(event.target.value)\r\n        };\r\n        let [cooperation, setCooperation] = useState(selected!==-1?data[selected][7]:'');\r\n        let handleCooperation =  (event) => {\r\n            setCooperation(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='координаты'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={coords}\r\n                    onChange={handleCoords}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='касса'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={cashbox}\r\n                    onChange={handleCashbox}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='адрес'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={address}\r\n                    onChange={handleAddress}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='бронирование'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={booking}\r\n                    onChange={handleBooking}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='связь'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={connection}\r\n                    onChange={handleConnection}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='возврат'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={return1}\r\n                    onChange={handleReturn1}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='главная'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={general}\r\n                    onChange={handleGeneral}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='сотрудничество'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={cooperation}\r\n                    onChange={handleCooperation}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Контакт', data: {coords: coords, cashbox: cashbox, address: address, booking: booking, connection: connection, return1: return1, general: general, cooperation: cooperation}});\r\n                        else\r\n                            setData({id: data[selected][9], search: '', sort: '', page: 0, name: 'Контакт', data: {coords: coords, cashbox: cashbox, address: address, booking: booking, connection: connection, return1: return1, general: general, cooperation: cooperation}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n\r\n        let types = ['top', 'down']\r\n        let [type, setType] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleType =  (event) => {\r\n            setType(event.target.value)\r\n        };\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [link, setLink] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleLink =  (event) => {\r\n            setLink(event.target.value)\r\n        };\r\n        let dateStart1;\r\n        if(selected!==-1) {\r\n            dateStart1 = data[selected][3].replace('.', '-').replace('.', '-').replace(' ', 'T')+':00';\r\n        }\r\n        let [dateStart, setDateStart] = useState(selected!==-1?dateStart1:'2019-01-01T00:00');\r\n        let handleDateStart =  (event) => {\r\n            setDateStart(event.target.value)\r\n        };\r\n        let dateEnd1;\r\n        if(selected!==-1){\r\n            dateEnd1 = data[selected][4].replace('.', '-').replace('.', '-').replace(' ', 'T')+':00';\r\n        }\r\n        let [dateEnd, setDateEnd] = useState(selected!==-1?dateEnd1:'2019-01-01T00:00');\r\n        let handleDateEnd =  (event) => {\r\n            setDateEnd(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ссылка'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={link}\r\n                    onChange={handleLink}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='дата начала'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateStart}\r\n                    onChange={handleDateStart}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='дата окончания'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateEnd}\r\n                    onChange={handleDateEnd}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='где'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={type}\r\n                    onChange={handleType}\r\n                >\r\n                    {types != undefined?\r\n                        types.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Реклама', file: file, data: {type: type, name: name, link: link, dateStart: dateStart, dateEnd: dateEnd}});\r\n                        else\r\n                            setData({id: data[selected][7], search: '', sort: '', page: 0, name: 'Реклама', oldFile: data[selected][0], file: file, data: {type: type, name: name, link: link, dateStart: dateStart, dateEnd: dateEnd}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n\r\n        let [questionRu, setQuestionRu] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleQuestionRu =  (event) => {\r\n            setQuestionRu(event.target.value)\r\n        };\r\n        let [answerRu, setAnswerRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleAnswerRu =  (event) => {\r\n            setAnswerRu(event.target.value)\r\n        };\r\n        let [questionKg, setQuestionKg] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleQuestionKg =  (event) => {\r\n            setQuestionKg(event.target.value)\r\n        };\r\n        let [answerKg, setAnswerKg] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleAnswerKg =  (event) => {\r\n            setAnswerKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='вопрос'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={questionRu}\r\n                    onChange={handleQuestionRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ответ'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={answerRu}\r\n                    onChange={handleAnswerRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='суроо'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={questionKg}\r\n                    onChange={handleQuestionKg}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='жооп'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={answerKg}\r\n                    onChange={handleAnswerKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'FAQ', data: { questionRu: questionRu, answerRu: answerRu, questionKg: questionKg, answerKg: answerKg}});\r\n                        else\r\n                            setData({id: data[selected][5], search: '', sort: '', page: 0, name: 'FAQ', data: { questionRu: questionRu, answerRu: answerRu, questionKg: questionKg, answerKg: answerKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n        const names = ['vertical', 'square', 'horizontal', 'main', 'mainKG']\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'main');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                >\r\n                    {names != undefined?\r\n                        names.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Логотип', file: file, data: {name: name}});\r\n                        else\r\n                            setData({id: data[selected][3], search: '', sort: '', page: 0, name: 'Логотип', oldFile: data[selected][0], file: file, data: {name: name}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n\r\n        let [contact, setContact] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleContact =  (event) => {\r\n            setContact(event.target.value)\r\n        };\r\n        let [whoRu, setWhoRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleWhoRu =  (event) => {\r\n            setWhoRu(event.target.value)\r\n        };\r\n        let [whoKg, setWhoKg] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleWhoKg =  (event) => {\r\n            setWhoKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='контакты'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={contact}\r\n                    onChange={handleContact}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='кто'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={whoRu}\r\n                    onChange={handleWhoRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ким'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={whoKg}\r\n                    onChange={handleWhoKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Персонал', data: { contact: contact, whoRu: whoRu, whoKg: whoKg}});\r\n                        else\r\n                            setData({id: data[selected][4], search: '', sort: '', page: 0, name: 'Персонал', data: { contact: contact, whoRu: whoRu, whoKg: whoKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][0]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Телефон', data: {phone: phone}});\r\n                        else\r\n                            setData({id: data[selected][2], search: '', sort: '', page: 0, name: 'Телефон', data: {phone: phone}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [link, setLink] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleLink =  (event) => {\r\n            setLink(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ссылка'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={link}\r\n                    onChange={handleLink}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Социалки', file: file, data: {name: name, url: link}});\r\n                        else\r\n                            setData({id: data[selected][4], search: '', sort: '', page: 0, name: 'Социалки', oldFile: data[selected][0], file: file, data: {name: name, url: link}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n\r\n        let [nameRu, setNameRu] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleNameRu =  (event) => {\r\n            setNameRu(event.target.value)\r\n        };\r\n        let [requirementsRu, setRequirementsRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleRequirementsRu =  (event) => {\r\n            setRequirementsRu(event.target.value)\r\n        };\r\n        let [dutiesRu, setDutiesRu] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleDutiesRu =  (event) => {\r\n            setDutiesRu(event.target.value)\r\n        };\r\n        let [conditionsRu, setConditionsRu] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleConditionsRu =  (event) => {\r\n            setConditionsRu(event.target.value)\r\n        };\r\n        let [nameKg, setNameKg] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleNameKg =  (event) => {\r\n            setNameKg(event.target.value)\r\n        };\r\n        let [requirementsKg, setRequirementsKg] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleRequirementsKg =  (event) => {\r\n            setRequirementsKg(event.target.value)\r\n        };\r\n        let [dutiesKg, setDutiesKg] = useState(selected!==-1?data[selected][6]:'');\r\n        let handleDutiesKg =  (event) => {\r\n            setDutiesKg(event.target.value)\r\n        };\r\n        let [conditionsKg, setConditionsKg] = useState(selected!==-1?data[selected][7]:'');\r\n        let handleConditionsKg =  (event) => {\r\n            setConditionsKg(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameRu}\r\n                    onChange={handleNameRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='обязанности'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={requirementsRu}\r\n                    onChange={handleRequirementsRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='требования'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dutiesRu}\r\n                    onChange={handleDutiesRu}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='условия'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={conditionsRu}\r\n                    onChange={handleConditionsRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ысым'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameKg}\r\n                    onChange={handleNameKg}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='милдеттери'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={requirementsKg}\r\n                    onChange={handleRequirementsKg}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='талаптар'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dutiesKg}\r\n                    onChange={handleDutiesKg}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    Для переноса на новую строку вставьте символ: <b>|</b>\r\n                </div>\r\n                <TextField\r\n                    label='шарттары'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={conditionsKg}\r\n                    onChange={handleConditionsKg}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Вакансии', data: {nameRu: nameRu, requirementsRu: requirementsRu, dutiesRu: dutiesRu, conditionsRu: conditionsRu, nameKg: nameKg, requirementsKg: requirementsKg, dutiesKg: dutiesKg,  conditionsKg: conditionsKg}});\r\n                        else\r\n                            setData({id: data[selected][9], search: '', sort: '', page: 0, name: 'Вакансии', data: {nameRu: nameRu, requirementsRu: requirementsRu, dutiesRu: dutiesRu, conditionsRu: conditionsRu, nameKg: nameKg, requirementsKg: requirementsKg, dutiesKg: dutiesKg,  conditionsKg: conditionsKg}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n\r\n        let [nameRu, setNameRu] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleNameRu =  (event) => {\r\n            setNameRu(event.target.value)\r\n        };\r\n        let [nameKg, setNameKg] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleNameKg =  (event) => {\r\n            setNameKg(event.target.value)\r\n        };\r\n        let [address, setAddress] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleAddress = (event) => {\r\n            setAddress(event.target.value)\r\n        };\r\n        let [city, setCity] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleCity = (event) => {\r\n            setCity(event.target.value)\r\n        };\r\n        let [coords, setCoords] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleCoords =  (event) => {\r\n            setCoords(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameRu}\r\n                    onChange={handleNameRu}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='ысым'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={nameKg}\r\n                    onChange={handleNameKg}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='адрес'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={address}\r\n                    onChange={handleAddress}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='город'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={city}\r\n                    onChange={handleCity}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='координаты'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={coords}\r\n                    onChange={handleCoords}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Площадка', file: file, data: {city: city, nameRu: nameRu, nameKg: nameKg, address: address, coords: coords}});\r\n                        else\r\n                            setData({id: data[selected][7], search: '', sort: '', page: 0, name: 'Площадка', oldFile: data[selected][0], file: file, data: {city: city, nameRu: nameRu, nameKg: nameKg, address: address, coords: coords}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [surname, setSurame] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleSurname =  (event) => {\r\n            setSurame(event.target.value)\r\n        };\r\n        let [email, setEmail] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleEmail =  (event) => {\r\n            setEmail(event.target.value)\r\n        };\r\n        let [phonenumber, setPhonenumber] = useState(selected!==-1?data[selected][3]:'');\r\n        let handlePhonenumber = (event) => {\r\n            setPhonenumber(event.target.value)\r\n        };\r\n        let roles = ['manager', 'accountant', 'cashier', 'client', 'cinema', 'turnstile']\r\n        let [role, setRole] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleRole = (event) => {\r\n            setRole(event.target.value)\r\n        };\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='фамилия'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={surname}\r\n                    onChange={handleSurname}\r\n                />\r\n                <br/>\r\n                {selected!==-1?\r\n                    <>\r\n                    <br/>\r\n                    <div className={classes.textField}>\r\n                        <b>email:</b> {email}\r\n                    </div>\r\n                    <br/>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    <TextField\r\n                        label='email'\r\n                        type='login'\r\n                        className={classes.textField}\r\n                        margin='normal'\r\n                        value={email}\r\n                        onChange={handleEmail}\r\n                    />\r\n                    <br/>\r\n                    </>\r\n                }\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phonenumber}\r\n                    onChange={handlePhonenumber}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='роль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={role}\r\n                    onChange={handleRole}\r\n                >\r\n                    {roles != undefined?\r\n                        roles.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <br/>\r\n                    <TextField\r\n                        label='пароль'\r\n                        type='login'\r\n                        className={classes.textField}\r\n                        margin='normal'\r\n                        value={password}\r\n                        onChange={handlePassword}\r\n                    />\r\n                    <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Пользователи', data: {email: email, name: name, surname: surname, phonenumber: phonenumber, role: role, password: password, status: status}});\r\n                        else\r\n                            setData({id: data[selected][7], search: '', sort: '', page: 0, name: 'Пользователи', data: {email: email, name: name, surname: surname, phonenumber: phonenumber, role: role,  password: password, status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { getDataSimple } from '../../redux/actions/table'\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n\r\n        useEffect(async()=>{\r\n            await setEvents(await getDataSimple({name: 'СобытиеID'}));\r\n        },[])\r\n        let [events, setEvents] = useState([]);\r\n        let [event, setEvent] = useState(selected!==-1?data[selected][2].split('\\n')[1]:'');\r\n        let handleEvent =  (event) => {\r\n            setEvent(event.target.value)\r\n        };\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let dateStart1;\r\n        if(selected!==-1) {\r\n            dateStart1 = {part1: data[selected][3].split(' ')};\r\n            dateStart1.part2 = dateStart1.part1[1];\r\n            dateStart1.part1 = dateStart1.part1[0].split('.');\r\n            dateStart1 =  dateStart1.part1[0]+'-'+dateStart1.part1[2]+'-'+dateStart1.part1[1]+'T'+dateStart1.part2+':00';\r\n        }\r\n        let [dateStart, setDateStart] = useState(selected!==-1?dateStart1:'2019-01-01T00:00');\r\n        let handleDateStart =  (event) => {\r\n            setDateStart(event.target.value)\r\n        };\r\n        let dateEnd1;\r\n        if(selected!==-1){\r\n            dateEnd1 = {part1: data[selected][4].split(' ')};\r\n            dateEnd1.part2 = dateEnd1.part1[1];\r\n            dateEnd1.part1 = dateEnd1.part1[0].split('.');\r\n            dateEnd1 =  dateEnd1.part1[0]+'-'+dateEnd1.part1[2]+'-'+dateEnd1.part1[1]+'T'+dateEnd1.part2+':00';\r\n        }\r\n        console.log(dateEnd1, dateStart1)\r\n        let [dateEnd, setDateEnd] = useState(selected!==-1?dateEnd1:'2019-01-01T00:00');\r\n        let handleDateEnd =  (event) => {\r\n            setDateEnd(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='событие'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={event}\r\n                    onChange={handleEvent}\r\n                >\r\n                    {events != undefined?\r\n                        events.map(option => {\r\n                            return(\r\n                            <MenuItem key={option._id} value={option._id}>\r\n                                {option.nameRu}\r\n                            </MenuItem>)\r\n                        })\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='дата начала'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateStart}\r\n                    onChange={handleDateStart}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='дата окончания'\r\n                    type='datetime-local'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={dateEnd}\r\n                    onChange={handleDateEnd}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Биллборды', file: file, data: {name: name, dateStart: dateStart, dateEnd: dateEnd, event: event}});\r\n                        else\r\n                            setData({id: data[selected][6], search: '', sort: '', page: 0, name: 'Биллборды', oldFile: data[selected][0], file: file, data: {name: name, dateStart: dateStart, dateEnd: dateEnd, event: event}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleName = (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [genre, setGenre] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleGenre = (event) => {\r\n            setGenre(event.target.value)\r\n        };\r\n        let types = ['скоро', 'в прокате']\r\n        let [type, setType] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleType = (event) => {\r\n            setType(event.target.value)\r\n        };\r\n        let [duration, setDuration] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleDuration = (event) => {\r\n            setDuration(event.target.value)\r\n        };\r\n        let [ageCategory, setAgeCategory] = useState(selected!==-1?data[selected][5]:'');\r\n        let handleAgeCategory = (event) => {\r\n            setAgeCategory(event.target.value)\r\n        };\r\n        let [premier, setPremier] = useState(selected!==-1?data[selected][6]:'');\r\n        let handlePremier = (event) => {\r\n            setPremier(event.target.value)\r\n        };\r\n        let [producers, setPoducers] = useState(selected!==-1?data[selected][7]:'');\r\n        let handleProducers = (event) => {\r\n            setPoducers(event.target.value)\r\n        };\r\n        let [actors, setActors] = useState(selected!==-1?data[selected][8]:'');\r\n        let handleActors = (event) => {\r\n            setActors(event.target.value)\r\n        };\r\n        let [description, setDescription] = useState(selected!==-1?data[selected][9]:'');\r\n        let handleDescription = (event) => {\r\n            setDescription(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = ((event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='жанр'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={genre}\r\n                    onChange={handleGenre}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='тип'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={type}\r\n                    onChange={handleType}\r\n                >\r\n                    {types != undefined?\r\n                        types.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='продолжительность'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={duration}\r\n                    onChange={handleDuration}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='возраст'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={ageCategory}\r\n                    onChange={handleAgeCategory}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='премьера'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={premier}\r\n                    onChange={handlePremier}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='актеры'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={actors}\r\n                    onChange={handleActors}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='режиссеры'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={producers}\r\n                    onChange={handleProducers}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='описание'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={description}\r\n                    onChange={handleDescription}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Кино', file: file, data: {name: name, genre: genre, type: type, description: description, duration: duration, ageCategory: ageCategory, premier: premier,  producers: producers, actors: actors}});\r\n                        else\r\n                            setData({id: data[selected][11], search: '', sort: '', page: 0, name: 'Кино', oldFile: data[selected][0], file: file, data: {name: name, genre: genre, type: type, description: description, duration: duration, ageCategory: ageCategory, premier: premier,  producers: producers, actors: actors}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n\r\n        let [mailuser, setMailuser] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleMailuser =  (event) => {\r\n            setMailuser(event.target.value)\r\n        };\r\n        let [mailpass, setMailpass] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleMailpass =  (event) => {\r\n            setMailpass(event.target.value)\r\n        };\r\n        let [mailchimpInstance, setMailchimpInstance] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleMailchimpInstance =  (event) => {\r\n            setMailchimpInstance(event.target.value)\r\n        };\r\n        let [listUniqueId, setListUniqueId] = useState(selected!==-1?data[selected][3]:'');\r\n        let handleListUniqueId =  (event) => {\r\n            setListUniqueId(event.target.value)\r\n        };\r\n        let [mailchimpApiKey, setMailchimpApiKey] = useState(selected!==-1?data[selected][4]:'');\r\n        let handleMailchimpApiKey =  (event) => {\r\n            setMailchimpApiKey(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='mailuser'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailuser}\r\n                    onChange={handleMailuser}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='mailpass'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailpass}\r\n                    onChange={handleMailpass}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='mailchimpInstance'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailchimpInstance}\r\n                    onChange={handleMailchimpInstance}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='listUniqueId'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={listUniqueId}\r\n                    onChange={handleListUniqueId}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='mailchimpApiKey'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={mailchimpApiKey}\r\n                    onChange={handleMailchimpApiKey}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Рассылка', data: {mailuser: mailuser, mailpass: mailpass, mailchimpInstance: mailchimpInstance, listUniqueId: listUniqueId, mailchimpApiKey: mailchimpApiKey}});\r\n                        else\r\n                            setData({id: data[selected][6], search: '', sort: '', page: 0, name: 'Рассылка', data: {mailuser: mailuser, mailpass: mailpass, mailchimpInstance: mailchimpInstance, listUniqueId: listUniqueId, mailchimpApiKey: mailchimpApiKey}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { getDataSimple } from '../../redux/actions/table'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n\r\n        useEffect(async()=>{\r\n            await setUsers(await getDataSimple({name: 'Кинотеатры'}));\r\n        },[])\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [user, setUser] = useState(selected!==-1?data[selected][1].split('\\n')[1]:'');\r\n        let handleUser =  (event) => {\r\n            setUser(event.target.value)\r\n        };\r\n        let [users, setUsers] = useState([]);\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='кинотеатр'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={user}\r\n                    onChange={handleUser}\r\n                >\r\n                    {users != undefined?\r\n                        users.map(option => (\r\n                            <MenuItem key={option._id} value={option._id}>\r\n                                {option.name}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Залы', data: {name: name, user: user}});\r\n                        else\r\n                            setData({id: data[selected][3], search: '', sort: '', page: 0, name: 'Залы', data: {name: name, user: user}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n\r\n        let ticket = selected!==-1?data[selected][0]:'';\r\n        let hash = selected!==-1?data[selected][1]:'';\r\n        let user = selected!==-1?data[selected][2]:'';\r\n        let movie = selected!==-1?data[selected][3]:'';\r\n        let cinema = selected!==-1?data[selected][4]:'';\r\n        let hall = selected!==-1?data[selected][5]:'';\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][6]:'');\r\n        let statuses = ['продан', 'возвращен', 'использован']\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let seats = selected!==-1?JSON.parse(data[selected][7]):'';\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div className={classes.text_message}>\r\n                <b>Билет</b>\r\n                <br/>\r\n                {ticket}\r\n                <br/>\r\n                <br/>\r\n                <b>Hash</b>\r\n                <br/>\r\n                {hash}\r\n                <br/>\r\n                <br/>\r\n                <b>Пользователь</b>\r\n                <br/>\r\n                {user}\r\n                <br/>\r\n                <br/>\r\n                <b>Фильм</b>\r\n                <br/>\r\n                {movie}\r\n                <br/>\r\n                <br/>\r\n                <b>Кинотеатр</b>\r\n                <br/>\r\n                {cinema}\r\n                <br/>\r\n                <br/>\r\n                <b>Зал</b>\r\n                <br/>\r\n                {hall}\r\n                <br/>\r\n                <br/>\r\n                <b>Места</b>\r\n                <br/>\r\n                {seats.length>0?\r\n                    seats.map(option => {\r\n                        return(\r\n                            <>\r\n                            {'Место: ' + option.name+' Цена: '+option.priceSelect+' Дата: '+option.date}\r\n                            <br/>\r\n                            </>)\r\n                    }):null}\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Билеты кино', data: {status: status}});\r\n                        else\r\n                            setData({id: data[selected][9], search: '', sort: '', page: 0, name: 'Билеты кино', data: {status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n        let [balance, setBalance] = useState(selected!==-1?data[selected][2]:'');\r\n        let user = selected!==-1?data[selected][0]:'';\r\n        let wallet = selected!==-1?data[selected][1]:'';\r\n        let handleBalance =  (event) => {\r\n            setBalance(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <div className={classes.textField}>\r\n                    <b>пользователь:</b> {user}\r\n                </div>\r\n                <br/>\r\n                <div className={classes.textField}>\r\n                    <b>кошелек:</b> {wallet}\r\n                </div>\r\n                <br/>\r\n                <TextField\r\n                    label='баланс'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={balance}\r\n                    onChange={handleBalance}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected!==-1)\r\n                            setData({id: data[selected][4], search: '', sort: '', page: 0, name: 'Баланс', data: {balance: balance}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [address, setAddress] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleAddress =  (event) => {\r\n            setAddress(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='адрес'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={address}\r\n                    onChange={handleAddress}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Кассы', data: {name: name, address: address}});\r\n                        else\r\n                            setData({id: data[selected][3], search: '', sort: '', page: 0, name: 'Кассы', data: {name: name, address: address}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    text_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        overflow: 'hidden',\r\n        wordWrap: 'break-word'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n        let wallet = selected!==-1?data[selected][0]:'';\r\n        let ticket = selected!==-1?data[selected][1]:'';\r\n        let service = selected!==-1?data[selected][2]:'';\r\n        let sum = selected!==-1?data[selected][3]:'';\r\n        let meta = selected!==-1?data[selected][4]:'';\r\n        let [status, setStatus] = useState(selected!==-1?data[selected][5]:'');\r\n        let name = selected!==-1?data[selected][6]:'';\r\n        let email = selected!==-1?data[selected][7]:'';\r\n        let sms = selected!==-1?data[selected][8]:'';\r\n        let statuses = ['обработка', 'совершен', 'отменен', 'ошибка']\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div className={classes.text_message}>\r\n                <b>Адрес</b>\r\n                <br/>\r\n                {wallet}\r\n                <br/>\r\n                <br/>\r\n                <b>Билет</b>\r\n                <br/>\r\n                {ticket}\r\n                <br/>\r\n                <br/>\r\n                <b>Сумма</b>\r\n                <br/>\r\n                {sum}\r\n                <br/>\r\n                <br/>\r\n                <b>Сервис</b>\r\n                <br/>\r\n                {service}\r\n                <br/>\r\n                <br/>\r\n                <b>Meta</b>\r\n                <br/>\r\n                {meta}\r\n                <br/>\r\n                <br/>\r\n                <b>Имя</b>\r\n                <br/>\r\n                {name}\r\n                <br/>\r\n                <br/>\r\n                <b>Email</b>\r\n                <br/>\r\n                {email}\r\n                <br/>\r\n                <br/>\r\n                <b>SMS</b>\r\n                <br/>\r\n                {sms}\r\n                <br/>\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Платежи', data: {status: status}});\r\n                        else\r\n                            setData({id: data[selected][11], search: '', sort: '', page: 0, name: 'Платежи', data: {status: status}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import { SET_MINI_DIALOG, SHOW_MINI_DIALOG } from '../constants/mini_dialog'\r\nimport React from 'react'\r\nimport {\r\n    store\r\n} from '../../index'\r\nimport About from '../../component/Add/About';\r\nimport Email from '../../component/Add/Email';\r\nimport Ticket from '../../component/Add/Ticket';\r\nimport Contact from '../../component/Add/Contact';\r\nimport Ads from '../../component/Add/Ads';\r\nimport Faq from '../../component/Add/Faq';\r\nimport Logo from '../../component/Add/Logo';\r\nimport Personal from '../../component/Add/Personal';\r\nimport Phone from '../../component/Add/Phone';\r\nimport Social from '../../component/Add/Social';\r\nimport Vacancy from '../../component/Add/Vacancy';\r\nimport Where from '../../component/Add/Where';\r\nimport User from '../../component/Add/User';\r\nimport Billboard from '../../component/Add/Billboard';\r\nimport Cinema from '../../component/Add/Cinema';\r\nimport Mailing from '../../component/Add/Mailing';\r\nimport Hall from '../../component/Add/Hall';\r\nimport TicketCinema from '../../component/Add/TicketCinema';\r\nimport Balance from '../../component/Add/Balance';\r\nimport Cashbox from '../../component/Add/Cashbox';\r\nimport Payment from '../../component/Add/Payment';\r\n\r\nexport function setMiniDialog(title,child) {\r\n    return {\r\n        type: SET_MINI_DIALOG,\r\n        payload: {title: title, child: child}\r\n    }\r\n}\r\n\r\nexport function showAddMiniDialog() {\r\n    return async (dispatch) => {\r\n        if(store.getState().table.name!=''){\r\n            let child;\r\n            if(store.getState().table.name=='Рассылка')\r\n                child = <Mailing/>\r\n            else if(store.getState().table.name=='Билеты кино')\r\n                child = <TicketCinema/>\r\n            else if(store.getState().table.name=='О нас')\r\n                child = <About/>\r\n            else if(store.getState().table.name=='Билеты')\r\n                child = <Ticket/>\r\n            else if(store.getState().table.name=='Кино')\r\n                child = <Cinema/>\r\n            else if(store.getState().table.name=='Email')\r\n                child = <Email/>\r\n            else if(store.getState().table.name=='Площадка')\r\n                child = <Where/>\r\n            else if(store.getState().table.name=='Вакансии')\r\n                child = <Vacancy/>\r\n            else if(store.getState().table.name=='Реклама')\r\n                child = <Ads/>\r\n            else if(store.getState().table.name=='Контакт')\r\n                child = <Contact/>\r\n            else if(store.getState().table.name=='FAQ')\r\n                child = <Faq/>\r\n            else if(store.getState().table.name=='Логотип')\r\n                child = <Logo/>\r\n            else if(store.getState().table.name=='Персонал')\r\n                child = <Personal/>\r\n            else if(store.getState().table.name=='Телефон')\r\n                child = <Phone/>\r\n            else if(store.getState().table.name=='Социалки')\r\n                child = <Social/>\r\n            else if(store.getState().table.name=='Пользователи')\r\n                child = <User/>\r\n            else if(store.getState().table.name=='Биллборды')\r\n                child = <Billboard/>\r\n            else if(store.getState().table.name=='Залы')\r\n                child = <Hall/>\r\n            else if(store.getState().table.name=='Баланс')\r\n                child = <Balance/>\r\n            else if(store.getState().table.name=='Кассы')\r\n                child = <Cashbox/>\r\n            else if(store.getState().table.name=='Платежи')\r\n                child = <Payment/>\r\n            dispatch ({\r\n                type: SET_MINI_DIALOG,\r\n                payload: {title: store.getState().table.name, child: child}\r\n            })\r\n            dispatch ({\r\n                type: SHOW_MINI_DIALOG,\r\n                payload: true\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function showMiniDialog(show) {\r\n    return {\r\n        type: SHOW_MINI_DIALOG,\r\n        payload: show\r\n    }\r\n}\r\n","import {\r\n    GET_DATA,\r\n    GET_IDS,\r\n    SET_SELECTED\r\n} from '../constants/table'\r\nimport axios from 'axios';\r\nimport FormData from 'form-data';\r\n\r\nexport function setData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            let _headers;\r\n            data.append('id', payload.id);\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('new', JSON.stringify(payload.data));\r\n            if(payload.oldFile != undefined){\r\n                data.append('oldFile', payload.oldFile);\r\n            }\r\n            if(payload.oldFileWhatermark != undefined){\r\n                data.append('oldFileWhatermark', payload.oldFileWhatermark);\r\n            }\r\n            if (payload.file != undefined) {\r\n                data.append('fileLength', payload.file.length);\r\n                for(let i=0; i<payload.file.length; i++){\r\n                    data.append('file'+i, payload.file[i]);\r\n                    data.append('fileName'+i, payload.file[i].name);\r\n                }\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization': 'Bearer ' + localStorage.userBiletikiAdmin,\r\n                }\r\n            } else {\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }\r\n            }\r\n            const res = await axios.post(\r\n                '/data/add',\r\n                data,\r\n                {headers: _headers});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function addData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            let _headers;\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('new', JSON.stringify(payload.data));\r\n            if (payload.file != undefined) {\r\n                data.append('fileLength', payload.file.length);\r\n                for(let i=0; i<payload.file.length; i++){\r\n                    data.append('file'+i, payload.file[i]);\r\n                    data.append('fileName'+i, payload.file[i].name);\r\n                }\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization': 'Bearer ' + localStorage.userBiletikiAdmin\r\n                }\r\n            } else {\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }\r\n            }\r\n            const res = await axios.post(\r\n                '/data/add',\r\n                data,\r\n                {headers: _headers});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function setSelected(payload) {\r\n    return {\r\n        type: SET_SELECTED,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function getIds(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('name', payload);\r\n            const res = await axios.post(\r\n                '/data/getIds',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            dispatch({\r\n                type: GET_IDS,\r\n                payload: res.data\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function getData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            const res = await axios.post(\r\n                '/data/get',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport const getDataSimple = async (payload) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('name', payload.name);\r\n            if(payload.data!==undefined)\r\n                data.append('data', JSON.stringify(payload.data));\r\n            const res = await axios.post(\r\n                '/data/get',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            return res.data\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n}\r\n\r\nexport function deleteData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('deleted', payload.deleted);\r\n            if(payload.oldFile != undefined && payload.oldFile.length > 0){\r\n                data.append('oldFile', payload.oldFile);\r\n            }\r\n            const res = await axios.post(\r\n                '/data/delete',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userBiletikiAdmin,\r\n                }});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name!=='Произведение')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(data3.length>200)\r\n                            data3 = data3.substring(0, 200)+'...'\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}"],"sourceRoot":""}