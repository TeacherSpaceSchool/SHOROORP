{"version":3,"sources":["component/Drawer.js"],"names":["MyDrawer","React","memo","props","_props$app","app","drawer","profile","status","user","showDrawer","appActions","_props$tableActions","tableActions","getData","setSelected","classes","_useState","useState","_useState2","Object","C_projects_shoro_shoro_admin_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","secondMenuOpen","setSecondMenuOpen","_useState3","_useState4","thirdMenuOpen","setThirdMenuOpen","_useState5","_useState6","fourthMenuOpen","setFourthMenuOpen","_useState7","_useState8","regionList","setRegionList","_useState9","_useState10","pointList","setPointList","_useState11","_useState12","selectedRegion","setSelectedRegion","useEffect","_fetchData","C_projects_shoro_shoro_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","C_projects_shoro_shoro_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","wrap","_context","prev","next","t0","name","t1","sent","t2","t3","stop","this","apply","arguments","fetchData","collapse","C_projects_shoro_shoro_admin_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","open","keys","i","length","collapse1","collapse2","_useState13","_useState14","selectedItem","setSelectedItem","collapseSelectedItem","authenticated","variant","mainWindow","current","offsetWidth","react__WEBPACK_IMPORTED_MODULE_4___default","createElement","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_7___default","className","onClose","paper","drawerPaper","toolbar","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_8___default","includes","role","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_9___default","button","key","onClick","history","push","search","sort","page","_material_ui_core_ListItemIcon__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_icons_Face__WEBPACK_IMPORTED_MODULE_21___default","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_11___default","primary","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_12___default","_material_ui_icons_Storage__WEBPACK_IMPORTED_MODULE_25___default","_material_ui_icons_UnfoldLess__WEBPACK_IMPORTED_MODULE_19___default","_material_ui_icons_UnfoldMore__WEBPACK_IMPORTED_MODULE_20___default","_material_ui_core_Collapse__WEBPACK_IMPORTED_MODULE_18___default","in","timeout","unmountOnExit","component","disablePadding","Fragment","nested","_material_ui_icons_LocationCity__WEBPACK_IMPORTED_MODULE_35___default","_material_ui_icons_LocationOn__WEBPACK_IMPORTED_MODULE_33___default","nested1SelectedItem","nested1","region","_material_ui_icons_AllInbox__WEBPACK_IMPORTED_MODULE_37___default","undefined","map","element","idx","guid","_material_ui_icons_AssignmentInd__WEBPACK_IMPORTED_MODULE_30___default","_material_ui_icons_Commute__WEBPACK_IMPORTED_MODULE_31___default","_material_ui_icons_AccountBalanceWallet__WEBPACK_IMPORTED_MODULE_32___default","_material_ui_icons_Assignment__WEBPACK_IMPORTED_MODULE_26___default","_material_ui_icons_Receipt__WEBPACK_IMPORTED_MODULE_34___default","guidRegion","_callee2","_context2","_callee3","_context3","_material_ui_icons_Archive__WEBPACK_IMPORTED_MODULE_36___default","_callee4","_context4","point","_callee5","_context5","nested2SelectedItem","nested2","element1","_material_ui_icons_Assessment__WEBPACK_IMPORTED_MODULE_28___default","_material_ui_icons_ListAlt__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Timeline__WEBPACK_IMPORTED_MODULE_27___default","_material_ui_icons_List__WEBPACK_IMPORTED_MODULE_29___default","_material_ui_icons_GpsFixed__WEBPACK_IMPORTED_MODULE_38___default","_material_ui_icons_Info__WEBPACK_IMPORTED_MODULE_22___default","_material_ui_icons_Web__WEBPACK_IMPORTED_MODULE_23___default","_material_ui_icons_QuestionAnswer__WEBPACK_IMPORTED_MODULE_24___default","connect","state","dispatch","bindActionCreators","withStyles","theme","width","flexShrink","mixins","paddingLeft","spacing","unit","background"],"mappings":"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","file":"static/js/7.241b92cb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Event from '@material-ui/icons/ListAlt';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { mainWindow } from '../App'\r\nimport * as tableActions from '../redux/actions/table'\r\nimport * as appActions from '../redux/actions/app'\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/UnfoldLess';\r\nimport ExpandMore from '@material-ui/icons/UnfoldMore';\r\nimport Face from '@material-ui/icons/Face';\r\nimport Info from '@material-ui/icons/Info';\r\nimport ArtTrack from '@material-ui/icons/Web';\r\nimport QuestionAnswer from '@material-ui/icons/QuestionAnswer';\r\nimport Storage from '@material-ui/icons/Storage';\r\nimport Assignment from '@material-ui/icons/Assignment';\r\nimport Timeline from '@material-ui/icons/Timeline';\r\nimport Assessment from '@material-ui/icons/Assessment';\r\nimport List1 from '@material-ui/icons/List';\r\nimport AssignmentInd from '@material-ui/icons/AssignmentInd';\r\nimport Commute from '@material-ui/icons/Commute';\r\nimport AccountBalance from '@material-ui/icons/AccountBalanceWallet';\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport Receipt from '@material-ui/icons/Receipt';\r\nimport LocationCity from '@material-ui/icons/LocationCity';\r\nimport Archive from '@material-ui/icons/Archive';\r\nimport All from '@material-ui/icons/AllInbox';\r\nimport GpsFixed from '@material-ui/icons/GpsFixed';\r\n\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst styles = theme => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    nested: {\r\n        paddingLeft: theme.spacing.unit * 4,\r\n    },\r\n    nested1: {\r\n        paddingLeft: theme.spacing.unit * 6,\r\n    },\r\n    nested1SelectedItem: {\r\n        paddingLeft: theme.spacing.unit * 6,\r\n        background: '#C1C1C1',\r\n    },\r\n    nested2: {\r\n        paddingLeft: theme.spacing.unit * 8\r\n    },\r\n    nested2SelectedItem: {\r\n        paddingLeft: theme.spacing.unit * 8,\r\n        background: '#C1C1C1',\r\n    },\r\n\r\n\r\n});\r\n\r\nconst MyDrawer = React.memo(\r\n    (props) =>{\r\n        const { drawer, profile } = props.app;\r\n        const { status } = props.user;\r\n        const { showDrawer } = props.appActions;\r\n        const { getData, setSelected } = props.tableActions;\r\n        const { classes } = props;\r\n        let [secondMenuOpen, setSecondMenuOpen] = useState({});\r\n        let [thirdMenuOpen, setThirdMenuOpen] = useState({});\r\n        let [fourthMenuOpen, setFourthMenuOpen] = useState({});\r\n        let [regionList, setRegionList] = useState([]);\r\n        let [pointList, setPointList] = useState([]);\r\n        let [selectedRegion, setSelectedRegion] = useState('');\r\n\r\n        useEffect(()=>{\r\n            async function fetchData() {\r\n                setRegionList(await tableActions.getDataSimple({name: 'РегионИмя'}))\r\n                setPointList(await tableActions.getDataSimple({name: 'ТочкаСРегионом'}))\r\n            }\r\n            fetchData();\r\n        },[])\r\n        let collapse = (name)=>{\r\n            secondMenuOpen = {...secondMenuOpen}\r\n            thirdMenuOpen = {...thirdMenuOpen}\r\n            fourthMenuOpen = {...fourthMenuOpen}\r\n            let open = !secondMenuOpen[name]\r\n            let keys = Object.keys(thirdMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                thirdMenuOpen[keys[i]] = false\r\n            }\r\n            setThirdMenuOpen(thirdMenuOpen)\r\n            keys = Object.keys(fourthMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                fourthMenuOpen[keys[i]] = false\r\n            }\r\n            setFourthMenuOpen(fourthMenuOpen)\r\n            keys = Object.keys(secondMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                secondMenuOpen[keys[i]] = false\r\n            }\r\n            secondMenuOpen[name] = open\r\n            setSecondMenuOpen(secondMenuOpen)\r\n\r\n        }\r\n        let collapse1 = (name)=>{\r\n            thirdMenuOpen = {...thirdMenuOpen}\r\n            fourthMenuOpen = {...fourthMenuOpen}\r\n            let open = !thirdMenuOpen[name]\r\n            let keys = Object.keys(thirdMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                thirdMenuOpen[keys[i]] = false\r\n            }\r\n            thirdMenuOpen[name] = open\r\n            setThirdMenuOpen(thirdMenuOpen)\r\n            keys = Object.keys(fourthMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                fourthMenuOpen[keys[i]] = false\r\n            }\r\n            setFourthMenuOpen(fourthMenuOpen)\r\n\r\n        }\r\n        let collapse2 = (name)=>{\r\n            fourthMenuOpen = {...fourthMenuOpen}\r\n            let open = !fourthMenuOpen[name]\r\n            let keys = Object.keys(fourthMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                fourthMenuOpen[keys[i]] = false\r\n            }\r\n            fourthMenuOpen[name] = open\r\n            setFourthMenuOpen(fourthMenuOpen)\r\n\r\n        }\r\n        let [selectedItem, setSelectedItem] = useState({});\r\n        let collapseSelectedItem = (name)=>{\r\n            selectedItem = {...selectedItem}\r\n            let open = !selectedItem[name]\r\n            let keys = Object.keys(selectedItem)\r\n            for(let i = 0; i<keys.length; i++){\r\n                selectedItem[keys[i]] = false\r\n            }\r\n            selectedItem[name] = open\r\n            setSelectedItem(selectedItem)\r\n\r\n        }\r\n        const { authenticated } = props.user;\r\n        let variant= ''\r\n        if(mainWindow.current.offsetWidth>800)\r\n            variant= 'permanent'\r\n        return (\r\n            <div>\r\n                <Drawer\r\n                    variant= {variant}\r\n                    className={classes.drawer}\r\n                    open={drawer}\r\n                    onClose={()=>showDrawer(false)}\r\n                    classes={{paper: classes.drawerPaper,}}\r\n                >\r\n                    {\r\n                        mainWindow.current.offsetWidth>800?\r\n                            <div className={classes.toolbar}/>\r\n                        :\r\n                            null\r\n                    }\r\n                    {authenticated?\r\n                        <List>\r\n                            {\r\n                                status.status==='active'&&['реализатор', 'организатор'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{props.history.push('/profile');showDrawer(false); getData({search: '', sort: '', page: 0, name: ''}); setSelected(-1)}}>\r\n                                            <ListItemIcon>\r\n                                                <Face />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={'Профиль'} />\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'организатор'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('Данные')}}>\r\n                                            <ListItemIcon><Storage /></ListItemIcon>\r\n                                            <ListItemText primary={'Данные'} />\r\n                                            {secondMenuOpen['Данные'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['Данные']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Регион'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><LocationCity /></ListItemIcon>\r\n                                                            <ListItemText primary={'Регион'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Точка'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('данныеТочка')}}>\r\n                                                            <ListItemIcon><LocationOn /></ListItemIcon>\r\n                                                            <ListItemText primary={'Точка'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['данныеТочка'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['данныеТочка']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['ТочкаВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Точка', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('ТочкаВсе')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                    return(\r\n                                                                        <React.Fragment key={idx}>\r\n                                                                        <ListItem className={selectedItem['Точка'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                            props.history.push('/');\r\n                                                                            showDrawer(false);\r\n                                                                            getData({search: '', sort: '', page: 0, name: 'Точка', region: element.guid});\r\n                                                                            setSelected(-1);\r\n                                                                            collapseSelectedItem('Точка'+element.guid)\r\n                                                                        }}>\r\n                                                                            <ListItemIcon><LocationOn /></ListItemIcon>\r\n                                                                            <ListItemText primary={element.name} />\r\n                                                                        </ListItem>\r\n                                                                        <Divider variant='inset'/>\r\n                                                                        </React.Fragment>\r\n                                                                    )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Организатор'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><AssignmentInd /></ListItemIcon>\r\n                                                            <ListItemText primary={'Организатор'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Реализатор'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('данныеРеализатор')\r\n\r\n                                                        }}>\r\n                                                            <ListItemIcon><AssignmentInd /></ListItemIcon>\r\n                                                            <ListItemText primary={'Реализатор'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['данныеРеализатор'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['данныеРеализатор']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['РеализаторВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Реализатор', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('РеализаторВсе')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                                <ListItem className={selectedItem['Реализатор'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                    props.history.push('/');\r\n                                                                                    showDrawer(false);\r\n                                                                                    getData({search: '', sort: '', page: 0, name: 'Реализатор', region: element.guid});\r\n                                                                                    setSelected(-1);\r\n                                                                                    collapseSelectedItem('Реализатор'+element.guid)\r\n                                                                                }}>\r\n                                                                                    <ListItemIcon><AssignmentInd /></ListItemIcon>\r\n                                                                                    <ListItemText primary={element.name} />\r\n                                                                                </ListItem>\r\n                                                                                <Divider variant='inset'/>\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Завсклада'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><AssignmentInd /></ListItemIcon>\r\n                                                            <ListItemText primary={'Завсклада'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Машина'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><Commute /></ListItemIcon>\r\n                                                            <ListItemText primary={'Машина'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Цена'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><AccountBalance /></ListItemIcon>\r\n                                                            <ListItemText primary={'Цена'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('Накладные')}}>\r\n                                            <ListItemIcon><Assignment /></ListItemIcon>\r\n                                            <ListItemText primary={'Накладные'} />\r\n                                            {secondMenuOpen['Накладные'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['Накладные']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/nnvv')\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на вечерний возврат сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная на вечерний возврат сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/nnpt')\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на пустую тару сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная на пустую тару сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/ns1')\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №1 сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная склад №1 сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/ns2')\r\n\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №2 сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная склад №2 сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/oo')\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Отчет организатора сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Отчет организатора сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='реализатор') {\r\n                                                                props.history.push('/or')\r\n\r\n                                                            } else if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Отчет реализатора сегодня', region: profile.guidRegion});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Отчет реализатора сегодня')\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Отчет реализатора сегодня'} />\r\n                                                            {status.role==='реализатор'||status.role==='организатор'?null:thirdMenuOpen['Отчет реализатора сегодня'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Отчет реализатора сегодня']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Отчет реализатора сегодняВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={async()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Отчет реализатора сегодня', region: ''});\r\n                                                                    setSelected(-1)\r\n                                                                    collapseSelectedItem('Отчет реализатора сегодняВсе')\r\n\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    (regionList).map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Отчет реализатора сегодня'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={async()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Отчет реализатора сегодня', region: element.guid});\r\n                                                                                setSelected(-1)\r\n                                                                                collapseSelectedItem('Отчет реализатора сегодня'+element.guid)\r\n\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n\r\n\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('Архив')}}>\r\n                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                            <ListItemText primary={'Архив'} />\r\n                                            {secondMenuOpen['Архив'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['Архив']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на вечерний возврат'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Накладная на вечерний возврат')\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная на вечерний возврат'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Накладная на вечерний возврат'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Накладная на вечерний возврат']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Накладная на вечерний возвратВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Накладная на вечерний возврат', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('Накладная на вечерний возвратВсе')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Накладная на вечерний возврат'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на вечерний возврат', region: element.guid});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Накладная на вечерний возврат'+element.guid)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на пустую тару'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Накладная на пустую тару')\r\n\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная на пустую тару'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Накладная на пустую тару'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Накладная на пустую тару']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Накладная на пустую таруВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Накладная на пустую тару', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('Накладная на пустую таруВсе')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Накладная на пустую тару'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на пустую тару', region: element.guid});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Накладная на пустую тару'+element.guid)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №1'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Накладная склад №1')\r\n\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная склад №1'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Накладная склад №1'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Накладная склад №1']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Накладная склад №1Все']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Накладная склад №1', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('Накладная склад №1Все')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Накладная склад №1'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №1', region: element.guid});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Накладная склад №1'+element.guid)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №2'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Накладная склад №2')\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная склад №2'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Накладная склад №2'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Накладная склад №2']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Накладная склад №2Все']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Накладная склад №2', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('Накладная склад №2Все')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Накладная склад №2'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №2', region: element.guid});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Накладная склад №2'+element.guid)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Отчет организатора'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Отчет организатора')\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Отчет организатора'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Отчет организатора'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Отчет организатора']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Отчет организатораВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Отчет организатора', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('Отчет организатораВсе')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Отчет организатора'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Отчет организатора', region: element.guid});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Отчет организатора'+element.guid)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='реализатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Отчет реализатора'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Отчет реализатора')\r\n                                                          }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Отчет реализатора'} />\r\n                                                            {status.role==='реализатор'?null:thirdMenuOpen['Отчет реализатора'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Отчет реализатора']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Отчет реализатораВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={async()=>{\r\n                                                                    if(status.role==='организатор') {\r\n                                                                        props.history.push('/');\r\n                                                                        showDrawer(false);\r\n                                                                        getData({search: '', sort: '', page: 0, name: 'Отчет реализатора', point: ''});\r\n                                                                        setSelected(-1)\r\n                                                                    } else {\r\n                                                                        props.history.push('/');\r\n                                                                        showDrawer(false);\r\n                                                                        getData({search: '', sort: '', page: 0, name: 'Отчет реализатора', region: '', point: ''});\r\n                                                                        setSelected(-1);\r\n                                                                        collapseSelectedItem('Отчет реализатораВсе')\r\n                                                                    }\r\n                                                                    collapseSelectedItem('Отчет реализатораВсе')\r\n\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {(status.role==='организатор'?pointList[profile.guidRegion]:regionList)!=undefined&&(status.role==='организатор'?pointList[profile.guidRegion]:regionList).length>0?\r\n                                                                    (status.role==='организатор'?pointList[profile.guidRegion]:regionList).map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Отчет реализатора'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={async()=>{\r\n                                                                                if(status.role==='организатор') {\r\n                                                                                    props.history.push('/');\r\n                                                                                    showDrawer(false);\r\n                                                                                    getData({search: '', sort: '', page: 0, name: 'Отчет реализатора', point: element.guid});\r\n                                                                                    setSelected(-1)\r\n                                                                                } else {\r\n                                                                                    setSelectedRegion(element.guid)\r\n                                                                                    collapse2('Отчет реализатора'+element.guid)\r\n                                                                                }\r\n                                                                                collapseSelectedItem('Отчет реализатора'+element.guid)\r\n\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                                {status.role==='организатор'?null:fourthMenuOpen['Отчет реализатора'+element.guid] ? <ExpandLess /> : <ExpandMore />}\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            {selectedRegion===element.guid?\r\n                                                                                <Collapse in={fourthMenuOpen['Отчет реализатора'+element.guid]} timeout='auto' unmountOnExit>\r\n                                                                                    <List component='div' disablePadding>\r\n                                                                                        <ListItem className={selectedItem['Отчет реализатораВсеВсе']?classes.nested2SelectedItem:classes.nested2} button key={'event'} onClick={()=>{\r\n                                                                                            props.history.push('/');\r\n                                                                                            showDrawer(false);\r\n                                                                                            getData({search: '', sort: '', page: 0, name: 'Отчет реализатора', region: element.guid, point: ''});\r\n                                                                                            setSelected(-1);\r\n                                                                                            collapseSelectedItem('Отчет реализатораВсеВсе')\r\n                                                                                        }}>\r\n                                                                                            <ListItemIcon><All /></ListItemIcon>\r\n                                                                                            <ListItemText primary={'Все'} />\r\n                                                                                        </ListItem>\r\n                                                                                        <Divider variant='inset'/>\r\n                                                                                        {pointList[selectedRegion]!=undefined&&pointList[selectedRegion].length>0?\r\n                                                                                            pointList[selectedRegion].map((element1, idx)=>{\r\n                                                                                                return(\r\n                                                                                                    <React.Fragment key={idx}>\r\n                                                                                                    <ListItem className={selectedItem['Отчет реализатора'+element1.guid]?classes.nested2SelectedItem:classes.nested2} button key={'event'} onClick={()=>{\r\n                                                                                                        props.history.push('/');\r\n                                                                                                        showDrawer(false);\r\n                                                                                                        getData({search: '', sort: '', page: 0, name: 'Отчет реализатора', region: element.guid, point: element1.guid});\r\n                                                                                                        setSelected(-1);\r\n                                                                                                        collapseSelectedItem('Отчет реализатора'+element1.guid)\r\n                                                                                                    }}>\r\n                                                                                                        <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                                        <ListItemText primary={element1.name} />\r\n                                                                                                    </ListItem>\r\n                                                                                                    <Divider variant='inset'/>\r\n                                                                                                    </React.Fragment>\r\n                                                                                                )\r\n                                                                                            }):null}\r\n                                                                                    </List>\r\n                                                                                </Collapse>\r\n                                                                                :\r\n                                                                                null\r\n                                                                            }\r\n\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('Статистика')}}>\r\n                                            <ListItemIcon><Assessment /></ListItemIcon>\r\n                                            <ListItemText primary={'Статистика'} />\r\n                                            {secondMenuOpen['Статистика'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['Статистика']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'План'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><Event /></ListItemIcon>\r\n                                                            <ListItemText primary={'План'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/statistic');showDrawer(false);setSelected(-1)}}>\r\n                                                            <ListItemIcon><Timeline /></ListItemIcon>\r\n                                                            <ListItemText primary={'Статистика'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/ro');showDrawer(false);setSelected(-1)}}>\r\n                                                            <ListItemIcon><List1 /></ListItemIcon>\r\n                                                            <ListItemText primary={'Рейтинг регионов'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'реализатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/rr');showDrawer(false);setSelected(-1)}}>\r\n                                                            <ListItemIcon><List1 /></ListItemIcon>\r\n                                                            <ListItemText primary={'Рейтинг точек'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'реализатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/geo');showDrawer(false);setSelected(-1)}}>\r\n                                                            <ListItemIcon><GpsFixed/></ListItemIcon>\r\n                                                            <ListItemText primary={'Геолокация'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('информация')}}>\r\n                                            <ListItemIcon><Info /></ListItemIcon>\r\n                                            <ListItemText primary={'Информация'} />\r\n                                            {secondMenuOpen['информация'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['информация']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                    if(status.role === 'admin') {\r\n                                                        props.history.push('/');\r\n                                                        getData({search: '', sort: '', page: 0, name: 'Блог'});\r\n                                                    } else {\r\n                                                        props.history.push('/blog');\r\n                                                    }\r\n                                                    showDrawer(false);\r\n\r\n                                                    setSelected(-1);\r\n                                                }}>\r\n                                                    <ListItemIcon><ArtTrack /></ListItemIcon>\r\n                                                    <ListItemText primary={'Новости'} />\r\n                                                </ListItem>\r\n                                                <Divider variant='inset'/>\r\n                                                <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                    if(status.role === 'admin') {\r\n                                                        props.history.push('/');\r\n                                                        getData({search: '', sort: '', page: 0, name: 'FAQ'});\r\n                                                    } else {\r\n                                                        props.history.push('/FAQ');\r\n                                                    }\r\n                                                    showDrawer(false);\r\n\r\n                                                    setSelected(-1);\r\n                                                }}>\r\n                                                    <ListItemIcon><QuestionAnswer /></ListItemIcon>\r\n                                                    <ListItemText primary={'FAQ'} />\r\n                                                </ListItem>\r\n                                                <Divider variant='inset'/>\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                        </List>\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nMyDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(MyDrawer));"],"sourceRoot":""}