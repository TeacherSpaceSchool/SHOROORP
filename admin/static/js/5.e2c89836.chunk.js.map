{"version":3,"sources":["component/Drawer.js"],"names":["MyDrawer","React","memo","props","drawer","app","status","user","showDrawer","appActions","_props$tableActions","tableActions","getData","setSelected","menuItems","role","name","element","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_6___default","button","key","onClick","history","push","setSearchItem","search","sort","page","_material_ui_core_ListItemIcon__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_icons_ListAlt__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_8___default","primary","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_10___default","variant","authenticated","_useState","useState","_useState2","Object","C_projects_shoro_shoro_admin_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","searchItem","classes","mainWindow","current","offsetWidth","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_4___default","className","open","onClose","paper","drawerPaper","toolbar","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_9___default","id","label","type","textField","margin","value","onChange","event","target","map","includes","toLowerCase","connect","state","dispatch","bindActionCreators","userActions","withStyles","theme","width","flexShrink","mixins","marginLeft","spacing","unit","marginRight"],"mappings":"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","file":"static/js/5.e2c89836.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Event from '@material-ui/icons/ListAlt';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { mainWindow } from '../App'\r\nimport * as tableActions from '../redux/actions/table'\r\nimport * as userActions from '../redux/actions/user'\r\nimport * as appActions from '../redux/actions/app'\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: 200,\r\n    },\r\n});\r\n\r\nconst MyDrawer = React.memo(\r\n    (props) =>{\r\n        const { drawer } = props.app;\r\n        const { status } = props.user;\r\n        const { showDrawer } = props.appActions;\r\n        const { getData, setSelected } = props.tableActions;\r\n        const menuItems = [\r\n            {\r\n                role: ['admin'],\r\n                'name': 'блог',\r\n                'element'\r\n                    :\r\n                    <div>\r\n                        <ListItem button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); setSearchItem(''); getData({search: '', sort: '', page: 0, name: 'Блог'}); setSelected(-1)}}>\r\n                            <ListItemIcon><Event /></ListItemIcon>\r\n                            <ListItemText primary={'Блог'} />\r\n                        </ListItem>\r\n                        <Divider variant='inset'/>\r\n                    </div>,\r\n            },\r\n            {\r\n                role: ['admin'],\r\n                'name': 'машина',\r\n                'element'\r\n                    :\r\n                    <div>\r\n                        <ListItem button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); setSearchItem(''); getData({search: '', sort: '', page: 0, name: 'Машина'}); setSelected(-1)}}>\r\n                            <ListItemIcon><Event /></ListItemIcon>\r\n                            <ListItemText primary={'Машина'} />\r\n                        </ListItem>\r\n                        <Divider variant='inset'/>\r\n                    </div>,\r\n            },\r\n            {\r\n                role: ['admin'],\r\n                'name': 'организатор',\r\n                'element'\r\n                    :\r\n                    <div>\r\n                        <ListItem button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); setSearchItem(''); getData({search: '', sort: '', page: 0, name: 'Организатор'}); setSelected(-1)}}>\r\n                            <ListItemIcon><Event /></ListItemIcon>\r\n                            <ListItemText primary={'Организатор'} />\r\n                        </ListItem>\r\n                        <Divider variant='inset'/>\r\n                    </div>,\r\n            },\r\n            {\r\n                role: ['admin', 'организатор'],\r\n                'name': 'план',\r\n                'element'\r\n                    :\r\n                    <div>\r\n                        <ListItem button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); setSearchItem(''); getData({search: '', sort: '', page: 0, name: 'План'}); setSelected(-1)}}>\r\n                            <ListItemIcon><Event /></ListItemIcon>\r\n                            <ListItemText primary={'План'} />\r\n                        </ListItem>\r\n                        <Divider variant='inset'/>\r\n                    </div>,\r\n            },\r\n            {\r\n                role: ['admin'],\r\n                'name': 'точка',\r\n                'element'\r\n                    :\r\n                    <div>\r\n                        <ListItem button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); setSearchItem(''); getData({search: '', sort: '', page: 0, name: 'Точка'}); setSelected(-1)}}>\r\n                            <ListItemIcon><Event /></ListItemIcon>\r\n                            <ListItemText primary={'Точка'} />\r\n                        </ListItem>\r\n                        <Divider variant='inset'/>\r\n                    </div>,\r\n            },\r\n            {\r\n                role: ['admin'],\r\n                'name': 'цена',\r\n                'element'\r\n                    :\r\n                    <div>\r\n                        <ListItem button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); setSearchItem(''); getData({search: '', sort: '', page: 0, name: 'Цена'}); setSelected(-1)}}>\r\n                            <ListItemIcon><Event /></ListItemIcon>\r\n                            <ListItemText primary={'Цена'} />\r\n                        </ListItem>\r\n                        <Divider variant='inset'/>\r\n                    </div>,\r\n            },\r\n            {\r\n                role: ['admin', 'организатор'],\r\n                'name': 'реализатор',\r\n                'element'\r\n                    :\r\n                    <div>\r\n                        <ListItem button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); setSearchItem(''); getData({search: '', sort: '', page: 0, name: 'Реализатор'}); setSelected(-1)}}>\r\n                            <ListItemIcon><Event /></ListItemIcon>\r\n                            <ListItemText primary={'Реализатор'} />\r\n                        </ListItem>\r\n                        <Divider variant='inset'/>\r\n                    </div>,\r\n            },\r\n            {\r\n                role: ['admin'],\r\n                'name': 'регион',\r\n                'element'\r\n                    :\r\n                    <div>\r\n                        <ListItem button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); setSearchItem(''); getData({search: '', sort: '', page: 0, name: 'Регион'}); setSelected(-1)}}>\r\n                            <ListItemIcon><Event /></ListItemIcon>\r\n                            <ListItemText primary={'Регион'} />\r\n                        </ListItem>\r\n                        <Divider variant='inset'/>\r\n                    </div>,\r\n            },\r\n            {\r\n                role: ['admin'],\r\n                'name': 'завсклада',\r\n                'element'\r\n                    :\r\n                    <div>\r\n                        <ListItem button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); setSearchItem(''); getData({search: '', sort: '', page: 0, name: 'Завсклада'}); setSelected(-1)}}>\r\n                            <ListItemIcon><Event /></ListItemIcon>\r\n                            <ListItemText primary={'Завсклада'} />\r\n                        </ListItem>\r\n                        <Divider variant='inset'/>\r\n                    </div>,\r\n            },\r\n            {\r\n                role: ['admin', 'организатор', 'завсклада'],\r\n                'name': 'накладная на пустую тару',\r\n                'element'\r\n                    :\r\n                    <div>\r\n                        <ListItem button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); setSearchItem(''); getData({search: '', sort: '', page: 0, name: 'Накладная на пустую тару'}); setSelected(-1)}}>\r\n                            <ListItemIcon><Event /></ListItemIcon>\r\n                            <ListItemText primary={'Накладная на пустую тару'} />\r\n                        </ListItem>\r\n                        <Divider variant='inset'/>\r\n                    </div>,\r\n            },\r\n            {\r\n                role: ['admin', 'организатор', 'завсклада'],\r\n                'name': 'накладная склад №1',\r\n                'element'\r\n                    :\r\n                    <div>\r\n                        <ListItem button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); setSearchItem(''); getData({search: '', sort: '', page: 0, name: 'Накладная склад №1'}); setSelected(-1)}}>\r\n                            <ListItemIcon><Event /></ListItemIcon>\r\n                            <ListItemText primary={'Накладная склад №1'} />\r\n                        </ListItem>\r\n                        <Divider variant='inset'/>\r\n                    </div>,\r\n            },\r\n            {\r\n                role: ['admin', 'организатор', 'завсклада'],\r\n                'name': 'накладная склад №2',\r\n                'element'\r\n                    :\r\n                    <div>\r\n                        <ListItem button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); setSearchItem(''); getData({search: '', sort: '', page: 0, name: 'Накладная склад №2'}); setSelected(-1)}}>\r\n                            <ListItemIcon><Event /></ListItemIcon>\r\n                            <ListItemText primary={'Накладная склад №2'} />\r\n                        </ListItem>\r\n                        <Divider variant='inset'/>\r\n                    </div>,\r\n            },\r\n            {\r\n                role: ['admin', 'организатор', 'завсклада'],\r\n                'name': 'накладная на вечерний возврат',\r\n                'element'\r\n                    :\r\n                    <div>\r\n                        <ListItem button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); setSearchItem(''); getData({search: '', sort: '', page: 0, name: 'Накладная на вечерний возврат'}); setSelected(-1)}}>\r\n                            <ListItemIcon><Event /></ListItemIcon>\r\n                            <ListItemText primary={'Накладная на вечерний возврат'} />\r\n                        </ListItem>\r\n                        <Divider variant='inset'/>\r\n                    </div>,\r\n            },\r\n            {\r\n                role: ['admin', 'организатор'],\r\n                'name': 'отчет организатора',\r\n                'element'\r\n                    :\r\n                    <div>\r\n                        <ListItem button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); setSearchItem(''); getData({search: '', sort: '', page: 0, name: 'Отчет организатора'}); setSelected(-1)}}>\r\n                            <ListItemIcon><Event /></ListItemIcon>\r\n                            <ListItemText primary={'Отчет организатора'} />\r\n                        </ListItem>\r\n                        <Divider variant='inset'/>\r\n                    </div>,\r\n            },\r\n            {\r\n                role: ['admin', 'организатор', 'реализатор'],\r\n                'name': 'отчет реализатора',\r\n                'element'\r\n                    :\r\n                    <div>\r\n                        <ListItem button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); setSearchItem(''); getData({search: '', sort: '', page: 0, name: 'Отчет реализатора'}); setSelected(-1)}}>\r\n                            <ListItemIcon><Event /></ListItemIcon>\r\n                            <ListItemText primary={'Отчет реализатора'} />\r\n                        </ListItem>\r\n                        <Divider variant='inset'/>\r\n                    </div>,\r\n            }\r\n        ]\r\n        const { authenticated } = props.user;\r\n        let [searchItem, setSearchItem] = useState('');\r\n        let handleChangeText =  (event) => {\r\n            setSearchItem(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        let variant= ''\r\n        if(mainWindow.current.offsetWidth>800)\r\n            variant= 'permanent'\r\n        return (\r\n            <div>\r\n                <Drawer\r\n                    variant= {variant}\r\n                    className={classes.drawer}\r\n                    open={drawer}\r\n                    onClose={()=>showDrawer(false)}\r\n                    classes={{paper: classes.drawerPaper,}}\r\n                >\r\n                    {\r\n                        mainWindow.current.offsetWidth>800?\r\n                            <div className={classes.toolbar}/>\r\n                        :\r\n                            null\r\n                    }\r\n                    {authenticated?\r\n                        <List>\r\n                            <ListItem button key={'search'}>\r\n                                <TextField\r\n                                    id='standard-search'\r\n                                    label='Поиск'\r\n                                    type='search'\r\n                                    className={classes.textField}\r\n                                    margin='normal'\r\n                                    value={searchItem}\r\n                                    onChange={handleChangeText}\r\n                                />\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            {\r\n                                menuItems.map((element) => {\r\n                                    if (status.status==='active'&&(element.role.includes(status.role))) {\r\n                                        if(searchItem!==''){\r\n                                            if(element.name.includes(searchItem.toLowerCase()))\r\n                                                return(\r\n                                                        element.element\r\n                                                )\r\n                                        } else\r\n                                            return(element.element)\r\n                                    }\r\n                                })\r\n                            }\r\n                        </List>\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nMyDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(MyDrawer));"],"sourceRoot":""}