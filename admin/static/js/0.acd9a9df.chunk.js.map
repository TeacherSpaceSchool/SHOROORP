{"version":3,"sources":["component/Add/Blog.js","component/Add/Car.js","component/Add/Point.js","component/Add/Region.js","component/Add/Realizator.js","component/Add/Realizators.js","component/Add/Organizator.js","component/Add/ZavSklad.js","component/Add/Price.js","component/Add/Delete.js","component/Add/Statistic.js","component/Add/FAQ.js","redux/actions/mini_dialog.js"],"names":["width","undefined","mainWindow","current","offsetWidth","Sign","React","memo","props","showMiniDialog","mini_dialogActions","_props$tableActions","tableActions","setSelected","addData","setData","_props$table","table","selected","data","page","search","sort","_useState","useState","_useState2","Object","slicedToArray","title","setTitle","_useState3","_useState4","text","setText","_useState5","_useState6","file","setFile","_useState7","_useState8","fileNames","setFileNames","handleChangeFile","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","event","i","wrap","_context","prev","next","target","files","length","name","stop","this","_x","apply","arguments","classes","react_default","createElement","TextField_default","label","type","className","textField","margin","value","onChange","multiline","rowsMax","urls","htmlFor","Button_default","variant","color","component","button","onClick","trim","id","oldFile","oldFileWhatermark","accept","style","display","withStyles","theme","spacing","unit","marginLeft","marginRight","error_message","marginTop","marginBottom","fontWeight","maxHeight","overflow","menu","connect","state","mini_dialog","dispatch","bindActionCreators","number","profile","app","setName","region","setRegion","regions","setRegions","useEffect","sent","user","status","role","replace","select","SelectProps","MenuProps","map","option","MenuItem_default","key","_data","phone","point","setStatus","setPhone","setPoint","setId","_id","setUser","points","setPoints","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","password","setPassword","_useState15","_useState16","statuses","_useState17","_useState18","_useState19","_useState20","_callee2","_context2","realizators","setRealizators","realizator","setRealizator","price","setPrice","deletedId","deleteData","deleted","JSON","stringify","setTypeStatistic","typeStatistic","setType","list","setList","setSearch","_data2","_data3","_data4","unshift","element","toLowerCase","includes","what","setMiniDialog","child","SET_MINI_DIALOG","payload","showAddMiniDialog","store","getState","Blog","Car","Realizator","Point","Region","Organizator","ZavSklad","Price","FAQ","SHOW_MINI_DIALOG","showSelectRealizators","_ref2","Realizators","_x2","showSelectStatistic","_ref3","_callee3","_context3","Statistic","_x3","showDelete","_ref4","_callee4","_context4","Delete","_x4","show"],"mappings":"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","file":"static/js/0.acd9a9df.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [title, setTitle] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleTitle =  (event) => {\r\n            setTitle(event.target.value)\r\n        };\r\n        let [text, setText] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleText =  (event) => {\r\n            setText(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = (async (event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='заголовок'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={title}\r\n                    onChange={handleTitle}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='текст'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={text}\r\n                    onChange={handleText}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Блог', file: file, data: {text: text.trim(), name: title.trim()}});\r\n                        else\r\n                            setData({id: data[selected][1], search: search, sort: sort, page: page, name: 'Блог', oldFile: data[selected][0], oldFileWhatermark: data[selected][1], file: file, data: {text: text.trim(), name: title.trim()}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [title, setTitle] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleTitle =  (event) => {\r\n            setTitle(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='номер'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={title}\r\n                    onChange={handleTitle}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Машина', data: {number: title.trim()}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'Машина', data: {number: title.trim()}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        const { profile } = props.app;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            let value = event.target.value\r\n            value = value.replace(' - ', '-')\r\n            setName(value)\r\n        };\r\n        let [region, setRegion] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleRegion =  (event) => {\r\n            setRegion(event.target.value)\r\n        };\r\n        let [regions, setRegions] = useState([]);\r\n        useEffect(async ()=>{\r\n            let data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n            setRegions(data)\r\n            if(props.user.status.role==='организатор') setRegion(profile.region)\r\n        },[])\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                {selected!==-1||props.user.status.role==='организатор'?\r\n                    <div className=\"textField\">{region}</div>\r\n                    :\r\n                    <TextField\r\n                        select\r\n                        label='регион'\r\n                        className={classes.textField}\r\n                        value={region}\r\n                        onChange={handleRegion}\r\n                        SelectProps={{\r\n                            MenuProps: {\r\n                                className: classes.menu,\r\n                            },\r\n                        }}\r\n                        margin='normal'\r\n                    >\r\n                        {regions.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        }\r\n                    </TextField>\r\n                }\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Точка',  data: {name: name.trim(), region: region}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'Точка', data: {name: name.trim(), region: region}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        user: state.user,\r\n        table: state.table,\r\n        app: state.app,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            let value = event.target.value\r\n            value = value.replace(' - ', '-')\r\n            setName(value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Регион',  data: {name: name.trim()}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'Регион', data: {name: name.trim()}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        useEffect(async ()=>{\r\n            let _data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n            setRegions(_data)\r\n            if(selected!==-1){\r\n                _data = await tableActions.getDataSimple({name: 'РеализаторПоИмени', data: {phone: data[selected][3], name: data[selected][0], point: data[selected][1], region: data[selected][2]}})\r\n                setStatus(_data.status);\r\n                setName(_data.name);\r\n                setPhone(_data.phone);\r\n                setRegion(_data.region);\r\n                setPoint(_data.point);\r\n                setId(_data._id)\r\n                setUser(_data.user)\r\n            }\r\n        },[])\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        const { profile } = props.app;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][3]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        let [points, setPoints] = useState([]);\r\n        let [point, setPoint] = useState(selected!==-1?data[selected][1]:'');\r\n        let handlePoint =  (event) => {\r\n            setPoint(event.target.value)\r\n        };\r\n        let [regions, setRegions] = useState([]);\r\n        let [region, setRegion] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleRegion =  (event) => {\r\n            setRegion(event.target.value)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        let [id, setId] = useState('');\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState('');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [user, setUser] = useState('');\r\n        const { classes } = props;\r\n        useEffect(async ()=>{\r\n            let _data = await tableActions.getDataSimple({name: 'ТочкаПоРегиону', data: {region: region}})\r\n            setPoints(_data)\r\n        },[region])\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    label='регион'\r\n                    className={classes.textField}\r\n                    value={region}\r\n                    onChange={handleRegion}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {regions.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                < br />\r\n                <TextField\r\n                    select\r\n                    label='точка'\r\n                    className={classes.textField}\r\n                    value={point}\r\n                    onChange={handlePoint}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {points.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='пароль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={password}\r\n                    onChange={handlePassword}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Реализатор', data: {name:name.trim(), phone: phone.trim(), status: status, point: point, region: region, password: password}});\r\n                        else\r\n                            setData({id: id, search: search, sort: sort, page: page, name: 'Реализатор', data: {user: user, name:name.trim(), status: status, phone: phone.trim(), point: point, region: region, password: password}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n        user: state.user,\r\n        app: state.app,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { classes } = props;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setPoint } = props.tableActions;\r\n        let [realizators, setRealizators] = useState([]);\r\n        let [realizator, setRealizator] = useState('');\r\n        let handleRealizator =  (event) => {\r\n            setRealizator(event.target.value)\r\n        };\r\n        useEffect(async ()=>{\r\n            let _data\r\n            _data = await tableActions.getDataSimple({name: 'ТочкаВсе'})\r\n            setRealizators(_data)\r\n        },[])\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    select\r\n                    label='точка'\r\n                    className={classes.textField}\r\n                    value={realizator}\r\n                    onChange={handleRealizator}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {realizators.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={async()=>{\r\n                        if(realizator!==''){\r\n                            let _data = await tableActions.getDataSimple({name: 'РеализаторПоТочке', data: {point: realizator}})\r\n                            setPoint(_data)\r\n                        }\r\n                        showMiniDialog(false)\r\n                    }} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        useEffect(async ()=>{\r\n            let _data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n            setRegions(_data)\r\n            if(selected!==-1){\r\n                _data = await tableActions.getDataSimple({name: 'ОрганизаторПоИмени', data: {phone: data[selected][2]}})\r\n                setStatus(_data.status);\r\n                setName(_data.name);\r\n                setPhone(_data.phone);\r\n                setRegion(_data.region);\r\n                setId(_data._id)\r\n                setUser(_data.user)\r\n            }\r\n        },[])\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][2]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        let [regions, setRegions] = useState([]);\r\n        let [region, setRegion] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleRegion =  (event) => {\r\n            setRegion(event.target.value)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        let [id, setId] = useState('');\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState('');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [user, setUser] = useState('');\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    label='регион'\r\n                    className={classes.textField}\r\n                    value={region}\r\n                    onChange={handleRegion}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {regions.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='пароль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={password}\r\n                    onChange={handlePassword}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Организатор', data: {name:name.trim(), phone: phone.trim(), status: status, region: region, password: password}});\r\n                        else\r\n                            setData({id: id, search: search, sort: sort, page: page, name: 'Организатор', data: {user: user, name:name.trim(), status: status, phone: phone.trim(), region: region, password: password}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        useEffect(async ()=>{\r\n            if(selected!==-1){\r\n                let _data = await tableActions.getDataSimple({name: 'ЗавскладаПоИмени', data: {phone: data[selected][1]}})\r\n                setStatus(_data.status);\r\n                setName(_data.name);\r\n                setPhone(_data.phone);\r\n                setId(_data._id)\r\n                setUser(_data.user)\r\n            }\r\n        },[])\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState(selected!==-1?data[selected][1]:'');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        let [id, setId] = useState('');\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState('');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [user, setUser] = useState('');\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='пароль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={password}\r\n                    onChange={handlePassword}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Завсклада', data: {name:name.trim(), phone: phone.trim(), status: status, password: password}});\r\n                        else\r\n                            setData({id: id, search: search, sort: sort, page: page, name: 'Завсклада', data: {user: user, name:name.trim(), status: status, phone: phone.trim(), password: password}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let names = ['Максым', 'Чалап', 'Квас', 'Стакан Легенда']\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [price, setPrice] = useState(selected!==-1?data[selected][1]:'');\r\n        let handlePrice =  (event) => {\r\n            setPrice(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    select\r\n                    label='название'\r\n                    className={classes.textField}\r\n                    value={name}\r\n                    onChange={handleName}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {names.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='цена'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={price}\r\n                    onChange={handlePrice}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'Цена',  data: {name: name, price: price.trim()}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'Цена', data: {name: name, price: price.trim()}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { classes } = props;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { page, name, search, sort, deletedId, oldFile } = props.table;\r\n        const { deleteData } = props.tableActions;\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={async()=>{\r\n                        deleteData({oldFile: oldFile, search: search, sort: sort, page: page, name: name, deleted: deletedId})\r\n                        showMiniDialog(false)\r\n                    }} className={classes.button}>\r\n                        Удалить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{\r\n                        deleteData({oldFile: [], search: search, sort: sort, page: page, name: name, deleted: JSON.stringify([])})\r\n                        showMiniDialog(false)\r\n                    }} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    list: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: '400px',\r\n        overflow: 'scroll'\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { classes } = props;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setTypeStatistic } = props.tableActions;\r\n        const { typeStatistic } = props.table;\r\n        let types = ['регион', 'точка', 'организатор', 'реализатор'];\r\n        let [type, setType] = useState(typeStatistic.type);\r\n        let [list, setList] = useState([]);\r\n        let handleType =  (event) => {\r\n            setType(event.target.value)\r\n        };\r\n        let [search, setSearch] = useState('');\r\n        let handleSearch =  (event) => {\r\n            setSearch(event.target.value)\r\n        };\r\n        useEffect(async ()=>{\r\n            let data = [];\r\n            if(type==='регион'){\r\n                let _data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n                if (_data!==undefined) {\r\n                    data = _data\r\n                    data.unshift('все')\r\n                }\r\n            }\r\n            else if(type==='точка'){\r\n                let _data = await tableActions.getDataSimple({name: 'ТочкаИмя'})\r\n                if (_data!==undefined) {\r\n                    data = _data\r\n                    data.unshift('все')\r\n                }\r\n            }\r\n            else if(type==='организатор'){\r\n                let _data = await tableActions.getDataSimple({name: 'ОрганизаторИмя'})\r\n                if (_data!==undefined) {\r\n                    data = _data\r\n                    data.unshift('все')\r\n                }\r\n            }\r\n            else if(type==='реализатор'){\r\n                let _data = await tableActions.getDataSimple({name: 'РеализаторИмя'})\r\n                if (_data!==undefined) {\r\n                    data = _data\r\n                    data.unshift('все')\r\n                }\r\n            }\r\n            setList(data)\r\n        },[type])\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    select\r\n                    label='Тип'\r\n                    className={classes.textField}\r\n                    value={type}\r\n                    onChange={handleType}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {types.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='Поиск'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={search}\r\n                    onChange={handleSearch}\r\n                />\r\n                <br/>\r\n                <div className={classes.list} >\r\n                    {list!=undefined&&list.length>0?\r\n                        list.map((element)=> {\r\n                            if(element.toLowerCase().includes(search.toLowerCase()))\r\n                                return (\r\n                                    <Button variant=\"outlined\" onClick={()=>{setTypeStatistic({type: type, what: element}); showMiniDialog(false)}} className={classes.button}>\r\n                                        {element}\r\n                                    </Button>\r\n                                )\r\n                        }):null\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow===undefined||mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data, page, search, sort } = props.table;\r\n        let [title, setTitle] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleTitle =  (event) => {\r\n            setTitle(event.target.value)\r\n        };\r\n        let [text, setText] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleText =  (event) => {\r\n            setText(event.target.value)\r\n        };\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='заголовок'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={title}\r\n                    onChange={handleTitle}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='текст'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={text}\r\n                    onChange={handleText}\r\n                />\r\n                <br/>\r\n                 <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: search, sort: sort, page: page, name: 'FAQ', data: {text: text.trim(), name: title.trim()}});\r\n                        else\r\n                            setData({id: data[selected][0], search: search, sort: sort, page: page, name: 'FAQ', data: {text: text.trim(), name: title.trim()}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import { SET_MINI_DIALOG, SHOW_MINI_DIALOG } from '../constants/mini_dialog'\r\nimport React from 'react'\r\nimport {\r\n    store\r\n} from '../../index'\r\nimport Blog from '../../component/Add/Blog';\r\nimport Car from '../../component/Add/Car';\r\nimport Point from '../../component/Add/Point';\r\nimport Region from '../../component/Add/Region';\r\nimport Realizator from '../../component/Add/Realizator';\r\nimport Realizators from '../../component/Add/Realizators';\r\nimport Organizator from '../../component/Add/Organizator';\r\nimport ZavSklad from '../../component/Add/ZavSklad';\r\nimport Price from '../../component/Add/Price';\r\nimport Delete from '../../component/Add/Delete';\r\nimport Statistic from '../../component/Add/Statistic';\r\nimport FAQ from '../../component/Add/FAQ';\r\n\r\nexport function setMiniDialog(title,child) {\r\n    return {\r\n        type: SET_MINI_DIALOG,\r\n        payload: {title: title, child: child}\r\n    }\r\n}\r\n\r\nexport function showAddMiniDialog() {\r\n    return async (dispatch) => {\r\n        if(store.getState().table.name!=''){\r\n            let child;\r\n            if(store.getState().table.name=='Блог')\r\n                child = <Blog/>\r\n            else if(store.getState().table.name=='Машина')\r\n                child = <Car/>\r\n            else if(store.getState().table.name=='Реализатор')\r\n                child = <Realizator/>\r\n            else if(store.getState().table.name=='Точка')\r\n                child = <Point/>\r\n            else if(store.getState().table.name=='Регион')\r\n                child = <Region/>\r\n            else if(store.getState().table.name=='Организатор')\r\n                child = <Organizator/>\r\n            else if(store.getState().table.name=='Завсклада')\r\n                child = <ZavSklad/>\r\n            else if(store.getState().table.name=='Цена')\r\n                child = <Price/>\r\n            else if(store.getState().table.name=='FAQ')\r\n                child = <FAQ/>\r\n            dispatch ({\r\n                type: SET_MINI_DIALOG,\r\n                payload: {title: store.getState().table.name, child: child}\r\n            })\r\n            dispatch ({\r\n                type: SHOW_MINI_DIALOG,\r\n                payload: true\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function showSelectRealizators() {\r\n    return async (dispatch) => {\r\n        let child = <Realizators/>\r\n        dispatch ({\r\n            type: SET_MINI_DIALOG,\r\n            payload: {title: 'Реализатор', child: child}\r\n        })\r\n        dispatch ({\r\n            type: SHOW_MINI_DIALOG,\r\n            payload: true\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function showSelectStatistic() {\r\n    return async (dispatch) => {\r\n        let child = <Statistic/>\r\n        dispatch ({\r\n            type: SET_MINI_DIALOG,\r\n            payload: {title: 'Статистика', child: child}\r\n        })\r\n        dispatch ({\r\n            type: SHOW_MINI_DIALOG,\r\n            payload: true\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function showDelete() {\r\n    return async (dispatch) => {\r\n        let child = <Delete/>\r\n        dispatch ({\r\n            type: SET_MINI_DIALOG,\r\n            payload: {title: 'Удалить?', child: child}\r\n        })\r\n        dispatch ({\r\n            type: SHOW_MINI_DIALOG,\r\n            payload: true\r\n        })\r\n    }\r\n}\r\n\r\nexport function showMiniDialog(show) {\r\n    return {\r\n        type: SHOW_MINI_DIALOG,\r\n        payload: show\r\n    }\r\n}\r\n"],"sourceRoot":""}