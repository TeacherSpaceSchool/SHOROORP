{"version":3,"sources":["pages/Cashbox.js"],"names":["width","mainWindow","current","offsetWidth","withStyles","theme","button","margin","spacing","unit","textFieldSmall","marginLeft","marginRight","textField","urls","maxHeight","overflow","image","maxWidth","message","marginTop","marginBottom","connect","state","table","user","dispatch","tableActions","bindActionCreators","props","_props$tableActions","setSelected","addData","status","_useState","useState","_useState2","Object","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","whereComponent","setWhereComponent","classes","useEffect","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_projects_biletiki_biletiki_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","includes","role","history","push","t0","setCities","getDataSimple","name","t1","sent","stop","this","_useState3","_useState4","cities","_useState5","_useState6","city","setCity","_useState7","_useState8","events","setEvents","_useState9","descriptionRu","where","date","_useState10","_event","_setEvent","handleCity","_ref2","_callee2","event","_context2","target","value","data","handleEvent","_x","apply","arguments","_useState11","_useState12","seats","setSeats","addSeats","seat","_seats","index","find","element","position","JSON","stringify","splice","_ref3","_callee3","_context3","Array","isArray","undefined","split","setDate","getWhere","price","_x2","_useState13","_useState14","handleDate","_ref4","_callee4","_context4","_x3","_callee5","_context5","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_9___default","select","SelectProps","MenuProps","className","menu","label","type","onChange","map","option","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_10___default","key","_id","nameRu","Fragment","src","imageThumbnail","onLoad","e","genre","ageCategory","length","react_router_dom__WEBPACK_IMPORTED_MODULE_12__","to","onClick","_event_","without","i","keys","i1","i2","i3","search","sort","page","id","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_11___default","variant","color"],"mappings":"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","file":"static/js/12.6ab14d2f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { getDataSimple } from '../redux/actions/table'\nimport { getWhere } from '../component/Where/index'\nimport * as tableActions from '../redux/actions/table'\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom'\nimport { mainWindow } from '../App'\nconst width = mainWindow.current.offsetWidth>800? 500: 240;\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    textFieldSmall: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: width,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: width\n    },\n    urls: {\n        margin: theme.spacing.unit,\n        width: width,\n        maxHeight: 100,\n        overflow: 'auto'\n    },\n    image: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        maxWidth: 500,\n        maxHeight: 500\n    },\n    message: {\n        width: width,\n        marginTop: theme.spacing.unit,\n        marginBottom: theme.spacing.unit,\n        marginLeft: 'calc((100% - '+width+'px)/2)',\n        marginRight: 'calc((100% - '+width+'px)/2)'\n    },\n});\n\nconst Cashbox = (\n    (props) =>{\n        const { setSelected, addData } = props.tableActions;\n        const { status } = props.user;\n        let [whereComponent, setWhereComponent] = useState(null);\n        const { classes } = props;\n        useEffect(async()=>{\n            if (!(status.status==='active'&&['admin', 'manager', 'cashier'].includes(status.role))) {\n                props.history.push('/')\n            }\n            await setCities(await getDataSimple({name: 'Города'}));\n        },[])\n        let [cities, setCities] = useState([]);\n        let [city, setCity] = useState('');\n        let [events, setEvents] = useState([]);\n        let [_event, _setEvent] = useState({descriptionRu: '', where: {}, date: []});\n        let handleCity = async(event) => {\n            setCity(event.target.value)\n            setEvents(await getDataSimple({name: 'СобытиеГород', data: {city: event.target.value}}));\n            handleEvent({target: {value: {descriptionRu: '', where: {}, date: []}}})\n        };\n        let [seats, setSeats] = useState([]);\n        let addSeats = (seat,) => {\n            let _seats = seats;\n            let index = -1;\n            _seats.find((element, position)=>{\n                if(JSON.stringify(element)===JSON.stringify(seat))\n                    index = position\n            });\n            if (index===-1)\n                _seats.push(seat);\n            else\n                _seats.splice(index, 1);\n            setSeats(_seats)\n        }\n        let handleEvent = async(event) => {\n            // se tS ea ts ([ ])\n            let _event = event.target.value;\n            if(!Array.isArray(_event.descriptionRu)&&_event.descriptionRu!==undefined)\n                _event.descriptionRu = _event.descriptionRu.split('|');\n            await _setEvent(_event)\n            await setDate(_event.date[0])\n            await setWhereComponent(undefined);\n            await setWhereComponent(await getWhere(_event.where.name, _event.where.data, handleEvent, _event.price, _event.date[0], true, addSeats, event.target.value));\n        };\n        let [date, setDate] = useState('');\n        let handleDate = async (event) => {\n            setDate(event.target.value);\n            await setWhereComponent(await getWhere(_event.where.name, _event.where.data, handleEvent, _event.price, event.target.value, true, addSeats, _event));\n        };\n        useEffect(async()=>{\n            setSeats([])\n        },[_event.descriptionRu]);\n        return (\n            <div>\n                <TextField\n                    select\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu,\n                        },\n                    }}\n                    label='город'\n                    type='login'\n                    className={classes.textField}\n                    margin='normal'\n                    value={city}\n                    onChange={handleCity}\n                >\n                    {cities != undefined?\n                        cities.map(option => (\n                            <MenuItem key={option} value={option}>\n                                {option}\n                                </MenuItem>\n                        ))\n                        :\n                        null\n                    }\n                </TextField>\n                <br/>\n                <TextField\n                    select\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu,\n                        },\n                    }}\n                    label='событие'\n                    type='login'\n                    className={classes.textField}\n                    margin='normal'\n                    value={_event}\n                    onChange={handleEvent}\n                >\n                    {events != undefined?\n                        events.map(option => {\n                            return (<MenuItem key={option._id} value={option}>\n                                {option.nameRu}\n                            </MenuItem>)\n                        })\n                        :\n                        null\n                    }\n                </TextField>\n                <br/>\n                {_event.nameRu!==undefined?\n                    <>\n                    <br/>\n                    <img className={classes.image} src={_event.imageThumbnail} onLoad={(e)=>{if(e.target.src.includes('thumbnail')){e.target.src=_event.image}}}/>\n                    <br/>\n                    <br/>\n                    <div><b>Жанр: </b>{_event.genre}</div><br/>\n                    <div><b>Возраст: </b>{_event.ageCategory}</div>\n                    <br/>\n                    <b>Описание</b>\n                    <br/>\n                    <div className={classes.message}>\n                        {(_event.descriptionRu).map((element) => {\n                            return <>{element}</>\n                        })}\n                    </div>\n                    <br/>\n                    <b>Где</b>\n                    <br/>\n                    {_event.where.name}\n                    <br/>\n                    <br/>\n                    {_event.date.length>0?\n                        <TextField\n                            select\n                            SelectProps={{\n                                MenuProps: {\n                                    className: classes.menu,\n                                },\n                            }}\n                            label='дата'\n                            type='login'\n                            className={classes.textField}\n                            margin='normal'\n                            value={date}\n                            onChange={handleDate}\n                        >\n                            {\n                                _event.date.map(option => (\n                                    <MenuItem key={option} value={option}>\n                                        {option}\n                                    </MenuItem>\n                                ))\n                            }\n                        </TextField>\n                        :\n                        null\n                    }\n                    <br/>\n                    {whereComponent!==undefined?whereComponent:null}\n                    {seats.length>0?\n                        seats.map(option => {\n                            return(\n                            <>\n                            <b>Место:</b>&nbsp;{option[0].name}&nbsp;<b>Общая цена:</b>&nbsp;{option[0].price}&nbsp;сом&nbsp;<b>Дата:</b>&nbsp;{option[1]}\n                            <br/>\n                            </>)\n                        }):null}\n                    <br/>\n                    <br/>\n                    <div>\n                        <Link className='link' to={''} onClick={()=>{\n                            if(seats.length>0) {\n                                let _event_ = _event;\n                                if (!_event_.where.data[_event_.date[0]].without) {\n                                    for (let i = 0; i < _event_.date.length; i++) {\n                                        let keys = Object.keys(_event_.where.data[_event_.date[i]]);\n                                        for (let i1 = 0; i1 < keys.length; i1++) {\n                                            for (let i2 = 0; i2 < _event_.where.data[_event_.date[i]][keys[i1]].length; i2++) {\n                                                for (let i3 = 0; i3 < _event_.where.data[_event_.date[i]][keys[i1]][i2].length; i3++) {\n                                                    if (_event_.where.data[_event_.date[i]][keys[i1]][i2][i3].status === 'hold')\n                                                        _event_.where.data[_event_.date[i]][keys[i1]][i2][i3].status = 'sold'\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                addData({\n                                    search: '',\n                                    sort: '',\n                                    page: 0,\n                                    name: 'Билеты',\n                                    data: {user: status.id, event: _event_, status: 'продан', seats: seats}\n                                });\n                                setSelected(-1)\n                            }\n                            }}>\n                            <Button variant='contained' color='primary' className={classes.button}>\n                                Купить\n                            </Button>\n                        </Link>\n                        <Link className='link' to={''} onClick={()=>{setSelected(-1);}}>\n                            <Button variant='contained' color='secondary' className={classes.button}>\n                                Отмена\n                            </Button>\n                        </Link>\n                    </div>\n                    </>\n                    :\n                    null\n                }\n                <br/>\n            </div>\n        );\n  })\n\nfunction mapStateToProps (state) {\n    return {\n        table: state.table,\n        user: state.user,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        tableActions: bindActionCreators(tableActions, dispatch),\n    }\n}\n\nCashbox.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Cashbox));\n"],"sourceRoot":""}