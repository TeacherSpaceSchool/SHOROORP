{"version":3,"sources":["component/Drawer.js"],"names":["MyDrawer","React","memo","props","_props$app","app","drawer","profile","status","user","showDrawer","appActions","_props$tableActions","tableActions","getData","setSelected","classes","_useState","useState","_useState2","Object","C_projects_shoro_shoro_admin_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","secondMenuOpen","setSecondMenuOpen","_useState3","_useState4","regionList","setRegionList","_useState5","_useState6","pointList","setPointList","_useState7","_useState8","selectedRegion","setSelectedRegion","useEffect","C_projects_shoro_shoro_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_projects_shoro_shoro_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","t0","name","t1","sent","t2","t3","stop","this","collapse","open","keys","thirdMenuOpen","i","length","setThirdMenuOpen","fourthMenuOpen","setFourthMenuOpen","_useState9","_useState10","collapse1","_useState11","_useState12","collapse2","_useState13","_useState14","selectedItem","setSelectedItem","collapseSelectedItem","authenticated","variant","mainWindow","current","offsetWidth","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_6___default","className","onClose","paper","drawerPaper","toolbar","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_7___default","includes","role","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_8___default","button","key","onClick","history","push","search","sort","page","_material_ui_core_ListItemIcon__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_icons_Face__WEBPACK_IMPORTED_MODULE_21___default","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_10___default","primary","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_icons_Storage__WEBPACK_IMPORTED_MODULE_25___default","_material_ui_icons_UnfoldLess__WEBPACK_IMPORTED_MODULE_19___default","_material_ui_icons_UnfoldMore__WEBPACK_IMPORTED_MODULE_20___default","_material_ui_core_Collapse__WEBPACK_IMPORTED_MODULE_18___default","in","timeout","unmountOnExit","component","disablePadding","Fragment","nested","_material_ui_icons_LocationCity__WEBPACK_IMPORTED_MODULE_35___default","_material_ui_icons_LocationOn__WEBPACK_IMPORTED_MODULE_33___default","undefined","map","element","nested1SelectedItem","nested1","region","_material_ui_icons_AssignmentInd__WEBPACK_IMPORTED_MODULE_30___default","_material_ui_icons_Commute__WEBPACK_IMPORTED_MODULE_31___default","_material_ui_icons_AccountBalanceWallet__WEBPACK_IMPORTED_MODULE_32___default","_material_ui_icons_Assignment__WEBPACK_IMPORTED_MODULE_26___default","_material_ui_icons_Receipt__WEBPACK_IMPORTED_MODULE_34___default","_callee2","_context2","_material_ui_icons_Archive__WEBPACK_IMPORTED_MODULE_36___default","_callee3","_context3","point","element1","nested2SelectedItem","nested2","_material_ui_icons_Assessment__WEBPACK_IMPORTED_MODULE_28___default","_material_ui_icons_ListAlt__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_icons_Timeline__WEBPACK_IMPORTED_MODULE_27___default","_material_ui_icons_List__WEBPACK_IMPORTED_MODULE_29___default","_material_ui_icons_Info__WEBPACK_IMPORTED_MODULE_22___default","_material_ui_icons_Web__WEBPACK_IMPORTED_MODULE_23___default","_material_ui_icons_QuestionAnswer__WEBPACK_IMPORTED_MODULE_24___default","connect","state","dispatch","bindActionCreators","userActions","withStyles","theme","width","flexShrink","mixins","textField","marginLeft","spacing","unit","marginRight","paddingLeft","background"],"mappings":"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","file":"static/js/6.637283ce.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Event from '@material-ui/icons/ListAlt';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { mainWindow } from '../App'\r\nimport * as tableActions from '../redux/actions/table'\r\nimport * as userActions from '../redux/actions/user'\r\nimport * as appActions from '../redux/actions/app'\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/UnfoldLess';\r\nimport ExpandMore from '@material-ui/icons/UnfoldMore';\r\nimport Face from '@material-ui/icons/Face';\r\nimport Info from '@material-ui/icons/Info';\r\nimport ArtTrack from '@material-ui/icons/Web';\r\nimport QuestionAnswer from '@material-ui/icons/QuestionAnswer';\r\nimport Storage from '@material-ui/icons/Storage';\r\nimport Assignment from '@material-ui/icons/Assignment';\r\nimport Timeline from '@material-ui/icons/Timeline';\r\nimport Assessment from '@material-ui/icons/Assessment';\r\nimport List1 from '@material-ui/icons/List';\r\nimport AssignmentInd from '@material-ui/icons/AssignmentInd';\r\nimport Commute from '@material-ui/icons/Commute';\r\nimport AccountBalance from '@material-ui/icons/AccountBalanceWallet';\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport Receipt from '@material-ui/icons/Receipt';\r\nimport LocationCity from '@material-ui/icons/LocationCity';\r\nimport Archive from '@material-ui/icons/Archive';\r\n\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst styles = theme => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: 200,\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing.unit * 4,\r\n    },\r\n    nested1: {\r\n        paddingLeft: theme.spacing.unit * 6,\r\n    },\r\n    nested1SelectedItem: {\r\n        paddingLeft: theme.spacing.unit * 6,\r\n        background: '#C1C1C1',\r\n    },\r\n    nested2: {\r\n        paddingLeft: theme.spacing.unit * 8\r\n    },\r\n    nested2SelectedItem: {\r\n        paddingLeft: theme.spacing.unit * 8,\r\n        background: '#C1C1C1',\r\n    },\r\n\r\n\r\n});\r\n\r\nconst MyDrawer = React.memo(\r\n    (props) =>{\r\n        const { drawer, profile } = props.app;\r\n        const { status } = props.user;\r\n        const { showDrawer } = props.appActions;\r\n        const { getData, setSelected } = props.tableActions;\r\n        const { classes } = props;\r\n        let [secondMenuOpen, setSecondMenuOpen] = useState({});\r\n        let [regionList, setRegionList] = useState([]);\r\n        let [pointList, setPointList] = useState([]);\r\n        let [selectedRegion, setSelectedRegion] = useState('');\r\n        useEffect(async ()=>{\r\n            setRegionList(await tableActions.getDataSimple({name: 'РегионИмя'}))\r\n            setPointList(await tableActions.getDataSimple({name: 'ТочкаСРегионом'}))\r\n        },[])\r\n\r\n        let collapse = (name)=>{\r\n            let open = !secondMenuOpen[name]\r\n            let keys = Object.keys(thirdMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                thirdMenuOpen[keys[i]] = false\r\n            }\r\n            setThirdMenuOpen(thirdMenuOpen)\r\n            keys = Object.keys(fourthMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                fourthMenuOpen[keys[i]] = false\r\n            }\r\n            setFourthMenuOpen(fourthMenuOpen)\r\n            keys = Object.keys(secondMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                secondMenuOpen[keys[i]] = false\r\n            }\r\n            secondMenuOpen[name] = open\r\n            setSecondMenuOpen(secondMenuOpen)\r\n\r\n        }\r\n        let [thirdMenuOpen, setThirdMenuOpen] = useState({});\r\n        let collapse1 = (name)=>{\r\n            let open = !thirdMenuOpen[name]\r\n            let keys = Object.keys(thirdMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                thirdMenuOpen[keys[i]] = false\r\n            }\r\n            thirdMenuOpen[name] = open\r\n            setThirdMenuOpen(thirdMenuOpen)\r\n            keys = Object.keys(fourthMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                fourthMenuOpen[keys[i]] = false\r\n            }\r\n            setFourthMenuOpen(fourthMenuOpen)\r\n\r\n        }\r\n        let [fourthMenuOpen, setFourthMenuOpen] = useState({});\r\n        let collapse2 = (name)=>{\r\n            let open = !fourthMenuOpen[name]\r\n            let keys = Object.keys(fourthMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                fourthMenuOpen[keys[i]] = false\r\n            }\r\n            fourthMenuOpen[name] = open\r\n            setFourthMenuOpen(fourthMenuOpen)\r\n\r\n        }\r\n        let [selectedItem, setSelectedItem] = useState({});\r\n        let collapseSelectedItem = (name)=>{\r\n            let open = !selectedItem[name]\r\n            let keys = Object.keys(selectedItem)\r\n            for(let i = 0; i<keys.length; i++){\r\n                selectedItem[keys[i]] = false\r\n            }\r\n            selectedItem[name] = open\r\n            setSelectedItem(selectedItem)\r\n\r\n        }\r\n        const { authenticated } = props.user;\r\n        let variant= ''\r\n        if(mainWindow.current.offsetWidth>800)\r\n            variant= 'permanent'\r\n        return (\r\n            <div>\r\n                <Drawer\r\n                    variant= {variant}\r\n                    className={classes.drawer}\r\n                    open={drawer}\r\n                    onClose={()=>showDrawer(false)}\r\n                    classes={{paper: classes.drawerPaper,}}\r\n                >\r\n                    {\r\n                        mainWindow.current.offsetWidth>800?\r\n                            <div className={classes.toolbar}/>\r\n                        :\r\n                            null\r\n                    }\r\n                    {authenticated?\r\n                        <List>\r\n                            {\r\n                                status.status==='active'&&['реализатор', 'организатор'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: ''}); setSelected(-1)}}>\r\n                                            <ListItemIcon>\r\n                                                <Face />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={'Профиль'} />\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'организатор'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('Данные')}}>\r\n                                            <ListItemIcon><Storage /></ListItemIcon>\r\n                                            <ListItemText primary={'Данные'} />\r\n                                            {secondMenuOpen['Данные'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['Данные']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Регион'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><LocationCity /></ListItemIcon>\r\n                                                            <ListItemText primary={'Регион'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Точка'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('данныеТочка')}}>\r\n                                                            <ListItemIcon><LocationOn /></ListItemIcon>\r\n                                                            <ListItemText primary={'Точка'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['данныеТочка'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['данныеТочка']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element)=>{\r\n                                                                    return(\r\n                                                                        <>\r\n                                                                        <ListItem className={selectedItem['Точка'+element]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                            props.history.push('/');\r\n                                                                            showDrawer(false);\r\n                                                                            getData({search: '', sort: '', page: 0, name: 'Точка', region: element});\r\n                                                                            setSelected(-1);\r\n                                                                            collapseSelectedItem('Точка'+element)\r\n                                                                        }}>\r\n                                                                            <ListItemIcon><LocationOn /></ListItemIcon>\r\n                                                                            <ListItemText primary={element} />\r\n                                                                        </ListItem>\r\n                                                                        <Divider variant='inset'/>\r\n                                                                        </>\r\n                                                                    )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Организатор'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><AssignmentInd /></ListItemIcon>\r\n                                                            <ListItemText primary={'Организатор'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Реализатор'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('данныеРеализатор')\r\n\r\n                                                        }}>\r\n                                                            <ListItemIcon><AssignmentInd /></ListItemIcon>\r\n                                                            <ListItemText primary={'Реализатор'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['данныеРеализатор'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['данныеРеализатор']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element)=>{\r\n                                                                        return(\r\n                                                                            <>\r\n                                                                            <ListItem className={selectedItem['Реализатор'+element]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Реализатор', region: element});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Реализатор'+element)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><AssignmentInd /></ListItemIcon>\r\n                                                                                <ListItemText primary={element} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Завсклада'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><AssignmentInd /></ListItemIcon>\r\n                                                            <ListItemText primary={'Завсклада'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Машина'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><Commute /></ListItemIcon>\r\n                                                            <ListItemText primary={'Машина'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Цена'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><AccountBalance /></ListItemIcon>\r\n                                                            <ListItemText primary={'Цена'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('Накладные')}}>\r\n                                            <ListItemIcon><Assignment /></ListItemIcon>\r\n                                            <ListItemText primary={'Накладные'} />\r\n                                            {secondMenuOpen['Накладные'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['Накладные']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/nnvv')\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на вечерний возврат сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная на вечерний возврат сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/nnpt')\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на пустую тару сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная на пустую тару сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/ns1')\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №1 сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная склад №1 сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/ns2')\r\n\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №2 сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная склад №2 сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/oo')\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Отчет организатора сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Отчет организатора сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='реализатор') {\r\n                                                                props.history.push('/or')\r\n\r\n                                                            } else if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Отчет реализатора сегодня', region: profile.region});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Отчет реализатора сегодня')\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Отчет реализатора сегодня'} />\r\n                                                            {status.role==='реализатор'||status.role==='организатор'?null:thirdMenuOpen['Отчет реализатора сегодня'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Отчет реализатора сегодня']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    (regionList).map((element)=>{\r\n                                                                        return(\r\n                                                                            <>\r\n                                                                            <ListItem className={selectedItem['Отчет реализатора сегодня'+element]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={async()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Отчет реализатора сегодня', region: element});\r\n                                                                                setSelected(-1)\r\n                                                                                collapseSelectedItem('Отчет реализатора сегодня'+element)\r\n\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                                                <ListItemText primary={element} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n\r\n\r\n                                                                            </>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('Архив')}}>\r\n                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                            <ListItemText primary={'Архив'} />\r\n                                            {secondMenuOpen['Архив'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['Архив']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на вечерний возврат'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Накладная на вечерний возврат')\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная на вечерний возврат'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Накладная на вечерний возврат'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Накладная на вечерний возврат']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element)=>{\r\n                                                                        return(\r\n                                                                            <>\r\n                                                                            <ListItem className={selectedItem['Накладная на вечерний возврат'+element]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на вечерний возврат', region: element});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Накладная на вечерний возврат'+element)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на пустую тару'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Накладная на пустую тару')\r\n\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная на пустую тару'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Накладная на пустую тару'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Накладная на пустую тару']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element)=>{\r\n                                                                        return(\r\n                                                                            <>\r\n                                                                            <ListItem className={selectedItem['Накладная на пустую тару'+element]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на пустую тару', region: element});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Накладная на пустую тару'+element)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №1'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Накладная склад №1')\r\n\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная склад №1'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Накладная склад №1'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Накладная склад №1']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element)=>{\r\n                                                                        return(\r\n                                                                            <>\r\n                                                                            <ListItem className={selectedItem['Накладная склад №1'+element]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №1', region: element});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Накладная склад №1'+element)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №2'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Накладная склад №2')\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная склад №2'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Накладная склад №2'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Накладная склад №2']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element)=>{\r\n                                                                        return(\r\n                                                                            <>\r\n                                                                            <ListItem className={selectedItem['Накладная склад №2'+element]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №2', region: element});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Накладная склад №2'+element)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Отчет организатора'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Отчет организатора')\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Отчет организатора'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Отчет организатора'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Отчет организатора']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element)=>{\r\n                                                                        return(\r\n                                                                            <>\r\n                                                                            <ListItem className={selectedItem['Отчет организатора'+element]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Отчет организатора', region: element});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Отчет организатора'+element)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='реализатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Отчет реализатора'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Отчет реализатора')\r\n                                                          }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Отчет реализатора'} />\r\n                                                            {status.role==='реализатор'?null:thirdMenuOpen['Отчет реализатора'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Отчет реализатора']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                {(status.role==='организатор'?pointList[profile.region]:regionList)!=undefined&&(status.role==='организатор'?pointList[profile.region]:regionList).length>0?\r\n                                                                    (status.role==='организатор'?pointList[profile.region]:regionList).map((element)=>{\r\n                                                                        return(\r\n                                                                            <>\r\n                                                                            <ListItem className={selectedItem['Отчет реализатора'+element]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={async()=>{\r\n                                                                                if(status.role==='организатор') {\r\n                                                                                    props.history.push('/');\r\n                                                                                    showDrawer(false);\r\n                                                                                    getData({search: '', sort: '', page: 0, name: 'Отчет реализатора', point: element});\r\n                                                                                    setSelected(-1)\r\n                                                                                } else {\r\n                                                                                    setSelectedRegion(element)\r\n                                                                                    collapse2('Отчет реализатора'+element)\r\n                                                                                }\r\n                                                                                collapseSelectedItem('Отчет реализатора'+element)\r\n\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element} />\r\n                                                                                {status.role==='организатор'?null:fourthMenuOpen['Отчет реализатора'+element] ? <ExpandLess /> : <ExpandMore />}\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n\r\n                                                                            {selectedRegion===element?\r\n                                                                                <Collapse in={fourthMenuOpen['Отчет реализатора'+element]} timeout='auto' unmountOnExit>\r\n                                                                                    <List component='div' disablePadding>\r\n                                                                                        {pointList[selectedRegion]!=undefined&&pointList[selectedRegion].length>0?\r\n                                                                                            pointList[selectedRegion].map((element1)=>{\r\n                                                                                                return(\r\n                                                                                                    <>\r\n                                                                                                    <ListItem className={selectedItem['Отчет реализатора'+element1]?classes.nested2SelectedItem:classes.nested2} button key={'event'} onClick={()=>{\r\n                                                                                                        props.history.push('/');\r\n                                                                                                        showDrawer(false);\r\n                                                                                                        getData({search: '', sort: '', page: 0, name: 'Отчет реализатора', region: element, point: element1});\r\n                                                                                                        setSelected(-1);\r\n                                                                                                        collapseSelectedItem('Отчет реализатора'+element1)\r\n                                                                                                    }}>\r\n                                                                                                        <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                                        <ListItemText primary={element1} />\r\n                                                                                                    </ListItem>\r\n                                                                                                    <Divider variant='inset'/>\r\n                                                                                                    </>\r\n                                                                                                )\r\n                                                                                            }):null}\r\n                                                                                    </List>\r\n                                                                                </Collapse>\r\n                                                                                :\r\n                                                                                null\r\n                                                                            }\r\n\r\n                                                                            </>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('Статистика')}}>\r\n                                            <ListItemIcon><Assessment /></ListItemIcon>\r\n                                            <ListItemText primary={'Статистика'} />\r\n                                            {secondMenuOpen['Статистика'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['Статистика']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'План'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><Event /></ListItemIcon>\r\n                                                            <ListItemText primary={'План'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/statistic');showDrawer(false);setSelected(-1)}}>\r\n                                                            <ListItemIcon><Timeline /></ListItemIcon>\r\n                                                            <ListItemText primary={'Статистика'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/ro');showDrawer(false);setSelected(-1)}}>\r\n                                                            <ListItemIcon><List1 /></ListItemIcon>\r\n                                                            <ListItemText primary={'Рейтинг регионов'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'реализатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/rr');showDrawer(false);setSelected(-1)}}>\r\n                                                            <ListItemIcon><List1 /></ListItemIcon>\r\n                                                            <ListItemText primary={'Рейтинг точек'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('информация')}}>\r\n                                            <ListItemIcon><Info /></ListItemIcon>\r\n                                            <ListItemText primary={'Информация'} />\r\n                                            {secondMenuOpen['информация'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['информация']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                    if(status.role === 'admin') {\r\n                                                        props.history.push('/');\r\n                                                        getData({search: '', sort: '', page: 0, name: 'Блог'});\r\n                                                    } else {\r\n                                                        props.history.push('/blog');\r\n                                                    }\r\n                                                    showDrawer(false);\r\n\r\n                                                    setSelected(-1);\r\n                                                }}>\r\n                                                    <ListItemIcon><ArtTrack /></ListItemIcon>\r\n                                                    <ListItemText primary={'Новости'} />\r\n                                                </ListItem>\r\n                                                <Divider variant='inset'/>\r\n                                                <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                    if(status.role === 'admin') {\r\n                                                        props.history.push('/');\r\n                                                        getData({search: '', sort: '', page: 0, name: 'FAQ'});\r\n                                                    } else {\r\n                                                        props.history.push('/FAQ');\r\n                                                    }\r\n                                                    showDrawer(false);\r\n\r\n                                                    setSelected(-1);\r\n                                                }}>\r\n                                                    <ListItemIcon><QuestionAnswer /></ListItemIcon>\r\n                                                    <ListItemText primary={'FAQ'} />\r\n                                                </ListItem>\r\n                                                <Divider variant='inset'/>\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                        </List>\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nMyDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(MyDrawer));"],"sourceRoot":""}