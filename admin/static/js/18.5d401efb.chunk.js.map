{"version":3,"sources":["logo.png","component/Table.js"],"names":["module","exports","__webpack_require__","p","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","mui_datatables__WEBPACK_IMPORTED_MODULE_1__","mui_datatables__WEBPACK_IMPORTED_MODULE_1___default","react_redux__WEBPACK_IMPORTED_MODULE_2__","redux__WEBPACK_IMPORTED_MODULE_3__","_redux_actions_table__WEBPACK_IMPORTED_MODULE_4__","_redux_actions_mini_dialog__WEBPACK_IMPORTED_MODULE_5__","react_image_gallery__WEBPACK_IMPORTED_MODULE_6__","react_image_gallery__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_8__","_App__WEBPACK_IMPORTED_MODULE_9__","_logo_png__WEBPACK_IMPORTED_MODULE_10__","_logo_png__WEBPACK_IMPORTED_MODULE_10___default","message","mainWindow","current","offsetWidth","a","createElement","Fragment","style","fontWeight","fontSize","width","Table","React","memo","props","classes","_props$table","table","row","count","page","data","data1","name","search","sort","_props$tableActions","tableActions","getData","deleteData","setSelected","_props$mini_dialogAct","mini_dialogActions","showAddMiniDialog","setMiniDialog","showMiniDialog","authenticated","user","options","serverSide","filterType","filter","print","downloadOptions","rowsPerPage","rowsPerPageOptions","onColumnSortChange","changedColumn","direction","onSearchChange","searchText","onChangePage","currentPage","onRowsDelete","rowsDeleted","deletedId","oldFile","i","length","push","index","undefined","includes","deleted","JSON","stringify","onCellClick","colData","colMeta","toString","window","open","focus","images","split","original","thumbnail","items","showThumbnails","showFullscreenButton","showPlayButton","rowIndex","history","onTableChange","action","tableState","theme","createMuiTheme","overrides","MUIDataTableBodyCell","root","textOverflow","maxHeight","maxWidth","overflow","wordWrap","title","columns","className","mainMessage","src","logo","withStyles","backgroundImage","backgroundPosition","backgroundRepeat","height","display","justifyContent","alignItems","color","marginTop","spacing","unit","marginBottom","marginLeft","marginRight","connect","state","dispatch","bindActionCreators"],"mappings":"8EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mECAxCD,EAAAE,EAAAC,GAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,KAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAA,GAAAW,EAAAX,EAAA,IAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAAM,EAAAO,GAAAE,GAAAf,EAAA,KAAAA,EAAA,KAAAgB,EAAAhB,EAAA,IAAAiB,EAAAjB,EAAA,KAAAkB,EAAAlB,EAAAM,EAAAW,GAcME,EAAUC,IAAWC,QAAQC,YAAY,IAC3CjB,EAAAkB,EAAAC,cAAAnB,EAAAkB,EAAAE,SAAA,yIAEIpB,EAAAkB,EAAAC,cAAA,WACAnB,EAAAkB,EAAAC,cAAA,KAAGE,MAAO,CAACC,WAAY,MAAOC,SAAU,SAAxC,uNAGJvB,EAAAkB,EAAAC,cAAAnB,EAAAkB,EAAAE,SAAA,yIAEIpB,EAAAkB,EAAAC,cAAA,WACAnB,EAAAkB,EAAAC,cAAA,KAAGE,MAAO,CAACC,WAAY,MAAOC,SAAU,SAAxC,8SAEFC,EAAQT,IAAWC,QAAQC,YAAY,IAAK,IAAK,IAwBjDQ,EAAQC,IAAMC,KAChB,SAACC,GAAU,IACCC,EAAYD,EAAZC,QADDC,EAgBuDF,EAAMG,MAA5DC,EAhBDF,EAgBCE,IAAKC,EAhBNH,EAgBMG,MAAOC,EAhBbJ,EAgBaI,KAAMC,EAhBnBL,EAgBmBK,KAAMC,EAhBzBN,EAgByBM,MAAOC,EAhBhCP,EAgBgCO,KAAMC,EAhBtCR,EAgBsCQ,OAAQC,EAhB9CT,EAgB8CS,KAhB9CC,EAiBsCZ,EAAMa,aAA3CC,EAjBDF,EAiBCE,QAASC,EAjBVH,EAiBUG,WAAYC,EAjBtBJ,EAiBsBI,YAjBtBC,EAkBsDjB,EAAMkB,mBAA3DC,EAlBDF,EAkBCE,kBAAmBC,EAlBpBH,EAkBoBG,cAAeC,EAlBnCJ,EAkBmCI,eAClCC,EAAkBtB,EAAMuB,KAAxBD,cACFE,EAAU,CACZC,YAAY,EACZC,WAAY,WACZC,QAAQ,EACRC,OAAO,EACPC,iBAAiB,EACjBC,YAAa,GACbzB,MAAOA,EACPC,KAAMA,EACNyB,oBAAoB,EACpBC,mBAAoB,SAACC,EAAeC,GAChCpB,EAAQ,CAACJ,OAAQA,EAAQC,KAAM,CAACsB,EAAeC,GAAY5B,KAAMA,EAAMG,KAAMA,IAC7EO,GAAa,IAEjBmB,eAAgB,SAACC,GACbtB,EAAQ,CAACJ,OAAQ0B,EAAYzB,KAAM,GAAIL,KAAM,EAAGG,KAAMA,IACtDO,GAAa,IAEjBqB,aAAc,SAACC,GACXxB,EAAQ,CAACJ,OAAQA,EAAQC,KAAMA,EAAML,KAAMgC,EAAa7B,KAAMA,IAC9DO,GAAa,IAEjBuB,aAAc,SAACC,GAEX,IADA,IAAIC,EAAY,GAAIC,EAAU,GACtBC,EAAE,EAAGA,EAAEH,EAAYjC,KAAKqC,OAAQD,IACpCF,EAAUI,KAAKtC,EAAKiC,EAAYjC,KAAKoC,GAAGG,OAAOvC,EAAKiC,EAAYjC,KAAKoC,GAAGG,OAAOF,OAAO,SAC/CG,GAApCxC,EAAKiC,EAAYjC,KAAKoC,GAAGG,OAAO,KAAgBvC,EAAKoC,GAAG,GAAGK,SAAS,SAASzC,EAAKiC,EAAYjC,KAAKoC,GAAGG,OAAO,GAAGE,SAAS,YACxHN,GAAW,KAAOnC,EAAKiC,EAAYjC,KAAKoC,GAAGG,OAAO,IAE1D/B,EAAW,CAAC2B,QAASA,EAAShC,OAAQA,EAAQC,KAAMA,EAAML,KAAMA,EAAMG,KAAMA,EAAMwC,QAASC,KAAKC,UAAUV,KAC1GzB,GAAa,IAEjBoC,YAAa,SAACC,EAASC,GAEnB,QAAYP,IADZM,EAAUA,EAAQE,aACOF,EAAQL,SAAS,SAASK,EAAQL,SAAS,SAS7D,GAAY,yCAATvC,GAA4B,kEAATA,EAAwB,CACvC+C,OAAOC,KAAKJ,EAAS,UAC3BK,YACD,CAEH,IADA,IAAIC,EAAS,GACJhB,EAAI,EAAGA,EAAEU,EAAQO,MAAM,MAAMhB,OAAQD,IAC1CgB,EAAOd,KAAK,CAACgB,SAAUR,EAAQO,MAAM,MAAMjB,GAAImB,UAAWT,EAAQO,MAAM,MAAMjB,KAClFvB,EAAc,mDAAYhD,EAAAkB,EAAAC,cAACV,EAAAS,EAAD,CAAcyE,MAAOJ,EAAQK,gBAAgB,EAAOC,sBAAsB,EAAOC,gBAAgB,KAC3H7C,GAAe,QAhBfL,EAAYsC,EAAQa,UACR,+CAAT1D,EACCT,EAAMoE,QAAQvB,KAAK,UACJ,mCAATpC,EACNT,EAAMoE,QAAQvB,KAAK,WAEnB1B,KAaZkD,cAAe,SAACC,EAAQC,GACR,WAATD,GAA2C,OAAxBC,EAAWnC,aAC7BtB,EAAQ,CAACJ,OAAQ,GAAIC,KAAM,GAAIL,KAAM,EAAGG,KAAMA,IAC9CO,GAAa,MAIzB,OACQ5C,EAAAkB,EAAAC,cAAAnB,EAAAkB,EAAAE,SAAA,KACK8B,GAAqB,IAANb,EACZrC,EAAAkB,EAAAC,cAACT,EAAA,iBAAD,CAAkB0F,MAlFVC,yBAAe,CACnCC,UAAW,CACPC,qBAAsB,CAClBC,KAAM,CACFC,aAAc,WACdC,UAAW,QACXC,SAAU,QACVC,SAAU,SACVC,SAAU,mBA2EN7G,EAAAkB,EAAAC,cAAChB,EAAAe,EAAD,CACI4F,MAAOzE,EACPF,KAAMC,EACN2E,QAAS/E,EACToB,QAASA,KAIjBpD,EAAAkB,EAAAC,cAAA,OAAK6F,UAAWnF,EAAQoF,aACpBjH,EAAAkB,EAAAC,cAAA,OAAK6F,UAAWnF,EAAQf,SACpBd,EAAAkB,EAAAC,cAAA,OAAKE,MAAO,CAACG,MAAM,SAAU0F,IAAKC,MAAQnH,EAAAkB,EAAAC,cAAA,WAC1CnB,EAAAkB,EAAAC,cAAA,WACCL,OA2BlBsG,+BApJA,SAAAhB,GAAK,MAAK,CACrBa,YAAa,CACTI,gBAAiB,yCACjBC,mBAAoB,gBACpBC,iBAAkB,YAClB/F,MAAO,OACPgG,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEhB7G,QAAS,CACL8G,MAAO,UACPtG,WAAY,OACZC,SAAU,OACVC,MAAOA,EACPqG,UAAWzB,EAAM0B,QAAQC,KACzBC,aAAc5B,EAAM0B,QAAQC,KAC5BE,WAAY,gBAAgBzG,EAAM,SAClC0G,YAAa,gBAAgB1G,EAAM,YAiI5B4F,CAAmBe,YAlBlC,SAA0BC,GACtB,MAAO,CACHrG,MAAOqG,EAAMrG,MACboB,KAAMiF,EAAMjF,OAIpB,SAA4BkF,GACxB,MAAO,CACHvF,mBAAoBwF,YAAmBxF,EAAoBuF,GAC3D5F,aAAc6F,YAAmB7F,EAAc4F,KAQrBF,CAA6C1G","file":"static/js/18.5d401efb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fdc48fe4.png\";","import React from 'react';\r\nimport MUIDataTable from 'mui-datatables';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as tableActions from '../redux/actions/table'\r\nimport * as mini_dialogActions from '../redux/actions/mini_dialog'\r\nimport ImageGallery from 'react-image-gallery';\r\nimport 'react-image-gallery/styles/css/image-gallery.css';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { mainWindow } from '../App'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport logo from '../logo.png';\r\n\r\nconst message = mainWindow.current.offsetWidth>800?\r\n    <>\r\n        DsrAdmin - не будущее, а настоящее\r\n        <br/>\r\n        <i style={{fontWeight: '500', fontSize: '18px'}}>Для начала выберите пункт в боковом меню</i>\r\n    </>\r\n    :\r\n    <>\r\n    DsrAdmin - не будущее, а настоящее\r\n        <br/>\r\n        <i style={{fontWeight: '500', fontSize: '18px'}}>Для начала нажмите значок и выберите пункт в боковом меню</i>\r\n    </>;\r\nconst width = mainWindow.current.offsetWidth>800? 500: 240;\r\nconst styles = theme => ({\r\n    mainMessage: {\r\n        backgroundImage: \"url('https://i.imgur.com/ZE6v9a9.jpg')\",\r\n        backgroundPosition: 'center center',\r\n        backgroundRepeat: 'no-repeat',\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    message: {\r\n        color: '#ffffff',\r\n        fontWeight: 'bold',\r\n        fontSize: '20px',\r\n        width: width,\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: 'calc((100% - '+width+'px)/2)',\r\n        marginRight: 'calc((100% - '+width+'px)/2)'\r\n    }\r\n});\r\n\r\nconst Table = React.memo(\r\n    (props) => {\r\n        const { classes } = props;\r\n        let getMuiTheme = () => createMuiTheme({\r\n            overrides: {\r\n                MUIDataTableBodyCell: {\r\n                    root: {\r\n                        textOverflow: 'ellipsis',\r\n                        maxHeight: '500px',\r\n                        maxWidth: '200px',\r\n                        overflow: 'hidden',\r\n                        wordWrap: 'break-word'\r\n                    }\r\n                }\r\n\r\n            }\r\n        })\r\n        const { row, count, page, data, data1, name, search, sort } = props.table;\r\n        const { getData, deleteData, setSelected } = props.tableActions;\r\n        const { showAddMiniDialog, setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n        const { authenticated } = props.user;\r\n        const options = {\r\n            serverSide: true,\r\n            filterType: 'checkbox',\r\n            filter: false,\r\n            print: false,\r\n            downloadOptions: false,\r\n            rowsPerPage: 10,\r\n            count: count,\r\n            page: page,\r\n            rowsPerPageOptions: false,\r\n            onColumnSortChange: (changedColumn, direction) => {\r\n                getData({search: search, sort: [changedColumn, direction], page: page, name: name})\r\n                setSelected(-1)\r\n            },\r\n            onSearchChange: (searchText) => {\r\n                getData({search: searchText, sort: '', page: 0, name: name})\r\n                setSelected(-1)\r\n            },\r\n            onChangePage: (currentPage) => {\r\n                getData({search: search, sort: sort, page: currentPage, name: name})\r\n                setSelected(-1)\r\n            },\r\n            onRowsDelete: (rowsDeleted) => {\r\n                let deletedId = [], oldFile = '';\r\n                for(let i=0; i<rowsDeleted.data.length; i++){\r\n                    deletedId.push(data[rowsDeleted.data[i].index][data[rowsDeleted.data[i].index].length-1])\r\n                    if(data[rowsDeleted.data[i].index][0]!=undefined&&(data[i][0].includes('http')||data[rowsDeleted.data[i].index][0].includes('https')))\r\n                        oldFile += '\\n' + data[rowsDeleted.data[i].index][0]\r\n                }\r\n                deleteData({oldFile: oldFile, search: search, sort: sort, page: page, name: name, deleted: JSON.stringify(deletedId)})\r\n                setSelected(-1)\r\n            },\r\n            onCellClick: (colData, colMeta) => {\r\n                colData = colData.toString()\r\n                if(colData!=undefined&&!(colData.includes('http')||colData.includes('https'))) {\r\n                    setSelected(colMeta.rowIndex)\r\n                    if(name === 'Событие'){\r\n                        props.history.push('/event')\r\n                    } else if(name === 'Сеанс'){\r\n                        props.history.push('/seance')\r\n                    } else {\r\n                        showAddMiniDialog()\r\n                    }\r\n                } else if(name === 'Билеты'||name === 'Билеты кино') {\r\n                    let win = window.open(colData, '_blank');\r\n                    win.focus();\r\n                } else {\r\n                    let images = []\r\n                    for (let i = 0; i<colData.split('\\n').length; i++)\r\n                        images.push({original: colData.split('\\n')[i], thumbnail: colData.split('\\n')[i]})\r\n                    setMiniDialog('Просмотр', <ImageGallery items={images} showThumbnails={false} showFullscreenButton={false} showPlayButton={false} />);\r\n                    showMiniDialog(true)\r\n                }\r\n            },\r\n            onTableChange: (action, tableState) => {\r\n                if(action==='search'&&tableState.searchText===null){\r\n                    getData({search: '', sort: '', page: 0, name: name})\r\n                    setSelected(-1)\r\n                }\r\n            }\r\n        };\r\n        return (\r\n                <>\r\n                    {authenticated&&name!=''?\r\n                        <MuiThemeProvider theme={getMuiTheme()}>\r\n                            <MUIDataTable\r\n                                title={name}\r\n                                data={data1}\r\n                                columns={row}\r\n                                options={options}\r\n                            />\r\n                        </MuiThemeProvider>\r\n                        :\r\n                        <div className={classes.mainMessage}>\r\n                            <div className={classes.message}>\r\n                                <img style={{width:'100px'}} src={logo} /><br/>\r\n                                <br/>\r\n                                {message}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </>\r\n            );\r\n        }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        table: state.table,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nTable.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Table));"],"sourceRoot":""}