{"version":3,"sources":["component/Drawer.js"],"names":["MyDrawer","React","memo","props","drawer","app","status","user","showDrawer","appActions","_props$tableActions","tableActions","getData","setSelected","classes","_useState","useState","_useState2","Object","C_projects_shoro_shoro_admin_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","secondMenuOpen","setSecondMenuOpen","collapse","name","open","keys","i","length","authenticated","variant","mainWindow","current","offsetWidth","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_4___default","className","onClose","paper","drawerPaper","toolbar","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_5___default","includes","role","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_6___default","button","key","onClick","history","push","search","sort","page","_material_ui_core_ListItemIcon__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_icons_Face__WEBPACK_IMPORTED_MODULE_19___default","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_8___default","primary","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_icons_Info__WEBPACK_IMPORTED_MODULE_20___default","_material_ui_icons_UnfoldLess__WEBPACK_IMPORTED_MODULE_17___default","_material_ui_icons_UnfoldMore__WEBPACK_IMPORTED_MODULE_18___default","_material_ui_core_Collapse__WEBPACK_IMPORTED_MODULE_16___default","in","timeout","unmountOnExit","component","disablePadding","nested","_material_ui_icons_Web__WEBPACK_IMPORTED_MODULE_21___default","_material_ui_icons_QuestionAnswer__WEBPACK_IMPORTED_MODULE_22___default","_material_ui_icons_Storage__WEBPACK_IMPORTED_MODULE_23___default","Fragment","_material_ui_icons_LocationCity__WEBPACK_IMPORTED_MODULE_33___default","_material_ui_icons_LocationOn__WEBPACK_IMPORTED_MODULE_31___default","_material_ui_icons_AssignmentInd__WEBPACK_IMPORTED_MODULE_28___default","_material_ui_icons_Commute__WEBPACK_IMPORTED_MODULE_29___default","_material_ui_icons_AccountBalanceWallet__WEBPACK_IMPORTED_MODULE_30___default","_material_ui_icons_Assignment__WEBPACK_IMPORTED_MODULE_24___default","_material_ui_icons_ListAlt__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_icons_Receipt__WEBPACK_IMPORTED_MODULE_32___default","_material_ui_icons_Assessment__WEBPACK_IMPORTED_MODULE_26___default","_material_ui_icons_Timeline__WEBPACK_IMPORTED_MODULE_25___default","_material_ui_icons_List__WEBPACK_IMPORTED_MODULE_27___default","connect","state","dispatch","bindActionCreators","userActions","withStyles","theme","width","flexShrink","mixins","textField","marginLeft","spacing","unit","marginRight","paddingLeft"],"mappings":"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","file":"static/js/6.eab07b09.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Event from '@material-ui/icons/ListAlt';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { mainWindow } from '../App'\r\nimport * as tableActions from '../redux/actions/table'\r\nimport * as userActions from '../redux/actions/user'\r\nimport * as appActions from '../redux/actions/app'\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/UnfoldLess';\r\nimport ExpandMore from '@material-ui/icons/UnfoldMore';\r\nimport Face from '@material-ui/icons/Face';\r\nimport Info from '@material-ui/icons/Info';\r\nimport ArtTrack from '@material-ui/icons/Web';\r\nimport QuestionAnswer from '@material-ui/icons/QuestionAnswer';\r\nimport Storage from '@material-ui/icons/Storage';\r\nimport Assignment from '@material-ui/icons/Assignment';\r\nimport Timeline from '@material-ui/icons/Timeline';\r\nimport Assessment from '@material-ui/icons/Assessment';\r\nimport List1 from '@material-ui/icons/List';\r\nimport AssignmentInd from '@material-ui/icons/AssignmentInd';\r\nimport Commute from '@material-ui/icons/Commute';\r\nimport AccountBalance from '@material-ui/icons/AccountBalanceWallet';\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport Receipt from '@material-ui/icons/Receipt';\r\nimport LocationCity from '@material-ui/icons/LocationCity';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: 200,\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing.unit * 4,\r\n    },\r\n});\r\n\r\nconst MyDrawer = React.memo(\r\n    (props) =>{\r\n        const { drawer } = props.app;\r\n        const { status } = props.user;\r\n        const { showDrawer } = props.appActions;\r\n        const { getData, setSelected } = props.tableActions;\r\n        const { classes } = props;\r\n        let [secondMenuOpen, setSecondMenuOpen] = useState({});\r\n        let collapse = (name)=>{\r\n            let open = !secondMenuOpen[name]\r\n            let keys = Object.keys(secondMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                secondMenuOpen[keys[i]] = false\r\n            }\r\n            secondMenuOpen[name] = open\r\n            setSecondMenuOpen(secondMenuOpen)\r\n\r\n        }\r\n        const { authenticated } = props.user;\r\n        let variant= ''\r\n        if(mainWindow.current.offsetWidth>800)\r\n            variant= 'permanent'\r\n        return (\r\n            <div>\r\n                <Drawer\r\n                    variant= {variant}\r\n                    className={classes.drawer}\r\n                    open={drawer}\r\n                    onClose={()=>showDrawer(false)}\r\n                    classes={{paper: classes.drawerPaper,}}\r\n                >\r\n                    {\r\n                        mainWindow.current.offsetWidth>800?\r\n                            <div className={classes.toolbar}/>\r\n                        :\r\n                            null\r\n                    }\r\n                    {authenticated?\r\n                        <List>\r\n                            {\r\n                                status.status==='active'&&['реализатор', 'организатор'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: ''}); setSelected(-1)}}>\r\n                                            <ListItemIcon>\r\n                                                <Face />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={'Профиль'} />\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('информация')}}>\r\n                                            <ListItemIcon><Info /></ListItemIcon>\r\n                                            <ListItemText primary={'Информация'} />\r\n                                            {secondMenuOpen['информация'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['информация']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                    if(status.role === 'admin') {\r\n                                                        props.history.push('/');\r\n                                                        getData({search: '', sort: '', page: 0, name: 'Блог'});\r\n                                                    } else {\r\n                                                        props.history.push('/blog');\r\n                                                    }\r\n                                                    showDrawer(false);\r\n                                                   \r\n                                                    setSelected(-1);\r\n                                                }}>\r\n                                                    <ListItemIcon><ArtTrack /></ListItemIcon>\r\n                                                    <ListItemText primary={'Новости'} />\r\n                                                </ListItem>\r\n                                                <Divider variant='inset'/>\r\n                                                <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                    if(status.role === 'admin') {\r\n                                                        props.history.push('/');\r\n                                                        getData({search: '', sort: '', page: 0, name: 'FAQ'});\r\n                                                    } else {\r\n                                                        props.history.push('/FAQ');\r\n                                                    }\r\n                                                    showDrawer(false);\r\n                                                   \r\n                                                    setSelected(-1);\r\n                                                }}>\r\n                                                    <ListItemIcon><QuestionAnswer /></ListItemIcon>\r\n                                                    <ListItemText primary={'FAQ'} />\r\n                                                </ListItem>\r\n                                                <Divider variant='inset'/>\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('Данные')}}>\r\n                                            <ListItemIcon><Storage /></ListItemIcon>\r\n                                            <ListItemText primary={'Данные'} />\r\n                                            {secondMenuOpen['Данные'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['Данные']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Регион'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><LocationCity /></ListItemIcon>\r\n                                                            <ListItemText primary={'Регион'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Точка'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><LocationOn /></ListItemIcon>\r\n                                                            <ListItemText primary={'Точка'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Организатор'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><AssignmentInd /></ListItemIcon>\r\n                                                            <ListItemText primary={'Организатор'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Реализатор'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><AssignmentInd /></ListItemIcon>\r\n                                                            <ListItemText primary={'Реализатор'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Завсклада'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><AssignmentInd /></ListItemIcon>\r\n                                                            <ListItemText primary={'Завсклада'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Машина'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><Commute /></ListItemIcon>\r\n                                                            <ListItemText primary={'Машина'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Цена'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><AccountBalance /></ListItemIcon>\r\n                                                            <ListItemText primary={'Цена'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('Накладные')}}>\r\n                                            <ListItemIcon><Assignment /></ListItemIcon>\r\n                                            <ListItemText primary={'Накладные'} />\r\n                                            {secondMenuOpen['Накладные'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['Накладные']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'План'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><Event /></ListItemIcon>\r\n                                                            <ListItemText primary={'План'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Накладная на вечерний возврат'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная на вечерний возврат'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Накладная на пустую тару'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная на пустую тару'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Накладная склад №1'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная склад №1'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Накладная склад №2'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная склад №2'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Отчет организатора'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Отчет организатора'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Отчет реализатора'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Отчет реализатора'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('Статистика')}}>\r\n                                            <ListItemIcon><Assessment /></ListItemIcon>\r\n                                            <ListItemText primary={'Статистика'} />\r\n                                            {secondMenuOpen['Статистика'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['Статистика']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/statistic');showDrawer(false);setSelected(-1)}}>\r\n                                                            <ListItemIcon><Timeline /></ListItemIcon>\r\n                                                            <ListItemText primary={'Статистика'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/ro');showDrawer(false);setSelected(-1)}}>\r\n                                                            <ListItemIcon><List1 /></ListItemIcon>\r\n                                                            <ListItemText primary={'Рейтинг регионов'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'реализатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/rr');showDrawer(false);setSelected(-1)}}>\r\n                                                            <ListItemIcon><List1 /></ListItemIcon>\r\n                                                            <ListItemText primary={'Рейтинг точек'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                        </List>\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nMyDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(MyDrawer));"],"sourceRoot":""}