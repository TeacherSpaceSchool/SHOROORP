{"version":3,"sources":["redux/actions/table.js","redux/constants/other.js","component/Add/Blog.js","component/Add/Car.js","component/Add/Point.js","component/Add/Region.js","component/Add/Realizator.js","component/Add/Organizator.js","component/Add/ZavSklad.js","component/Add/Price.js","redux/actions/mini_dialog.js"],"names":["setData","payload","_ref","Object","C_projects_shoro_shoro_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_projects_shoro_shoro_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","dispatch","data","_headers","i","res","row","_i","data1","_i2","data2","i1","data3","wrap","_context","prev","next","FormData","append","id","search","sort","JSON","stringify","page","name","undefined","oldFile","oldFileWhatermark","file","length","accept","Accept-Language","Content-Type","concat","_boundary","X-Requested-With","Authorization","localStorage","userShoroAdmin","axios","post","headers","sent","push","options","filter","split","month","parseInt","count","type","GET_DATA","t0","console","error","stop","this","_x","apply","arguments","addData","_ref2","_callee2","_i3","_i4","_context2","_x2","setSelected","SET_SELECTED","getIds","_ref3","_callee3","_context3","GET_IDS","_x3","getData","_ref4","_callee4","_i5","_context4","_x4","getDataSimple","_ref5","_callee5","_context5","abrupt","_x5","deleteData","_ref6","_callee6","_i6","_context6","deleted","_x6","__webpack_require__","d","__webpack_exports__","width","mainWindow","current","offsetWidth","Sign","React","memo","props","showMiniDialog","mini_dialogActions","_props$tableActions","tableActions","_props$table","table","selected","_useState","useState","_useState2","slicedToArray","title","setTitle","_useState3","_useState4","text","setText","_useState5","_useState6","setFile","_useState7","_useState8","fileNames","setFileNames","handleChangeFile","asyncToGenerator","regenerator_default","event","target","files","classes","react_default","createElement","TextField_default","label","className","textField","margin","value","onChange","multiline","rowsMax","urls","htmlFor","Button_default","variant","color","component","button","onClick","style","display","withStyles","theme","spacing","unit","marginLeft","marginRight","error_message","marginTop","marginBottom","fontWeight","maxHeight","overflow","menu","connect","state","mini_dialog","bindActionCreators","number","setName","region","setRegion","regions","setRegions","useEffect","select","SelectProps","MenuProps","map","option","MenuItem_default","key","_data","setPoints","point","setStatus","status","setPhone","phone","setPoint","setId","_id","setUser","user","points","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","password","setPassword","_useState15","_useState16","statuses","_useState17","_useState18","_useState19","_useState20","price","setPrice","setMiniDialog","child","SET_MINI_DIALOG","showAddMiniDialog","store","getState","Blog","Car","Realizator","Point","Region","Organizator","ZavSklad","Price","SHOW_MINI_DIALOG","show"],"mappings":"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","file":"static/js/1.3a7b934b.chunk.js","sourcesContent":["import {\r\n    GET_DATA,\r\n    GET_IDS,\r\n    SET_SELECTED\r\n} from '../constants/table'\r\nimport axios from 'axios';\r\nimport FormData from 'form-data';\r\nimport { month } from '../constants/other'\r\n\r\nexport function setData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            let _headers;\r\n            data.append('id', payload.id);\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('new', JSON.stringify(payload.data));\r\n            if(payload.oldFile != undefined){\r\n                data.append('oldFile', payload.oldFile);\r\n            }\r\n            if(payload.oldFileWhatermark != undefined){\r\n                data.append('oldFileWhatermark', payload.oldFileWhatermark);\r\n            }\r\n            if (payload.file != undefined) {\r\n                data.append('fileLength', payload.file.length);\r\n                for(let i=0; i<payload.file.length; i++){\r\n                    data.append('file'+i, payload.file[i]);\r\n                    data.append('fileName'+i, payload.file[i].name);\r\n                }\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization': 'Bearer ' + localStorage.userShoroAdmin,\r\n                }\r\n            } else {\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userShoroAdmin,\r\n                }\r\n            }\r\n            const res = await axios.post(\r\n                '/data/add',\r\n                data,\r\n                {headers: _headers});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name=='План')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(i1===0){\r\n                            data3 = data3.split('-')\r\n                            data3 = month[parseInt(data3[1])-1]+' '+data3[0]\r\n                        }\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function addData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            let _headers;\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('new', JSON.stringify(payload.data));\r\n            if (payload.file != undefined) {\r\n                data.append('fileLength', payload.file.length);\r\n                for(let i=0; i<payload.file.length; i++){\r\n                    data.append('file'+i, payload.file[i]);\r\n                    data.append('fileName'+i, payload.file[i].name);\r\n                }\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization': 'Bearer ' + localStorage.userShoroAdmin\r\n                }\r\n            } else {\r\n                _headers = {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userShoroAdmin,\r\n                }\r\n            }\r\n            const res = await axios.post(\r\n                '/data/add',\r\n                data,\r\n                {headers: _headers});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name=='План')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(i1===0){\r\n                            data3 = data3.split('-')\r\n                            data3 = month[parseInt(data3[1])-1]+' '+data3[0]\r\n                        }\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function setSelected(payload) {\r\n    return {\r\n        type: SET_SELECTED,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport function getIds(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('name', payload);\r\n            const res = await axios.post(\r\n                '/data/getIds',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userShoroAdmin,\r\n                }});\r\n            dispatch({\r\n                type: GET_IDS,\r\n                payload: res.data\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport function getData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            const res = await axios.post(\r\n                '/data/get',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userShoroAdmin,\r\n                }});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name=='План')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(i1===0){\r\n                            data3 = data3.split('-')\r\n                            data3 = month[parseInt(data3[1])-1]+' '+data3[0]\r\n                        }\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport const getDataSimple = async (payload) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('name', payload.name);\r\n            if(payload.data!==undefined)\r\n                data.append('data', JSON.stringify(payload.data));\r\n            const res = await axios.post(\r\n                '/data/get',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userShoroAdmin,\r\n                }});\r\n            return res.data\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n}\r\n\r\nexport function deleteData(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = new FormData();\r\n            data.append('search', payload.search);\r\n            data.append('sort', payload.sort);\r\n            data.append('skip', JSON.stringify(payload.page*10));\r\n            data.append('name', payload.name);\r\n            data.append('deleted', payload.deleted);\r\n            if(payload.oldFile != undefined && payload.oldFile.length > 0){\r\n                data.append('oldFile', payload.oldFile);\r\n            }\r\n            const res = await axios.post(\r\n                '/data/delete',\r\n                data,\r\n                {headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'X-Requested-With': 'XMLHttpRequest',\r\n                    'Authorization':'Bearer '+localStorage.userShoroAdmin,\r\n                }});\r\n            let row = [];\r\n            for(let i = 0; i<res.data.row.length; i++){\r\n                row.push({\r\n                    name: res.data.row[i],\r\n                    options: {\r\n                        filter: true,\r\n                        sort: true,\r\n                    }\r\n                })\r\n            }\r\n            let data1 = []\r\n            if(payload.name=='План')\r\n                for(let i = 0; i<res.data.data.length; i++){\r\n                    let data2=[]\r\n                    for(let i1 = 0; i1<res.data.data[i].length; i1++){\r\n                        let data3 = res.data.data[i][i1]\r\n                        if(i1===0){\r\n                            data3 = data3.split('-')\r\n                            data3 = month[parseInt(data3[1])-1]+' '+data3[0]\r\n                        }\r\n                        data2.push(data3)\r\n                    }\r\n                    data1.push(data2)\r\n                }\r\n            else data1 = res.data.data\r\n            payload = {\r\n                count: res.data.count,\r\n                page: payload.page,\r\n                data: res.data.data,\r\n                data1: data1,\r\n                row: row,\r\n                search: payload.search,\r\n                name: payload.name,\r\n                sort: payload.sort\r\n            }\r\n            dispatch({\r\n                type: GET_DATA,\r\n                payload: payload\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}","export const month = [\r\n    'январь',\r\n    'февраль',\r\n    'март',\r\n    'апрель',\r\n    'май',\r\n    'июнь',\r\n    'июль',\r\n    'август',\r\n    'сентябрь',\r\n    'октябрь',\r\n    'ноябрь',\r\n    'декабрь'\r\n]\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n        let [title, setTitle] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleTitle =  (event) => {\r\n            setTitle(event.target.value)\r\n        };\r\n        let [text, setText] = useState(selected!==-1?data[selected][2]:'');\r\n        let handleText =  (event) => {\r\n            setText(event.target.value)\r\n        };\r\n        let [file, setFile] = useState([]);\r\n        let [fileNames, setFileNames] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleChangeFile = (async (event) => {\r\n            setFile(event.target.files)\r\n            let fileNames='';\r\n            for(let i=0; i<event.target.files.length; i++){\r\n                if(i!==0)\r\n                    fileNames+=', '\r\n                fileNames+=event.target.files[i].name+','\r\n            }\r\n            setFileNames(fileNames)\r\n        })\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='заголовок'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={title}\r\n                    onChange={handleTitle}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    multiline\r\n                    rowsMax='4'\r\n                    label='текст'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={text}\r\n                    onChange={handleText}\r\n                />\r\n                <br/>\r\n                <div className={classes.urls}>\r\n                    {fileNames}\r\n                </div>\r\n                <br/>\r\n                <label htmlFor='contained-button-file'>\r\n                    <Button variant='contained' color={fileNames.length>0?'primary':''} component='span' className={classes.button}>\r\n                        Загрузить изображение\r\n                    </Button>\r\n                </label>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Блог', file: file, data: {text: text, name: title}});\r\n                        else\r\n                            setData({id: data[selected][1], search: '', sort: '', page: 0, name: 'Блог', oldFile: data[selected][0], oldFileWhatermark: data[selected][1], file: file, data: {text: text, name: title}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <input\r\n                    accept='image/*'\r\n                    style={{ display: 'none' }}\r\n                    id='contained-button-file'\r\n                    type='file'\r\n                    onChange={handleChangeFile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n        let [title, setTitle] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleTitle =  (event) => {\r\n            setTitle(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='номер'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={title}\r\n                    onChange={handleTitle}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Машина', data: {number: title}});\r\n                        else\r\n                            setData({id: data[selected][0], search: '', sort: '', page: 0, name: 'Машина', data: {number: title}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [region, setRegion] = useState(selected!==-1?data[selected][1]:'');\r\n        let handleRegion =  (event) => {\r\n            setRegion(event.target.value)\r\n        };\r\n        let [regions, setRegions] = useState([]);\r\n        useEffect(async ()=>{\r\n            let data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n            setRegions(data)\r\n        },[])\r\n\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    label='регион'\r\n                    className={classes.textField}\r\n                    value={region}\r\n                    onChange={handleRegion}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {regions.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Точка',  data: {name: name, region: region}});\r\n                        else\r\n                            setData({id: data[selected][0], search: '', sort: '', page: 0, name: 'Точка', data: {name: name, region: region}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='название'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Регион',  data: {name: name}});\r\n                        else\r\n                            setData({id: data[selected][0], search: '', sort: '', page: 0, name: 'Регион', data: {name: name}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        useEffect(async ()=>{\r\n            let _data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n            setRegions(_data)\r\n            _data = await tableActions.getDataSimple({name: 'ТочкаИмя'})\r\n            setPoints(_data)\r\n            if(selected!==-1){\r\n                _data = await tableActions.getDataSimple({name: 'РеализаторПоИмени', data: {name: data[selected][0], point: data[selected][1].split('-')[1]}})\r\n                setStatus(_data.status);\r\n                setName(_data.name);\r\n                setPhone(_data.phone);\r\n                setRegion(_data.region);\r\n                setPoint(_data.point);\r\n                setId(_data._id)\r\n                setUser(_data.user)\r\n            }\r\n        },[])\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n        let [name, setName] = useState('');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState('');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        let [points, setPoints] = useState([]);\r\n        let [point, setPoint] = useState('');\r\n        let handlePoint =  (event) => {\r\n            setPoint(event.target.value)\r\n        };\r\n        let [regions, setRegions] = useState([]);\r\n        let [region, setRegion] = useState('');\r\n        let handleRegion =  (event) => {\r\n            setRegion(event.target.value)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        let [id, setId] = useState('');\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState('');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [user, setUser] = useState('');\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    label='точка'\r\n                    className={classes.textField}\r\n                    value={point}\r\n                    onChange={handlePoint}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {points.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    label='регион'\r\n                    className={classes.textField}\r\n                    value={region}\r\n                    onChange={handleRegion}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {regions.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='пароль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={password}\r\n                    onChange={handlePassword}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Реализатор', data: {name:name, phone: phone, status: status, point: point, region: region, password: password}});\r\n                        else\r\n                            setData({id: id, search: '', sort: '', page: 0, name: 'Реализатор', data: {user: user, name:name, status: status, phone: phone, point: point, region: region, password: password}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        useEffect(async ()=>{\r\n            let _data = await tableActions.getDataSimple({name: 'РегионИмя'})\r\n            setRegions(_data)\r\n            if(selected!==-1){\r\n                _data = await tableActions.getDataSimple({name: 'ОрганизаторПоИмени', data: {name: data[selected][0], region: data[selected][1]}})\r\n                setStatus(_data.status);\r\n                setName(_data.name);\r\n                setPhone(_data.phone);\r\n                setRegion(_data.region);\r\n                setId(_data._id)\r\n                setUser(_data.user)\r\n            }\r\n        },[])\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n        let [name, setName] = useState('');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState('');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        let [regions, setRegions] = useState([]);\r\n        let [region, setRegion] = useState('');\r\n        let handleRegion =  (event) => {\r\n            setRegion(event.target.value)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        let [id, setId] = useState('');\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState('');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [user, setUser] = useState('');\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    label='регион'\r\n                    className={classes.textField}\r\n                    value={region}\r\n                    onChange={handleRegion}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {regions.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='пароль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={password}\r\n                    onChange={handlePassword}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Организатор', data: {name:name, phone: phone, status: status, region: region, password: password}});\r\n                        else\r\n                            setData({id: id, search: '', sort: '', page: 0, name: 'Организатор', data: {user: user, name:name, status: status, phone: phone, region: region, password: password}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        useEffect(async ()=>{\r\n            if(selected!==-1){\r\n                let _data = await tableActions.getDataSimple({name: 'ЗавскладаПоИмени', data: {name: data[selected][0]}})\r\n                setStatus(_data.status);\r\n                setName(_data.name);\r\n                setPhone(_data.phone);\r\n                setId(_data._id)\r\n                setUser(_data.user)\r\n            }\r\n        },[])\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n        let [name, setName] = useState('');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState('');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        let [password, setPassword] = useState('');\r\n        let handlePassword =  (event) => {\r\n            setPassword(event.target.value)\r\n        };\r\n        let [id, setId] = useState('');\r\n        let statuses = ['active', 'inactive']\r\n        let [status, setStatus] = useState('');\r\n        let handleStatus =  (event) => {\r\n            setStatus(event.target.value)\r\n        };\r\n        let [user, setUser] = useState('');\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label='имя'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={name}\r\n                    onChange={handleName}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='телефон'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={phone}\r\n                    onChange={handlePhone}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label='пароль'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={password}\r\n                    onChange={handlePassword}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    select\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    label='статус'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={status}\r\n                    onChange={handleStatus}\r\n                >\r\n                    {statuses != undefined?\r\n                        statuses.map(option => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))\r\n                        :\r\n                        null\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Завсклада', data: {name:name, phone: phone, status: status, password: password}});\r\n                        else\r\n                            setData({id: id, search: '', sort: '', page: 0, name: 'Завсклада', data: {user: user, name:name, status: status, phone: phone, password: password}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as tableActions from '../../redux/actions/table'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { mainWindow } from '../../App'\r\nconst width = mainWindow.current.offsetWidth>800? 500: (mainWindow.current.offsetWidth-144);\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: width,\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    urls: {\r\n        margin: theme.spacing.unit,\r\n        width: width,\r\n        maxHeight: 100,\r\n        overflow: 'auto'\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    }\r\n});\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setSelected, addData, setData } = props.tableActions;\r\n        const { selected, data } = props.table;\r\n        let names = ['Максым', 'Чалап', 'Квас', 'Стакан Легенда']\r\n        let [name, setName] = useState(selected!==-1?data[selected][0]:'');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [price, setPrice] = useState(selected!==-1?data[selected][1]:'');\r\n        let handlePrice =  (event) => {\r\n            setPrice(event.target.value)\r\n        };\r\n        const { classes } = props;\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    select\r\n                    label='название'\r\n                    className={classes.textField}\r\n                    value={name}\r\n                    onChange={handleName}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    margin='normal'\r\n                >\r\n                    {names.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))\r\n                    }\r\n                </TextField>\r\n                <br/>\r\n                <TextField\r\n                    label='цена'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={price}\r\n                    onChange={handlePrice}\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={()=>{\r\n                        if(selected===-1)\r\n                            addData({search: '', sort: '', page: 0, name: 'Цена',  data: {name: name, price: price}});\r\n                        else\r\n                            setData({id: data[selected][0], search: '', sort: '', page: 0, name: 'Цена', data: {name: name, price: price}});\r\n                        setSelected(-1)\r\n                        showMiniDialog(false)}} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{setSelected(-1); showMiniDialog(false)}} className={classes.button}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        table: state.table,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Sign));","import { SET_MINI_DIALOG, SHOW_MINI_DIALOG } from '../constants/mini_dialog'\r\nimport React from 'react'\r\nimport {\r\n    store\r\n} from '../../index'\r\nimport Blog from '../../component/Add/Blog';\r\nimport Car from '../../component/Add/Car';\r\nimport Point from '../../component/Add/Point';\r\nimport Region from '../../component/Add/Region';\r\nimport Realizator from '../../component/Add/Realizator';\r\nimport Organizator from '../../component/Add/Organizator';\r\nimport ZavSklad from '../../component/Add/ZavSklad';\r\nimport Price from '../../component/Add/Price';\r\n\r\nexport function setMiniDialog(title,child) {\r\n    return {\r\n        type: SET_MINI_DIALOG,\r\n        payload: {title: title, child: child}\r\n    }\r\n}\r\n\r\nexport function showAddMiniDialog() {\r\n    return async (dispatch) => {\r\n        if(store.getState().table.name!=''){\r\n            let child;\r\n            if(store.getState().table.name=='Блог')\r\n                child = <Blog/>\r\n            else if(store.getState().table.name=='Машина')\r\n                child = <Car/>\r\n            else if(store.getState().table.name=='Реализатор')\r\n                child = <Realizator/>\r\n            else if(store.getState().table.name=='Точка')\r\n                child = <Point/>\r\n            else if(store.getState().table.name=='Регион')\r\n                child = <Region/>\r\n            else if(store.getState().table.name=='Организатор')\r\n                child = <Organizator/>\r\n            else if(store.getState().table.name=='Завсклада')\r\n                child = <ZavSklad/>\r\n            else if(store.getState().table.name=='Цена')\r\n                child = <Price/>\r\n            dispatch ({\r\n                type: SET_MINI_DIALOG,\r\n                payload: {title: store.getState().table.name, child: child}\r\n            })\r\n            dispatch ({\r\n                type: SHOW_MINI_DIALOG,\r\n                payload: true\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function showMiniDialog(show) {\r\n    return {\r\n        type: SHOW_MINI_DIALOG,\r\n        payload: show\r\n    }\r\n}\r\n"],"sourceRoot":""}