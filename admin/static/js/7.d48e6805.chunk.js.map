{"version":3,"sources":["component/Drawer.js"],"names":["MyDrawer","React","memo","props","_props$app","app","drawer","profile","status","user","name","table","showDrawer","appActions","_props$tableActions","tableActions","getData","setSelected","classes","location","_useState","useState","_useState2","Object","C_projects_shoro_shoro_admin_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","secondMenuOpen","setSecondMenuOpen","_useState3","_useState4","thirdMenuOpen","setThirdMenuOpen","_useState5","_useState6","fourthMenuOpen","setFourthMenuOpen","_useState7","_useState8","regionList","setRegionList","_useState9","_useState10","pointList","setPointList","_useState11","_useState12","selectedRegion","setSelectedRegion","currentPath","pathname","split","useEffect","_fetchData","C_projects_shoro_shoro_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","C_projects_shoro_shoro_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","wrap","_context","prev","next","t0","t1","sent","t2","t3","stop","this","apply","arguments","fetchData","collapse","C_projects_shoro_shoro_admin_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","open","keys","i","length","collapse1","collapse2","_useState13","_useState14","selectedItem","setSelectedItem","collapseSelectedItem","authenticated","variant","mainWindow","current","offsetWidth","react__WEBPACK_IMPORTED_MODULE_4___default","createElement","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_7___default","className","onClose","paper","drawerPaper","toolbar","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_8___default","includes","role","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_9___default","button","key","onClick","history","push","search","sort","page","_material_ui_core_ListItemIcon__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_icons_Face__WEBPACK_IMPORTED_MODULE_21___default","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_11___default","primary","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_12___default","_material_ui_icons_Storage__WEBPACK_IMPORTED_MODULE_25___default","_material_ui_icons_UnfoldLess__WEBPACK_IMPORTED_MODULE_19___default","_material_ui_icons_UnfoldMore__WEBPACK_IMPORTED_MODULE_20___default","_material_ui_core_Collapse__WEBPACK_IMPORTED_MODULE_18___default","in","timeout","unmountOnExit","component","disablePadding","Fragment","nestedSelectedItem","nested","_material_ui_icons_LocationCity__WEBPACK_IMPORTED_MODULE_35___default","_material_ui_icons_LocationOn__WEBPACK_IMPORTED_MODULE_33___default","nested1SelectedItem","nested1","region","_material_ui_icons_AllInbox__WEBPACK_IMPORTED_MODULE_37___default","undefined","map","element","idx","guid","_material_ui_icons_AssignmentInd__WEBPACK_IMPORTED_MODULE_30___default","_material_ui_icons_Commute__WEBPACK_IMPORTED_MODULE_31___default","_material_ui_icons_AccountBalanceWallet__WEBPACK_IMPORTED_MODULE_32___default","_material_ui_icons_Assignment__WEBPACK_IMPORTED_MODULE_26___default","_material_ui_icons_Receipt__WEBPACK_IMPORTED_MODULE_34___default","guidRegion","_callee2","_context2","_callee3","_context3","_material_ui_icons_Archive__WEBPACK_IMPORTED_MODULE_36___default","_callee4","_context4","point","_callee5","_context5","nested2SelectedItem","nested2","element1","_material_ui_icons_Assessment__WEBPACK_IMPORTED_MODULE_28___default","_material_ui_icons_ListAlt__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Timeline__WEBPACK_IMPORTED_MODULE_27___default","_material_ui_icons_List__WEBPACK_IMPORTED_MODULE_29___default","_material_ui_icons_GpsFixed__WEBPACK_IMPORTED_MODULE_38___default","_material_ui_icons_Info__WEBPACK_IMPORTED_MODULE_22___default","_material_ui_icons_Web__WEBPACK_IMPORTED_MODULE_23___default","_material_ui_icons_QuestionAnswer__WEBPACK_IMPORTED_MODULE_24___default","connect","state","dispatch","bindActionCreators","withStyles","theme","width","flexShrink","mixins","paddingLeft","spacing","unit","background"],"mappings":"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","file":"static/js/7.d48e6805.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Event from '@material-ui/icons/ListAlt';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { mainWindow } from '../App'\r\nimport * as tableActions from '../redux/actions/table'\r\nimport * as appActions from '../redux/actions/app'\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/UnfoldLess';\r\nimport ExpandMore from '@material-ui/icons/UnfoldMore';\r\nimport Face from '@material-ui/icons/Face';\r\nimport Info from '@material-ui/icons/Info';\r\nimport ArtTrack from '@material-ui/icons/Web';\r\nimport QuestionAnswer from '@material-ui/icons/QuestionAnswer';\r\nimport Storage from '@material-ui/icons/Storage';\r\nimport Assignment from '@material-ui/icons/Assignment';\r\nimport Timeline from '@material-ui/icons/Timeline';\r\nimport Assessment from '@material-ui/icons/Assessment';\r\nimport List1 from '@material-ui/icons/List';\r\nimport AssignmentInd from '@material-ui/icons/AssignmentInd';\r\nimport Commute from '@material-ui/icons/Commute';\r\nimport AccountBalance from '@material-ui/icons/AccountBalanceWallet';\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport Receipt from '@material-ui/icons/Receipt';\r\nimport LocationCity from '@material-ui/icons/LocationCity';\r\nimport Archive from '@material-ui/icons/Archive';\r\nimport All from '@material-ui/icons/AllInbox';\r\nimport GpsFixed from '@material-ui/icons/GpsFixed';\r\n\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst styles = theme => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    nested: {\r\n        paddingLeft: theme.spacing.unit * 4,\r\n    },\r\n    nestedSelectedItem: {\r\n        paddingLeft: theme.spacing.unit * 4,\r\n        background: '#C1C1C1',\r\n    },\r\n    nested1: {\r\n        paddingLeft: theme.spacing.unit * 6,\r\n    },\r\n    nested1SelectedItem: {\r\n        paddingLeft: theme.spacing.unit * 6,\r\n        background: '#C1C1C1',\r\n    },\r\n    nested2: {\r\n        paddingLeft: theme.spacing.unit * 8\r\n    },\r\n    nested2SelectedItem: {\r\n        paddingLeft: theme.spacing.unit * 8,\r\n        background: '#C1C1C1',\r\n    },\r\n\r\n\r\n});\r\n\r\nconst MyDrawer = React.memo(\r\n    (props) =>{\r\n        const { drawer, profile } = props.app;\r\n        const { status } = props.user;\r\n        const { name } = props.table;\r\n        const { showDrawer } = props.appActions;\r\n        const { getData, setSelected } = props.tableActions;\r\n        const { classes, location } = props;\r\n        let [secondMenuOpen, setSecondMenuOpen] = useState({});\r\n        let [thirdMenuOpen, setThirdMenuOpen] = useState({});\r\n        let [fourthMenuOpen, setFourthMenuOpen] = useState({});\r\n        let [regionList, setRegionList] = useState([]);\r\n        let [pointList, setPointList] = useState([]);\r\n        let [selectedRegion, setSelectedRegion] = useState('');\r\n        let currentPath = location.pathname.split('/')[1];\r\n\r\n        useEffect(()=>{\r\n            async function fetchData() {\r\n                setRegionList(await tableActions.getDataSimple({name: 'РегионИмя'}))\r\n                setPointList(await tableActions.getDataSimple({name: 'ТочкаСРегионом'}))\r\n            }\r\n            fetchData();\r\n        },[])\r\n        let collapse = (name)=>{\r\n            secondMenuOpen = {...secondMenuOpen}\r\n            thirdMenuOpen = {...thirdMenuOpen}\r\n            fourthMenuOpen = {...fourthMenuOpen}\r\n            let open = !secondMenuOpen[name]\r\n            let keys = Object.keys(thirdMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                thirdMenuOpen[keys[i]] = false\r\n            }\r\n            setThirdMenuOpen(thirdMenuOpen)\r\n            keys = Object.keys(fourthMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                fourthMenuOpen[keys[i]] = false\r\n            }\r\n            setFourthMenuOpen(fourthMenuOpen)\r\n            keys = Object.keys(secondMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                secondMenuOpen[keys[i]] = false\r\n            }\r\n            secondMenuOpen[name] = open\r\n            setSecondMenuOpen(secondMenuOpen)\r\n\r\n        }\r\n        let collapse1 = (name)=>{\r\n            thirdMenuOpen = {...thirdMenuOpen}\r\n            fourthMenuOpen = {...fourthMenuOpen}\r\n            let open = !thirdMenuOpen[name]\r\n            let keys = Object.keys(thirdMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                thirdMenuOpen[keys[i]] = false\r\n            }\r\n            thirdMenuOpen[name] = open\r\n            setThirdMenuOpen(thirdMenuOpen)\r\n            keys = Object.keys(fourthMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                fourthMenuOpen[keys[i]] = false\r\n            }\r\n            setFourthMenuOpen(fourthMenuOpen)\r\n\r\n        }\r\n        let collapse2 = (name)=>{\r\n            fourthMenuOpen = {...fourthMenuOpen}\r\n            let open = !fourthMenuOpen[name]\r\n            let keys = Object.keys(fourthMenuOpen)\r\n            for(let i = 0; i<keys.length; i++){\r\n                fourthMenuOpen[keys[i]] = false\r\n            }\r\n            fourthMenuOpen[name] = open\r\n            setFourthMenuOpen(fourthMenuOpen)\r\n\r\n        }\r\n        let [selectedItem, setSelectedItem] = useState({});\r\n        let collapseSelectedItem = (name)=>{\r\n            selectedItem = {...selectedItem}\r\n            let open = !selectedItem[name]\r\n            let keys = Object.keys(selectedItem)\r\n            for(let i = 0; i<keys.length; i++){\r\n                selectedItem[keys[i]] = false\r\n            }\r\n            selectedItem[name] = open\r\n            setSelectedItem(selectedItem)\r\n\r\n        }\r\n        const { authenticated } = props.user;\r\n        let variant= ''\r\n        if(mainWindow.current.offsetWidth>800)\r\n            variant= 'permanent'\r\n        return (\r\n            <div>\r\n                <Drawer\r\n                    variant= {variant}\r\n                    className={classes.drawer}\r\n                    open={drawer}\r\n                    onClose={()=>showDrawer(false)}\r\n                    classes={{paper: classes.drawerPaper,}}\r\n                >\r\n                    {\r\n                        mainWindow.current.offsetWidth>800?\r\n                            <div className={classes.toolbar}/>\r\n                        :\r\n                            null\r\n                    }\r\n                    {authenticated?\r\n                        <List>\r\n                            {\r\n                                status.status==='active'&&['реализатор', 'организатор'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{props.history.push('/profile');showDrawer(false); getData({search: '', sort: '', page: 0, name: ''}); setSelected(-1)}}>\r\n                                            <ListItemIcon>\r\n                                                <Face />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={'Профиль'} />\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'организатор'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('Данные')}}>\r\n                                            <ListItemIcon><Storage /></ListItemIcon>\r\n                                            <ListItemText primary={'Данные'} />\r\n                                            {secondMenuOpen['Данные'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['Данные']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={name==='Регион'&&currentPath===''?classes.nestedSelectedItem:classes.nested}\r\n                                                                  button key={'event'}\r\n                                                                  onClick={()=>{\r\n                                                                      collapse1('регион')\r\n                                                                      props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Регион'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><LocationCity /></ListItemIcon>\r\n                                                            <ListItemText primary={'Регион'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Точка'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('данныеТочка')}}>\r\n                                                            <ListItemIcon><LocationOn /></ListItemIcon>\r\n                                                            <ListItemText primary={'Точка'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['данныеТочка'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['данныеТочка']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['ТочкаВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Точка', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('ТочкаВсе')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                    return(\r\n                                                                        <React.Fragment key={idx}>\r\n                                                                        <ListItem className={selectedItem['Точка'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                            props.history.push('/');\r\n                                                                            showDrawer(false);\r\n                                                                            getData({search: '', sort: '', page: 0, name: 'Точка', region: element.guid});\r\n                                                                            setSelected(-1);\r\n                                                                            collapseSelectedItem('Точка'+element.guid)\r\n                                                                        }}>\r\n                                                                            <ListItemIcon><LocationOn /></ListItemIcon>\r\n                                                                            <ListItemText primary={element.name} />\r\n                                                                        </ListItem>\r\n                                                                        <Divider variant='inset'/>\r\n                                                                        </React.Fragment>\r\n                                                                    )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={name==='Организатор'&&currentPath===''?classes.nestedSelectedItem:classes.nested\r\n                                                        } button key={'event'} onClick={()=>{collapse1('организатор');props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Организатор'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><AssignmentInd /></ListItemIcon>\r\n                                                            <ListItemText primary={'Организатор'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Реализатор'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('данныеРеализатор')\r\n\r\n                                                        }}>\r\n                                                            <ListItemIcon><AssignmentInd /></ListItemIcon>\r\n                                                            <ListItemText primary={'Реализатор'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['данныеРеализатор'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['данныеРеализатор']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['РеализаторВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Реализатор', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('РеализаторВсе')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                                <ListItem className={selectedItem['Реализатор'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                    props.history.push('/');\r\n                                                                                    showDrawer(false);\r\n                                                                                    getData({search: '', sort: '', page: 0, name: 'Реализатор', region: element.guid});\r\n                                                                                    setSelected(-1);\r\n                                                                                    collapseSelectedItem('Реализатор'+element.guid)\r\n                                                                                }}>\r\n                                                                                    <ListItemIcon><AssignmentInd /></ListItemIcon>\r\n                                                                                    <ListItemText primary={element.name} />\r\n                                                                                </ListItem>\r\n                                                                                <Divider variant='inset'/>\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {/*\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Завсклада'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><AssignmentInd /></ListItemIcon>\r\n                                                            <ListItemText primary={'Завсклада'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null*/\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={name==='Машина'&&currentPath===''?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{collapse1('машина');props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Машина'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><Commute /></ListItemIcon>\r\n                                                            <ListItemText primary={'Машина'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={name==='Цена'&&currentPath===''?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{collapse1('цена');props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'Цена'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><AccountBalance /></ListItemIcon>\r\n                                                            <ListItemText primary={'Цена'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('Накладные')}}>\r\n                                            <ListItemIcon><Assignment /></ListItemIcon>\r\n                                            <ListItemText primary={'Накладные'} />\r\n                                            {secondMenuOpen['Накладные'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['Накладные']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={(currentPath=='nnvv'&&status.role==='организатор')||(name==='Накладная на вечерний возврат сегодня'&&currentPath==='')?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/nnvv')\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на вечерний возврат сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n                                                            collapse1('nnvv');\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная на вечерний возврат сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={(currentPath=='nnpt'&&status.role==='организатор')||(name==='Накладная на пустую тару сегодня'&&currentPath==='')?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/nnpt')\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на пустую тару сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n                                                            collapse1('nnpt');\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная на пустую тару сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={(currentPath=='ns1'&&status.role==='организатор')||(name==='Накладная склад №1 сегодня'&&currentPath==='')?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/ns1')\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №1 сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n                                                            collapse1('ns1');\r\n\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная склад №1 сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={(currentPath=='ns2'&&status.role==='организатор')||(name==='Накладная склад №2 сегодня'&&currentPath==='')?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/ns2')\r\n\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №2 сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n                                                            collapse1('ns2');\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная склад №2 сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={(currentPath=='oo'&&status.role==='организатор')||(name==='Отчет организатора сегодня'&&currentPath==='')?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/oo')\r\n                                                            } else {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Отчет организатора сегодня'});\r\n                                                                setSelected(-1)\r\n                                                            }\r\n                                                            collapse1('oo');\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Отчет организатора сегодня'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={(currentPath=='or'&&status.role==='реализатор')||(name==='Отчет реализатора сегодня'&&currentPath==='')?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='реализатор') {\r\n                                                                props.history.push('/or')\r\n                                                                //collapse1('Отчет реализатора сегодня')\r\n\r\n                                                            } else if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Отчет реализатора сегодня', region: profile.guidRegion});\r\n                                                                setSelected(-1)\r\n                                                                //collapse1('Отчет реализатора сегодня')\r\n                                                            } else\r\n                                                                collapse1('Отчет реализатора сегодня')\r\n                                                        }}>\r\n                                                            <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                            <ListItemText primary={'Отчет реализатора сегодня'} />\r\n                                                            {status.role==='реализатор'||status.role==='организатор'?null:thirdMenuOpen['Отчет реализатора сегодня'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Отчет реализатора сегодня']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Отчет реализатора сегодняВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={async()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Отчет реализатора сегодня', region: ''});\r\n                                                                    setSelected(-1)\r\n                                                                    collapseSelectedItem('Отчет реализатора сегодняВсе')\r\n\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    (regionList).map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Отчет реализатора сегодня'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={async()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Отчет реализатора сегодня', region: element.guid});\r\n                                                                                setSelected(-1)\r\n                                                                                collapseSelectedItem('Отчет реализатора сегодня'+element.guid)\r\n\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Receipt /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n\r\n\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('Архив')}}>\r\n                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                            <ListItemText primary={'Архив'} />\r\n                                            {secondMenuOpen['Архив'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['Архив']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на вечерний возврат'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Накладная на вечерний возврат')\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная на вечерний возврат'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Накладная на вечерний возврат'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Накладная на вечерний возврат']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Накладная на вечерний возвратВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Накладная на вечерний возврат', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('Накладная на вечерний возвратВсе')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Накладная на вечерний возврат'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на вечерний возврат', region: element.guid});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Накладная на вечерний возврат'+element.guid)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на пустую тару'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Накладная на пустую тару')\r\n\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная на пустую тару'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Накладная на пустую тару'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Накладная на пустую тару']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Накладная на пустую таруВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Накладная на пустую тару', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('Накладная на пустую таруВсе')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Накладная на пустую тару'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Накладная на пустую тару', region: element.guid});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Накладная на пустую тару'+element.guid)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №1'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Накладная склад №1')\r\n\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная склад №1'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Накладная склад №1'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Накладная склад №1']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Накладная склад №1Все']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Накладная склад №1', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('Накладная склад №1Все')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Накладная склад №1'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №1', region: element.guid});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Накладная склад №1'+element.guid)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №2'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Накладная склад №2')\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Накладная склад №2'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Накладная склад №2'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Накладная склад №2']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Накладная склад №2Все']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Накладная склад №2', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('Накладная склад №2Все')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Накладная склад №2'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Накладная склад №2', region: element.guid});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Накладная склад №2'+element.guid)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n                                                            if(status.role==='организатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Отчет организатора'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Отчет организатора')\r\n                                                        }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Отчет организатора'} />\r\n                                                            {status.role==='организатор'?null:thirdMenuOpen['Отчет организатора'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Отчет организатора']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Отчет организатораВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                    props.history.push('/');\r\n                                                                    showDrawer(false);\r\n                                                                    getData({search: '', sort: '', page: 0, name: 'Отчет организатора', region: ''});\r\n                                                                    setSelected(-1);\r\n                                                                    collapseSelectedItem('Отчет организатораВсе')\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {regionList!=undefined&&regionList.length>0?\r\n                                                                    regionList.map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Отчет организатора'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={()=>{\r\n                                                                                props.history.push('/');\r\n                                                                                showDrawer(false);\r\n                                                                                getData({search: '', sort: '', page: 0, name: 'Отчет организатора', region: element.guid});\r\n                                                                                setSelected(-1);\r\n                                                                                collapseSelectedItem('Отчет организатора'+element.guid)\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={classes.nested} button key={'event'} onClick={()=>{\r\n\r\n                                                            if(status.role==='реализатор') {\r\n                                                                props.history.push('/');\r\n                                                                showDrawer(false);\r\n                                                                getData({search: '', sort: '', page: 0, name: 'Отчет реализатора'});\r\n                                                                setSelected(-1)\r\n                                                            } else\r\n                                                                collapse1('Отчет реализатора')\r\n                                                          }}>\r\n                                                            <ListItemIcon><Archive /></ListItemIcon>\r\n                                                            <ListItemText primary={'Отчет реализатора'} />\r\n                                                            {status.role==='реализатор'?null:thirdMenuOpen['Отчет реализатора'] ? <ExpandLess /> : <ExpandMore />}\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        <Collapse in={thirdMenuOpen['Отчет реализатора']} timeout='auto' unmountOnExit>\r\n                                                            <List component='div' disablePadding>\r\n                                                                <ListItem className={selectedItem['Отчет реализатораВсе']?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={async()=>{\r\n                                                                    if(status.role==='организатор') {\r\n                                                                        props.history.push('/');\r\n                                                                        showDrawer(false);\r\n                                                                        getData({search: '', sort: '', page: 0, name: 'Отчет реализатора', point: ''});\r\n                                                                        setSelected(-1)\r\n                                                                    } else {\r\n                                                                        props.history.push('/');\r\n                                                                        showDrawer(false);\r\n                                                                        getData({search: '', sort: '', page: 0, name: 'Отчет реализатора', region: '', point: ''});\r\n                                                                        setSelected(-1);\r\n                                                                        collapseSelectedItem('Отчет реализатораВсе')\r\n                                                                    }\r\n                                                                    collapseSelectedItem('Отчет реализатораВсе')\r\n\r\n                                                                }}>\r\n                                                                    <ListItemIcon><All /></ListItemIcon>\r\n                                                                    <ListItemText primary={'Все'} />\r\n                                                                </ListItem>\r\n                                                                <Divider variant='inset'/>\r\n                                                                {(status.role==='организатор'?pointList[profile.guidRegion]:regionList)!=undefined&&(status.role==='организатор'?pointList[profile.guidRegion]:regionList).length>0?\r\n                                                                    (status.role==='организатор'?pointList[profile.guidRegion]:regionList).map((element, idx)=>{\r\n                                                                        return(\r\n                                                                            <React.Fragment key={idx}>\r\n                                                                            <ListItem className={selectedItem['Отчет реализатора'+element.guid]?classes.nested1SelectedItem:classes.nested1} button key={'event'} onClick={async()=>{\r\n                                                                                if(status.role==='организатор') {\r\n                                                                                    props.history.push('/');\r\n                                                                                    showDrawer(false);\r\n                                                                                    getData({search: '', sort: '', page: 0, name: 'Отчет реализатора', point: element.guid});\r\n                                                                                    setSelected(-1)\r\n                                                                                } else {\r\n                                                                                    setSelectedRegion(element.guid)\r\n                                                                                    collapse2('Отчет реализатора'+element.guid)\r\n                                                                                }\r\n                                                                                collapseSelectedItem('Отчет реализатора'+element.guid)\r\n\r\n                                                                            }}>\r\n                                                                                <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                <ListItemText primary={element.name} />\r\n                                                                                {status.role==='организатор'?null:fourthMenuOpen['Отчет реализатора'+element.guid] ? <ExpandLess /> : <ExpandMore />}\r\n                                                                            </ListItem>\r\n                                                                            <Divider variant='inset'/>\r\n                                                                            {selectedRegion===element.guid?\r\n                                                                                <Collapse in={fourthMenuOpen['Отчет реализатора'+element.guid]} timeout='auto' unmountOnExit>\r\n                                                                                    <List component='div' disablePadding>\r\n                                                                                        <ListItem className={selectedItem['Отчет реализатораВсеВсе']?classes.nested2SelectedItem:classes.nested2} button key={'event'} onClick={()=>{\r\n                                                                                            props.history.push('/');\r\n                                                                                            showDrawer(false);\r\n                                                                                            getData({search: '', sort: '', page: 0, name: 'Отчет реализатора', region: element.guid, point: ''});\r\n                                                                                            setSelected(-1);\r\n                                                                                            collapseSelectedItem('Отчет реализатораВсеВсе')\r\n                                                                                        }}>\r\n                                                                                            <ListItemIcon><All /></ListItemIcon>\r\n                                                                                            <ListItemText primary={'Все'} />\r\n                                                                                        </ListItem>\r\n                                                                                        <Divider variant='inset'/>\r\n                                                                                        {pointList[selectedRegion]!=undefined&&pointList[selectedRegion].length>0?\r\n                                                                                            pointList[selectedRegion].map((element1, idx)=>{\r\n                                                                                                return(\r\n                                                                                                    <React.Fragment key={idx}>\r\n                                                                                                    <ListItem className={selectedItem['Отчет реализатора'+element1.guid]?classes.nested2SelectedItem:classes.nested2} button key={'event'} onClick={()=>{\r\n                                                                                                        props.history.push('/');\r\n                                                                                                        showDrawer(false);\r\n                                                                                                        getData({search: '', sort: '', page: 0, name: 'Отчет реализатора', region: element.guid, point: element1.guid});\r\n                                                                                                        setSelected(-1);\r\n                                                                                                        collapseSelectedItem('Отчет реализатора'+element1.guid)\r\n                                                                                                    }}>\r\n                                                                                                        <ListItemIcon><Archive /></ListItemIcon>\r\n                                                                                                        <ListItemText primary={element1.name} />\r\n                                                                                                    </ListItem>\r\n                                                                                                    <Divider variant='inset'/>\r\n                                                                                                    </React.Fragment>\r\n                                                                                                )\r\n                                                                                            }):null}\r\n                                                                                    </List>\r\n                                                                                </Collapse>\r\n                                                                                :\r\n                                                                                null\r\n                                                                            }\r\n\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    }):null}\r\n                                                            </List>\r\n                                                        </Collapse>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('Статистика')}}>\r\n                                            <ListItemIcon><Assessment /></ListItemIcon>\r\n                                            <ListItemText primary={'Статистика'} />\r\n                                            {secondMenuOpen['Статистика'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['Статистика']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={name==='План'&&currentPath===''?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{collapse1('план');props.history.push('/');showDrawer(false); getData({search: '', sort: '', page: 0, name: 'План'}); setSelected(-1)}}>\r\n                                                            <ListItemIcon><Event /></ListItemIcon>\r\n                                                            <ListItemText primary={'План'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={currentPath==='statistic'?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{collapse1('статистика');props.history.push('/statistic');showDrawer(false);setSelected(-1)}}>\r\n                                                            <ListItemIcon><Timeline /></ListItemIcon>\r\n                                                            <ListItemText primary={'Статистика'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={currentPath==='ro'?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{collapse1('рейтингРегионов');props.history.push('/ro');showDrawer(false);setSelected(-1)}}>\r\n                                                            <ListItemIcon><List1 /></ListItemIcon>\r\n                                                            <ListItemText primary={'Рейтинг регионов'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'реализатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={currentPath==='rr'?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{collapse1('рейтингТочек');props.history.push('/rr');showDrawer(false);setSelected(-1)}}>\r\n                                                            <ListItemIcon><List1 /></ListItemIcon>\r\n                                                            <ListItemText primary={'Рейтинг точек'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                {\r\n                                                    ['admin', 'организатор', 'реализатор'].includes(status.role)?\r\n                                                        <>\r\n                                                        <ListItem className={currentPath==='geo'?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{collapse1('геолокация');props.history.push('/geo');showDrawer(false);setSelected(-1)}}>\r\n                                                            <ListItemIcon><GpsFixed/></ListItemIcon>\r\n                                                            <ListItemText primary={'Геолокация'} />\r\n                                                        </ListItem>\r\n                                                        <Divider variant='inset'/>\r\n                                                        </>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                status.status==='active'&&['admin', 'реализатор', 'организатор', 'завсклада'].includes(status.role)?\r\n                                    <div>\r\n                                        <ListItem button key={'event'} onClick={()=>{collapse('информация')}}>\r\n                                            <ListItemIcon><Info /></ListItemIcon>\r\n                                            <ListItemText primary={'Информация'} />\r\n                                            {secondMenuOpen['информация'] ? <ExpandLess /> : <ExpandMore />}\r\n                                        </ListItem>\r\n                                        <Divider variant='inset'/>\r\n                                        <Collapse in={secondMenuOpen['информация']} timeout='auto' unmountOnExit>\r\n                                            <List component='div' disablePadding>\r\n                                                <ListItem className={(name==='Блог'&&currentPath===''&&status.role==='admin')||currentPath=='blog'?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{\r\n                                                    if(status.role === 'admin') {\r\n                                                        props.history.push('/');\r\n                                                        getData({search: '', sort: '', page: 0, name: 'Блог'});\r\n                                                    } else {\r\n                                                        props.history.push('/blog');\r\n                                                    }\r\n                                                    showDrawer(false);\r\n                                                    collapse1('blog');\r\n\r\n                                                    setSelected(-1);\r\n                                                }}>\r\n                                                    <ListItemIcon><ArtTrack /></ListItemIcon>\r\n                                                    <ListItemText primary={'Новости'} />\r\n                                                </ListItem>\r\n                                                <Divider variant='inset'/>\r\n                                                <ListItem className={(name==='FAQ'&&currentPath===''&&status.role==='admin')||currentPath=='FAQ'?classes.nestedSelectedItem:classes.nested} button key={'event'} onClick={()=>{\r\n                                                    if(status.role === 'admin') {\r\n                                                        props.history.push('/');\r\n                                                        getData({search: '', sort: '', page: 0, name: 'FAQ'});\r\n                                                    } else {\r\n                                                        props.history.push('/FAQ');\r\n                                                    }\r\n                                                    collapse1('FAQ');\r\n                                                    showDrawer(false);\r\n\r\n                                                    setSelected(-1);\r\n                                                }}>\r\n                                                    <ListItemIcon><QuestionAnswer /></ListItemIcon>\r\n                                                    <ListItemText primary={'FAQ'} />\r\n                                                </ListItem>\r\n                                                <Divider variant='inset'/>\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                        </List>\r\n                        :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n        table: state.table\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n        tableActions: bindActionCreators(tableActions, dispatch),\r\n    }\r\n}\r\n\r\nMyDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(MyDrawer));"],"sourceRoot":""}