{"version":3,"sources":["pages/Plan.js","redux/constants/other.js"],"names":["width","mainWindow","current","offsetWidth","width1","Plan","React","memo","props","useEffect","Object","C_projects_shoro_shoro_admin_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","C_projects_shoro_shoro_admin_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","_regions","_data","i","points","_data1","i1","_data2","or","_i","wrap","_context","prev","next","status","includes","role","history","push","selected","regions","tableActions","name","sent","length","data","region","plan","setRegions","date","JSON","parse","setDate","setPlan","norma","setCurrent","setId","_id","profile","setProfile","stop","this","_props$tableActions","setSelected","addData","setData","_props$table","table","classes","user","_useState","useState","_useState2","C_projects_shoro_shoro_admin_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","_useState3","_useState4","_useState5","_useState6","id","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","Fragment","material_ui_pickers__WEBPACK_IMPORTED_MODULE_13__","views","label","className","textField","value","onChange","class","message","style","display","marginRight","verticalAlign","fontWeight","undefined","map","element","idx","_material_ui_core_ExpansionPanel__WEBPACK_IMPORTED_MODULE_15___default","_material_ui_core_ExpansionPanelSummary__WEBPACK_IMPORTED_MODULE_16___default","expandIcon","_material_ui_icons_ExpandMore__WEBPACK_IMPORTED_MODULE_19___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_18___default","heading","secondaryHeading","color","idx1","_material_ui_core_ExpansionPanelDetails__WEBPACK_IMPORTED_MODULE_17___default","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_9___default","marginTop","type","margin","event","point","parseInt","target","isNaN","handlePoints","react_router_dom__WEBPACK_IMPORTED_MODULE_11__","to","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_10___default","variant","onClick","search","sort","page","stringify","month","Date","getMonth","getYear","button","Event","propTypes","PropTypes","object","isRequired","withStyles","theme","spacing","unit","textFieldSmall","marginLeft","urls","maxHeight","overflow","marginBottom","MuiPickersToolbar","toolbar","backgroundColor","MuiPickersModal","dialogAction","fontSize","typography","pxToRem","flexBasis","flexShrink","palette","text","secondary","connect","state","dispatch","bindActionCreators","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/7.31c64967.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as tableActions from '../redux/actions/table'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom'\nimport { mainWindow } from '../App'\nimport { DatePicker } from 'material-ui-pickers';\nimport { format } from 'date-fns'\nimport ruLocale from 'date-fns/locale/ru';\nimport { month } from '../redux/constants/other'\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\nconst width = mainWindow.current.offsetWidth>800? 500: 240;\nconst width1 = mainWindow.current.offsetWidth>800? 240: 120;\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    textFieldSmall: {\n        display: 'inline-block',\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: width1\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: width,\n    },\n    urls: {\n        margin: theme.spacing.unit,\n        width: width,\n        maxHeight: 100,\n        overflow: 'auto'\n    },\n    message: {\n        width: width,\n        marginTop: theme.spacing.unit,\n        marginBottom: theme.spacing.unit,\n        marginLeft: 'calc((100% - '+width+'px)/2)',\n        marginRight: 'calc((100% - '+width+'px)/2)'\n    },\n    MuiPickersToolbar: {\n        toolbar: {\n            backgroundColor: '#000',\n        },\n    },\n    MuiPickersModal: {\n        dialogAction: {\n            color: '#000',\n        },\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n});\n\nconst Plan = React.memo(\n    (props) =>{\n        useEffect(async ()=>{\n            if (!(status.status==='active'&&['admin', 'организатор'].includes(status.role))) {\n                props.history.push('/')\n            }\n            if(selected===-1) {\n                let regions = [], _data = await tableActions.getDataSimple({name: 'РегионИмя'})\n                for (let i = 0; i < _data.length; i++) {\n                    let points = [], _data1 = await tableActions.getDataSimple({name: 'ТочкаПоРегиону', data: {region: _data[i]}})\n                    for (let i1 = 0; i1 < _data1.length; i1++) {\n                        points[i1] = {name: _data1[i1], plan: 0, current: 0}\n                    }\n                    regions[i] = {name: _data[i], plan: 0, current: 0, points: points}\n                }\n                setRegions(regions)\n            } else {\n                let _data = await tableActions.getDataSimple({name: 'ПланПоДате', data: {date: data[selected][0]}})\n                setRegions(JSON.parse(_data.regions))\n                setDate(_data.date)\n                setPlan(_data.norma)\n                setCurrent(_data.current)\n                setId(_data._id)\n                if('организатор'===status.role) {\n                    let or = JSON.parse(_data.regions)\n                    for (let i = 0; i < or.length; i++) {\n                        if (profile.region === or[i].name){\n                            setPlan(JSON.parse(_data.regions)[0].plan)\n                            setCurrent(JSON.parse(_data.regions)[0].current)\n                        }\n                    }\n\n                    _data = await tableActions.getDataSimple({name: 'Профиль'})\n                    setProfile(_data)\n                }\n            }\n        },[])\n        const { setSelected, addData, setData } = props.tableActions;\n        const { selected, data } = props.table;\n        const { classes } = props;\n        const { status } = props.user;\n        let [date, setDate] = useState('2019-01-01');\n        let [profile, setProfile] = useState({});\n        let [id, setId] = useState('2019-01-01');\n        let [current, setCurrent] = useState(0);\n        let [plan, setPlan] = useState(0);\n        let [regions, setRegions] = useState([]);\n        let handlePoints =  (event, region, point) => {\n            let plan = parseInt(event.target.value)\n            regions[region].points[point].plan = isNaN(plan)?0:plan\n            regions[region].plan = 0\n            for(let i = 0; i<regions[region].points.length; i++) {\n                regions[region].plan += regions[region].points[i].plan\n            }\n            plan = 0\n            for(let i = 0; i<regions.length; i++) {\n                plan += regions[i].plan\n            }\n            setRegions(regions)\n            setPlan(plan)\n        };\n         return (\n            <div>\n                <br/>\n                <br/>\n                {\n                    selected===-1?\n                        <>\n                        <DatePicker\n                            views={['year', 'month']}\n                            label='Дата'\n                            className={classes.textField}\n                            value={date}\n                            onChange={setDate}\n                        />\n                        <br/>\n                        </>\n                        :\n                        <div class={classes.message}>\n                            <h3>\n                                {date}\n                            </h3>\n                        </div>\n                }\n                <div className={classes.message}>\n                    <div style={{display: 'inline-block', marginRight: '10px', verticalAlign: 'middle'}}>\n                        Цель: <div style={{display: 'inline-block', fontWeight: 'bold'}}>{plan}</div>\n                    </div>\n                    <div style={{display: 'inline-block', marginRight: '10px', verticalAlign: 'middle'}}>\n                        Прогресс: <div style={{display: 'inline-block', fontWeight: 'bold'}}>{current}</div>\n                    </div>\n                </div>\n                <br/>\n                {regions!=undefined&&regions.length>0?\n                    regions.map((element, idx)=>{\n                    if(status.role=='admin'||(status.role=='организатор'&&profile.region===element.name))\n                        return(\n                            <ExpansionPanel>\n                                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                    <Typography className={classes.heading}>{element.name}</Typography>\n                                    <Typography className={classes.secondaryHeading}>\n                                        Цель: <b style={{color: 'black'}}>{element.plan}</b>&nbsp;&nbsp;\n                                        Прогресс: <b style={{color: 'black'}}>{element.current}</b>\n                                    </Typography>\n                                </ExpansionPanelSummary>\n                                 {element.points!=undefined&&element.points.length>0?\n                                     element.points.map((element, idx1)=>{\n                                         return(\n                                             <ExpansionPanelDetails>\n                                                 <center style={{width: '100%'}}>\n                                                     <b>{element.name}</b><br/>\n                                                     <div style={{width: '40px', marginRight: '10px', display: 'inline-block', verticalAlign: 'middle'}}>\n                                                        Цель:\n                                                     </div>\n                                                     <TextField\n                                                         style={{marginTop: '12px', marginRight: '10px', width: '70px', display: 'inline-block', verticalAlign: 'middle'}}\n                                                         type='login'\n                                                         margin='normal'\n                                                         value={element.plan}\n                                                         onChange={(event)=>{handlePoints(event, idx, idx1)}}\n                                                     />\n                                                     <div style={{display: 'inline-block', marginRight: '10px', verticalAlign: 'middle'}}>\n                                                         Прогресс: <div style={{display: 'inline-block', fontWeight: 'bold'}}>{element.current}</div>\n                                                     </div>\n                                                 </center>\n                                             </ExpansionPanelDetails>\n                                         )\n                                        })\n                                        :\n                                        null\n                                    }\n                            </ExpansionPanel>\n                            )\n                    }):null\n                }\n                <br/>\n                <div>\n                    <Link className='link' to={''}>\n                        <Button variant='contained' color='primary' onClick={()=>{\n                            if(selected===-1) {\n                                addData({\n                                    search: '', sort: '', page: 0, name: 'План', data: {\n                                        norma: plan,\n                                        regions: JSON.stringify(regions),\n                                        date: month[(new Date(date)).getMonth()]+' '+(1900+(new Date(date)).getYear())\n                                    }\n                                });\n                            } else\n                                setData({id: id, search: '', sort: '', page: 0, name: 'План', data: {\n                                    norma: plan,\n                                    regions: JSON.stringify(regions)\n                                }});\n                            setSelected(-1)}} className={classes.button}>\n                            Сохранить\n                        </Button>\n                    </Link>\n                    <Link className='link' to={''} onClick={()=>{setSelected(-1)}}>\n                        <Button variant='contained' color='secondary' className={classes.button}>\n                            Отмена\n                        </Button>\n                    </Link>\n                </div>\n            </div>\n        );\n  })\n\nfunction mapStateToProps (state) {\n    return {\n        user: state.user,\n        table: state.table,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        tableActions: bindActionCreators(tableActions, dispatch),\n    }\n}\n\nEvent.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Plan));\n","export const month = [\r\n    'январь',\r\n    'февраль',\r\n    'март',\r\n    'апрель',\r\n    'май',\r\n    'июнь',\r\n    'июль',\r\n    'август',\r\n    'сентябрь',\r\n    'октябрь',\r\n    'ноябрь',\r\n    'декабрь'\r\n]\r\n"],"sourceRoot":""}