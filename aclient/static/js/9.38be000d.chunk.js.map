{"version":3,"sources":["page/Cinema.js"],"names":["Cinema","React","memo","props","lang","app","_useState","useState","_useState2","Object","C_projects_biletiki_biletiki_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","soon","setSoon","_useState3","_useState4","now","setNow","getNow","_ref","C_projects_biletiki_biletiki_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_projects_biletiki_biletiki_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","_now","data","wrap","_context","prev","next","getOther","name","skip","length","sent","filter","element","_id","concat","console","log","stop","this","apply","arguments","useEffect","_callee2","_context2","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","map","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","onClick","scrollToTop","to","src","image","alt","genre","imageThumbnail","onLoad","e","target","includes","connect","state","dispatch","appActions","bindActionCreators"],"mappings":"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","file":"static/js/9.38be000d.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { getOther } from '../redux/actions/app'\r\nimport { connect } from 'react-redux'\r\nimport * as appActions from '../redux/actions/app'\r\nimport { bindActionCreators } from 'redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { scrollToTop } from '../App'\r\n\r\nconst Cinema = React.memo(\r\n    (props) =>{\r\n        const { lang } = props.app;\r\n        let [soon, setSoon] = useState([]);\r\n        let [now, setNow] = useState([]);\r\n        let getNow = async () => {\r\n            let _now = now;\r\n            let data = await getOther({name: 'КиноСейчас', data: {skip: _now.length}});\r\n            if(data.length>0&&_now.filter(element => element._id === data[0]._id).length===0){\r\n                _now = _now.concat(data);\r\n                console.log(_now)\r\n                setNow(_now);\r\n            }\r\n        }\r\n        useEffect(async ()=>{\r\n            let data = await getOther({name: 'КиноСкоро'});\r\n            setSoon(data);\r\n            data = await getOther({name: 'КиноСейчас', data: {skip: 0}});\r\n            setNow(data);\r\n        },[]);\r\n        return (\r\n                <main className='main main-kino'>\r\n                    <div className='container'>\r\n                        <div className='row'>\r\n                            <div className='col-xl-12 heading'>\r\n                                <div className='heading-title_wrap heading-title_wrap-kino'>\r\n                                    <h2>\r\n                                        <span>{lang==='ru'? 'Сегодня в кино' : 'Кинотеатрында бүгүн'}</span>\r\n                                    </h2>\r\n                                </div>\r\n                                <div className='heading-title_line' />\r\n                            </div>{/* \\-heading*/}\r\n                        </div>{/* \\-row */}\r\n                        <div className='movies'>\r\n                            <div className='row movies-row'>\r\n                                {now.length>0?now.map((element) => {\r\n                                    return(\r\n                                        <div className='col-12 col-sm-4 col-md-3 movie-wrap'>\r\n                                            <div className='movie'>\r\n                                                <div className='movie_image'>\r\n                                                    <Link onClick={()=>{scrollToTop()}} to={'/movie/'+element.name}>\r\n                                                        <a>\r\n                                                            <img src={element.image} alt />\r\n                                                        </a>\r\n                                                    </Link>\r\n                                                </div>\r\n                                                <div className='movie-info'>\r\n                                                    <div className='movie_title'>\r\n                                                        <Link onClick={()=>{scrollToTop()}} to={'/movie/'+element.name}>\r\n                                                            <a>{element.name}</a>\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                    <div className='movie_genre'>\r\n                                                        {element.genre}\r\n                                                    </div>\r\n                                                    <div className='movie_country'>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }):null}\r\n                            </div>\r\n                        </div>\r\n                        <div className='row load-more-wrap'>\r\n                            <div className='load-more-wrap'>\r\n                                <div className='col-12 load-more'>\r\n                                    <i className='load-more_loader load_more_loader_kino' />\r\n                                    <div className='load-more_text-cinema' onClick={()=>{getNow()}}>{lang==='ru'? 'Загрузить еще' : 'Дагы'}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row link-baner-wrap'>\r\n                            <div className='col-12'>\r\n                                <div className='link-baner'>\r\n                                    <a>\r\n                                        <img src='./img/movies-img/link-baner.jpg' alt />\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-xl-12 heading'>\r\n                                <div className='heading-title_wrap heading-title_wrap-kino'>\r\n                                    <h2>\r\n                                        <span>{lang==='ru'? 'Скоро в кино' : 'Киного жакында'}</span>\r\n                                    </h2>\r\n                                </div>\r\n                                <div className='heading-title_line' />\r\n                            </div>{/* \\-heading*/}\r\n                        </div>{/* \\-row */}\r\n                        <div className='movies'>\r\n                            <div className='row movies-row'>\r\n                                {soon.length>0?soon.map((element) => {\r\n                                    return(\r\n                                    <div className='col-12 col-sm-4 col-md-3 movie-wrap'>\r\n                                        <div className='movie'>\r\n                                            <div className='movie_image'>\r\n                                                <a>\r\n                                                    <img src={element.imageThumbnail} onLoad={(e)=>{if(e.target.src.includes('thumbnail')){e.target.src=element.image}}} alt />\r\n                                                </a>\r\n                                            </div>\r\n                                            <div className='movie-info'>\r\n                                                <div className='movie_title'>\r\n                                                    <a>{element.name}</a>\r\n                                                </div>\r\n                                                <div className='movie_genre'>\r\n                                                    {element.genre}\r\n                                                </div>\r\n                                                <div className='movie_country'>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    )\r\n                                }):null}\r\n                            </div>\r\n                        </div>{/* \\-movies*/}\r\n                    </div>\r\n                </main>\r\n            );\r\n    })\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cinema);\r\n"],"sourceRoot":""}