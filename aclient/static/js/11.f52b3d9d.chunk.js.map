{"version":3,"sources":["page/Profile.js"],"names":["Profile","React","memo","props","lang","app","user","authenticated","history","push","_useState","useState","_useState2","Object","C_projects_biletiki_biletiki_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","pass","setPass","_useState3","_useState4","name","setName","_useState5","_useState6","surname","setSurname","_useState7","_useState8","email","setEmail","_useState9","_useState10","phone","setPhone","_useState11","_useState12","balance","setBalance","_useState13","_useState14","wallet","setWallet","setProfile","_ref","C_projects_biletiki_biletiki_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_projects_biletiki_biletiki_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","data","wrap","_context","prev","next","length","getSecure","phonenumber","password","sent","window","location","reload","alert","stop","this","apply","arguments","useEffect","_callee2","_context2","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","to","value","onChange","event","target","type","placeholder","readonly","htmlFor","Fragment","href","defaultValue","onClick","connect","state","dispatch","appActions","bindActionCreators"],"mappings":"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","file":"static/js/11.f52b3d9d.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport * as appActions from '../redux/actions/app'\r\nimport { bindActionCreators } from 'redux'\r\nimport { getSecure } from '../redux/actions/app'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Profile = React.memo(\r\n    (props) =>{\r\n        const { lang } = props.app;\r\n        const { authenticated } = props.user;\r\n        if(!authenticated) props.history.push('/');\r\n        let [pass, setPass] = useState('');\r\n        let handlePass =  (event) => {\r\n            setPass(event.target.value)\r\n        };\r\n        let [name, setName] = useState('');\r\n        let handleName =  (event) => {\r\n            setName(event.target.value)\r\n        };\r\n        let [surname, setSurname] = useState('');\r\n        let handleSurname =  (event) => {\r\n            setSurname(event.target.value)\r\n        };\r\n        let [email, setEmail] = useState('');\r\n        let handleEmail =  (event) => {\r\n            setEmail(event.target.value)\r\n        };\r\n        let [phone, setPhone] = useState('');\r\n        let handlePhone =  (event) => {\r\n            setPhone(event.target.value)\r\n        };\r\n        let [balance, setBalance] = useState('');\r\n        let [wallet, setWallet] = useState('');\r\n        let setProfile = async () => {\r\n            if(email.length>0&&name.length>0&&surname.length>0&&phone.length>0){\r\n                let data = await getSecure({name: 'ИзменитьПрофиль', data: {email: email, name: name, surname: surname, phonenumber: phone, password: pass}})\r\n                await setEmail(data.email)\r\n                await setSurname(data.surname)\r\n                await setName(data.name)\r\n                await setPhone(data.phonenumber)\r\n                await setPass('')\r\n                await window.location.reload();\r\n            } else alert( 'Заполните все поля!!!' );\r\n        };\r\n        useEffect(async ()=>{\r\n            let data = await getSecure({name: 'Профиль'})\r\n            setEmail(data.email)\r\n            setSurname(data.surname)\r\n            setName(data.name)\r\n            setPhone(data.phonenumber)\r\n            data = await getSecure({name: 'Баланс'})\r\n            setWallet(data.wallet)\r\n            setBalance(data.balance)\r\n        },[]);\r\n        return (\r\n            <div className='main-buy page-profile'>\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-12 page-menu-wrap'>\r\n                            <ul className='nav page-menu'>\r\n                                <li className='active'><a>{lang==='ru'? 'Профиль' : 'Профиль'}</a></li>\r\n                                <li><Link to='/historyevent'><a>{lang==='ru'? 'Заказы мероприятия' : 'Буйруктар ченөө'}</a></Link></li>\r\n                                <li><Link to='/historycinema'><a>{lang==='ru'? 'Заказы кино' : 'Буйруктар кино'}</a></Link></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-12 col-md-5'>\r\n                            <fieldset className='fields-change-pass'>\r\n                                <legend>{lang==='ru'? 'Изменение пароля' : 'Пароль өзгөртүү'}</legend>\r\n                                <div className='form-group'>\r\n                                    <input value={pass} onChange={handlePass} className='form-control' type='text' placeholder={lang==='ru'? 'Новый пароль' : 'Пароль жаңы'} />\r\n                                </div>\r\n                            </fieldset>\r\n                            <fieldset className='fields-contacts'>\r\n                                <legend>{lang==='ru'? 'Контактные данные' : 'Байланыш маалыматтары'}</legend>\r\n                                <div className='form-group'>\r\n                                    <input value={name} onChange={handleName} className='form-control' type='text' placeholder={lang==='ru'? 'Имя' : 'Ысым'} />\r\n                                </div>\r\n                                <div className='form-group'>\r\n                                    <input value={surname} onChange={handleSurname} className='form-control' type='text' placeholder={lang==='ru'? 'Фамилия' : 'Фамилия'} />\r\n                                </div>\r\n                                <div className='form-group'>\r\n                                    <input value={email} onChange={handleEmail} className='form-control' type='text' placeholder='Email' />\r\n                                </div>\r\n                                <div className='form-group'>\r\n                                    <input value={phone} onChange={handlePhone} className='form-control' type='text' placeholder={lang==='ru'? 'Номер телефона' : 'Телефон номуру'} />\r\n                                </div>\r\n                                <div className='form-group'>\r\n                                    <input value={'Кошелек: '+wallet} className='form-control' type='text' placeholder={lang==='ru'? 'Кошелек' : 'Кошелек'} readonly/>\r\n                                </div>\r\n                                <div className='form-group'>\r\n                                    <input value={'Баланс: '+balance+' сом'} className='form-control' type='text' placeholder={lang==='ru'? 'Баланс' : 'Баланс'} readonly/>\r\n                                </div>\r\n                            </fieldset>\r\n                            <fieldset className='fields-agreement'>\r\n                                <legend>{lang==='ru'? 'Условия договора' : 'Келишимдин шарттары'}</legend>\r\n                                <div className='checkbox icheck form-group'>\r\n                                    <label htmlFor='flat-checkbox-1' className='icheck'>\r\n                                        {lang==='ru'? <>Согласен с <a href='#'>Правилами пользования интернет магазина</a></> : <>Мен колдонуу <a href='#'> онлайн дүкөндөн шарттары менен макул</a></>}\r\n                                    </label>\r\n                                </div>\r\n                            </fieldset>\r\n                            <div className='form-group field-button'>\r\n                                <input className='btn btn-primary' type='submit' defaultValue={lang==='ru'? 'Сохранить изменения' : 'Сактоо өзгөртүүлөрдү'} onClick={()=>{setProfile()}} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    })\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n"],"sourceRoot":""}